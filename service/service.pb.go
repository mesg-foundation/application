// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	Service
	Task
	Fee
	Event
	Parameter
	Dependency
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Visibility int32

const (
	Visibility_VISIBILITY_ALL     Visibility = 0
	Visibility_VISIBILITY_USERS   Visibility = 1
	Visibility_VISIBILITY_WORKERS Visibility = 2
	Visibility_VISIBILITY_NONE    Visibility = 3
)

var Visibility_name = map[int32]string{
	0: "VISIBILITY_ALL",
	1: "VISIBILITY_USERS",
	2: "VISIBILITY_WORKERS",
	3: "VISIBILITY_NONE",
}
var Visibility_value = map[string]int32{
	"VISIBILITY_ALL":     0,
	"VISIBILITY_USERS":   1,
	"VISIBILITY_WORKERS": 2,
	"VISIBILITY_NONE":    3,
}

func (x Visibility) String() string {
	return proto.EnumName(Visibility_name, int32(x))
}
func (Visibility) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Publish int32

const (
	Publish_PUBLISH_ALL       Publish = 0
	Publish_PUBLISH_SOURCE    Publish = 1
	Publish_PUBLISH_CONTAINER Publish = 2
	Publish_PUBLISH_NONE      Publish = 3
)

var Publish_name = map[int32]string{
	0: "PUBLISH_ALL",
	1: "PUBLISH_SOURCE",
	2: "PUBLISH_CONTAINER",
	3: "PUBLISH_NONE",
}
var Publish_value = map[string]int32{
	"PUBLISH_ALL":       0,
	"PUBLISH_SOURCE":    1,
	"PUBLISH_CONTAINER": 2,
	"PUBLISH_NONE":      3,
}

func (x Publish) String() string {
	return proto.EnumName(Publish_name, int32(x))
}
func (Publish) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Type int32

const (
	Type_STRING  Type = 0
	Type_INT     Type = 1
	Type_FLOAT   Type = 2
	Type_BOOLEAN Type = 3
	Type_OBJECT  Type = 4
)

var Type_name = map[int32]string{
	0: "STRING",
	1: "INT",
	2: "FLOAT",
	3: "BOOLEAN",
	4: "OBJECT",
}
var Type_value = map[string]int32{
	"STRING":  0,
	"INT":     1,
	"FLOAT":   2,
	"BOOLEAN": 3,
	"OBJECT":  4,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Service struct {
	Name         string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Visibility   Visibility             `protobuf:"varint,3,opt,name=visibility,enum=service.Visibility" json:"visibility,omitempty"`
	Publish      Publish                `protobuf:"varint,4,opt,name=publish,enum=service.Publish" json:"publish,omitempty"`
	Tasks        map[string]*Task       `protobuf:"bytes,5,rep,name=tasks" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Events       map[string]*Event      `protobuf:"bytes,6,rep,name=events" json:"events,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Dependencies map[string]*Dependency `protobuf:"bytes,7,rep,name=dependencies" json:"dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetVisibility() Visibility {
	if m != nil {
		return m.Visibility
	}
	return Visibility_VISIBILITY_ALL
}

func (m *Service) GetPublish() Publish {
	if m != nil {
		return m.Publish
	}
	return Publish_PUBLISH_ALL
}

func (m *Service) GetTasks() map[string]*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Service) GetEvents() map[string]*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Service) GetDependencies() map[string]*Dependency {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type Task struct {
	Name        string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Verifiable  bool                  `protobuf:"varint,3,opt,name=verifiable" json:"verifiable,omitempty"`
	Payable     bool                  `protobuf:"varint,4,opt,name=payable" json:"payable,omitempty"`
	Fees        *Fee                  `protobuf:"bytes,5,opt,name=fees" json:"fees,omitempty"`
	Inputs      map[string]*Parameter `protobuf:"bytes,6,rep,name=inputs" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Outputs     map[string]*Parameter `protobuf:"bytes,7,rep,name=outputs" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetVerifiable() bool {
	if m != nil {
		return m.Verifiable
	}
	return false
}

func (m *Task) GetPayable() bool {
	if m != nil {
		return m.Payable
	}
	return false
}

func (m *Task) GetFees() *Fee {
	if m != nil {
		return m.Fees
	}
	return nil
}

func (m *Task) GetInputs() map[string]*Parameter {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Task) GetOutputs() map[string]*Parameter {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type Fee struct {
	Developer string `protobuf:"bytes,1,opt,name=developer" json:"developer,omitempty"`
	Validator string `protobuf:"bytes,2,opt,name=validator" json:"validator,omitempty"`
	Executor  string `protobuf:"bytes,3,opt,name=executor" json:"executor,omitempty"`
	Emittors  string `protobuf:"bytes,4,opt,name=emittors" json:"emittors,omitempty"`
}

func (m *Fee) Reset()                    { *m = Fee{} }
func (m *Fee) String() string            { return proto.CompactTextString(m) }
func (*Fee) ProtoMessage()               {}
func (*Fee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Fee) GetDeveloper() string {
	if m != nil {
		return m.Developer
	}
	return ""
}

func (m *Fee) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *Fee) GetExecutor() string {
	if m != nil {
		return m.Executor
	}
	return ""
}

func (m *Fee) GetEmittors() string {
	if m != nil {
		return m.Emittors
	}
	return ""
}

type Event struct {
	Name        string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Data        map[string]*Parameter `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetData() map[string]*Parameter {
	if m != nil {
		return m.Data
	}
	return nil
}

type Parameter struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Type        Type   `protobuf:"varint,3,opt,name=type,enum=service.Type" json:"type,omitempty"`
	Optional    bool   `protobuf:"varint,4,opt,name=optional" json:"optional,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Parameter) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_STRING
}

func (m *Parameter) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

type Dependency struct {
	Key     string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Image   string   `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Volumes []string `protobuf:"bytes,3,rep,name=volumes" json:"volumes,omitempty"`
	Ports   []string `protobuf:"bytes,4,rep,name=ports" json:"ports,omitempty"`
	Command string   `protobuf:"bytes,5,opt,name=command" json:"command,omitempty"`
}

func (m *Dependency) Reset()                    { *m = Dependency{} }
func (m *Dependency) String() string            { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()               {}
func (*Dependency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Dependency) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Dependency) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Dependency) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Dependency) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Dependency) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func init() {
	proto.RegisterType((*Service)(nil), "service.Service")
	proto.RegisterType((*Task)(nil), "service.Task")
	proto.RegisterType((*Fee)(nil), "service.Fee")
	proto.RegisterType((*Event)(nil), "service.Event")
	proto.RegisterType((*Parameter)(nil), "service.Parameter")
	proto.RegisterType((*Dependency)(nil), "service.Dependency")
	proto.RegisterEnum("service.Visibility", Visibility_name, Visibility_value)
	proto.RegisterEnum("service.Publish", Publish_name, Publish_value)
	proto.RegisterEnum("service.Type", Type_name, Type_value)
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x6f, 0xea, 0x56,
	0x10, 0x8d, 0xb1, 0xc1, 0x61, 0x20, 0xc4, 0x99, 0xa4, 0x95, 0x4b, 0xa3, 0x8a, 0xd2, 0x2e, 0x68,
	0x54, 0x21, 0xe5, 0x63, 0x51, 0x75, 0x53, 0x41, 0x62, 0x52, 0x37, 0xd4, 0x8e, 0x8c, 0x93, 0xa8,
	0xab, 0xea, 0x02, 0x37, 0xad, 0x15, 0x63, 0x5b, 0xb6, 0xb1, 0xea, 0x4d, 0xf5, 0x7e, 0xca, 0xfb,
	0x19, 0x4f, 0x7a, 0x7f, 0xee, 0xe9, 0x5e, 0x7f, 0x60, 0x14, 0x56, 0xc9, 0xce, 0x73, 0xce, 0x9c,
	0x73, 0x87, 0x99, 0xb9, 0x17, 0x38, 0x88, 0x68, 0x98, 0x38, 0x0b, 0x3a, 0x0c, 0x42, 0x3f, 0xf6,
	0x51, 0xce, 0xc3, 0xfe, 0x67, 0x09, 0xe4, 0x59, 0xf6, 0x8d, 0x08, 0x92, 0x47, 0x56, 0x54, 0x15,
	0x7a, 0xc2, 0xa0, 0x69, 0xf1, 0x6f, 0xec, 0x41, 0x6b, 0x49, 0xa3, 0x45, 0xe8, 0x04, 0xb1, 0xe3,
	0x7b, 0x6a, 0x8d, 0x53, 0x55, 0x08, 0x2f, 0x01, 0x12, 0x27, 0x72, 0xe6, 0x8e, 0xeb, 0xc4, 0xa9,
	0x2a, 0xf6, 0x84, 0x41, 0xe7, 0xe2, 0x78, 0x58, 0x1c, 0xf7, 0x58, 0x52, 0x56, 0x25, 0x0d, 0xcf,
	0x40, 0x0e, 0xd6, 0x73, 0xd7, 0x89, 0xfe, 0x55, 0x25, 0xae, 0x50, 0x4a, 0xc5, 0x7d, 0x86, 0x5b,
	0x45, 0x02, 0x9e, 0x43, 0x3d, 0x26, 0xd1, 0x4b, 0xa4, 0xd6, 0x7b, 0xe2, 0xa0, 0x75, 0xf1, 0x6d,
	0x99, 0x99, 0xd7, 0x3d, 0xb4, 0x19, 0xab, 0x79, 0x71, 0x98, 0x5a, 0x59, 0x26, 0x5e, 0x41, 0x83,
	0x26, 0xd4, 0x8b, 0x23, 0xb5, 0xc1, 0x35, 0xa7, 0xaf, 0x34, 0x1a, 0xa7, 0x33, 0x51, 0x9e, 0x8b,
	0x13, 0x68, 0x2f, 0x69, 0x40, 0xbd, 0x25, 0xf5, 0x16, 0x0e, 0x8d, 0x54, 0x99, 0x6b, 0xfb, 0xaf,
	0xb4, 0x37, 0x95, 0xa4, 0xcc, 0x61, 0x4b, 0xd7, 0xbd, 0x05, 0xd8, 0x94, 0x84, 0x0a, 0x88, 0x2f,
	0x34, 0xcd, 0x9b, 0xca, 0x3e, 0xf1, 0x07, 0xa8, 0x27, 0xc4, 0x5d, 0x53, 0xde, 0xcd, 0xd6, 0xc5,
	0x41, 0x79, 0x00, 0x53, 0x59, 0x19, 0xf7, 0x6b, 0xed, 0x17, 0xa1, 0xab, 0x43, 0xab, 0x52, 0xe7,
	0x0e, 0xa7, 0x1f, 0xb7, 0x9d, 0x3a, 0xa5, 0x13, 0x97, 0x55, 0xad, 0x6c, 0x38, 0x7a, 0x55, 0xf6,
	0x0e, 0xc3, 0x9f, 0xb6, 0x0d, 0x37, 0x73, 0x2c, 0xc5, 0x69, 0xc5, 0xb5, 0xff, 0x51, 0x04, 0x89,
	0x15, 0xfd, 0xc6, 0xd5, 0xf9, 0x0e, 0x20, 0xa1, 0xa1, 0xf3, 0xec, 0x90, 0xb9, 0x4b, 0xf9, 0xea,
	0xec, 0x5b, 0x15, 0x04, 0x55, 0x90, 0x03, 0x92, 0x72, 0x52, 0xe2, 0x64, 0x11, 0x62, 0x0f, 0xa4,
	0x67, 0x4a, 0xd9, 0x4a, 0xb0, 0x32, 0xdb, 0x65, 0x99, 0x13, 0x4a, 0x2d, 0xce, 0xe0, 0x39, 0x34,
	0x1c, 0x2f, 0x58, 0x97, 0x2b, 0xf0, 0xcd, 0x56, 0x97, 0x87, 0x3a, 0xe7, 0xf2, 0xf9, 0x67, 0x89,
	0x78, 0x05, 0xb2, 0xbf, 0x8e, 0xb9, 0x26, 0x1b, 0x7d, 0x77, 0x5b, 0x63, 0x66, 0x64, 0x26, 0x2a,
	0x52, 0xbb, 0x7f, 0x42, 0xab, 0x62, 0xb6, 0xa3, 0xa7, 0x83, 0xed, 0x9e, 0xe2, 0x66, 0xd3, 0x49,
	0x48, 0x56, 0x34, 0xa6, 0x61, 0x75, 0x50, 0x06, 0xb4, 0xab, 0xe7, 0xbc, 0xd7, 0xaf, 0x9f, 0x82,
	0x38, 0xa1, 0x14, 0x4f, 0xa1, 0xb9, 0xa4, 0x09, 0x75, 0xfd, 0x80, 0x86, 0xb9, 0xd9, 0x06, 0x60,
	0x6c, 0x42, 0x5c, 0x67, 0x49, 0x62, 0x3f, 0xcc, 0x07, 0xb5, 0x01, 0xb0, 0x0b, 0xfb, 0xf4, 0x3f,
	0xba, 0x58, 0x33, 0x52, 0xe4, 0x64, 0x19, 0x73, 0x6e, 0xe5, 0xc4, 0xb1, 0x1f, 0x46, 0x7c, 0x46,
	0x8c, 0xcb, 0xe3, 0xfe, 0x27, 0x01, 0xea, 0x7c, 0x11, 0xdf, 0xb8, 0x1e, 0x3f, 0x83, 0xb4, 0x24,
	0x31, 0x51, 0x45, 0x3e, 0x0c, 0x75, 0x7b, 0xb9, 0x87, 0x37, 0x24, 0x26, 0xd9, 0x28, 0x78, 0x56,
	0xf7, 0x0e, 0x9a, 0x25, 0xf4, 0xee, 0xae, 0x7d, 0x10, 0xa0, 0x59, 0x12, 0x6f, 0x2c, 0xff, 0x7b,
	0x90, 0xe2, 0x34, 0xa0, 0xf9, 0x93, 0x58, 0xb9, 0xe5, 0x69, 0x40, 0x2d, 0x4e, 0xb1, 0xee, 0xf9,
	0x3c, 0x99, 0xb8, 0xf9, 0x86, 0x97, 0x71, 0xff, 0x7f, 0x80, 0xcd, 0xa5, 0xdb, 0xf1, 0x83, 0x4e,
	0xa0, 0xee, 0xac, 0xc8, 0x3f, 0x34, 0x3f, 0x3a, 0x0b, 0xd8, 0x95, 0x49, 0x7c, 0x77, 0xbd, 0xa2,
	0x11, 0x6f, 0x5b, 0xd3, 0x2a, 0x42, 0x96, 0x1f, 0xf8, 0x61, 0xcc, 0xc6, 0xc4, 0xf0, 0x2c, 0x60,
	0xf9, 0x0b, 0x7f, 0xb5, 0x22, 0xde, 0x92, 0xdf, 0xa5, 0xa6, 0x55, 0x84, 0x67, 0x0b, 0x80, 0xcd,
	0xe3, 0x8d, 0x08, 0x9d, 0x47, 0x7d, 0xa6, 0x8f, 0xf5, 0xa9, 0x6e, 0xff, 0xf5, 0xf7, 0x68, 0x3a,
	0x55, 0xf6, 0xf0, 0x04, 0x94, 0x0a, 0xf6, 0x30, 0xd3, 0xac, 0x99, 0x22, 0xe0, 0xd7, 0x80, 0x15,
	0xf4, 0xc9, 0xb4, 0xee, 0x18, 0x5e, 0xc3, 0x63, 0x38, 0xac, 0xe0, 0x86, 0x69, 0x68, 0x8a, 0x78,
	0xf6, 0x04, 0x72, 0xfe, 0xde, 0xe3, 0x21, 0xb4, 0xee, 0x1f, 0xc6, 0x53, 0x7d, 0xf6, 0x7b, 0x6e,
	0x8f, 0xd0, 0x29, 0x80, 0x99, 0xf9, 0x60, 0x5d, 0x6b, 0x8a, 0x80, 0x5f, 0xc1, 0x51, 0x81, 0x5d,
	0x9b, 0x86, 0x3d, 0xd2, 0x0d, 0xcd, 0x52, 0x6a, 0xa8, 0x40, 0xbb, 0x80, 0x73, 0xe3, 0xdf, 0x40,
	0x62, 0x7d, 0x46, 0x80, 0xc6, 0xcc, 0xb6, 0x74, 0xe3, 0x56, 0xd9, 0x43, 0x19, 0x44, 0xdd, 0xb0,
	0x15, 0x01, 0x9b, 0x50, 0x9f, 0x4c, 0xcd, 0x91, 0xad, 0xd4, 0xb0, 0x05, 0xf2, 0xd8, 0x34, 0xa7,
	0xda, 0xc8, 0x50, 0x44, 0x96, 0x6c, 0x8e, 0xff, 0xd0, 0xae, 0x6d, 0x45, 0x9a, 0x37, 0xf8, 0x1f,
	0xe5, 0xe5, 0x97, 0x00, 0x00, 0x00, 0xff, 0xff, 0x96, 0x99, 0x92, 0x8f, 0x39, 0x07, 0x00, 0x00,
}
