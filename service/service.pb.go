// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/service.proto

/*
Package service is a generated protocol buffer package.

It is generated from these files:
	service/service.proto

It has these top-level messages:
	Service
	Task
	Fee
	Event
	Output
	Parameter
	Dependency
*/
package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Service struct {
	Name         string                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description  string                 `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Visibility   string                 `protobuf:"bytes,3,opt,name=visibility" json:"visibility,omitempty"`
	Publish      string                 `protobuf:"bytes,4,opt,name=publish" json:"publish,omitempty"`
	Tasks        map[string]*Task       `protobuf:"bytes,5,rep,name=tasks" json:"tasks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Events       map[string]*Event      `protobuf:"bytes,6,rep,name=events" json:"events,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Dependencies map[string]*Dependency `protobuf:"bytes,7,rep,name=dependencies" json:"dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Service) Reset()                    { *m = Service{} }
func (m *Service) String() string            { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()               {}
func (*Service) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

func (m *Service) GetPublish() string {
	if m != nil {
		return m.Publish
	}
	return ""
}

func (m *Service) GetTasks() map[string]*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Service) GetEvents() map[string]*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Service) GetDependencies() map[string]*Dependency {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

type Task struct {
	Name        string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Verifiable  bool                  `protobuf:"varint,3,opt,name=verifiable" json:"verifiable,omitempty"`
	Payable     bool                  `protobuf:"varint,4,opt,name=payable" json:"payable,omitempty"`
	Fees        *Fee                  `protobuf:"bytes,5,opt,name=fees" json:"fees,omitempty"`
	Inputs      map[string]*Parameter `protobuf:"bytes,6,rep,name=inputs" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Outputs     map[string]*Output    `protobuf:"bytes,7,rep,name=outputs" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetVerifiable() bool {
	if m != nil {
		return m.Verifiable
	}
	return false
}

func (m *Task) GetPayable() bool {
	if m != nil {
		return m.Payable
	}
	return false
}

func (m *Task) GetFees() *Fee {
	if m != nil {
		return m.Fees
	}
	return nil
}

func (m *Task) GetInputs() map[string]*Parameter {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Task) GetOutputs() map[string]*Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

type Fee struct {
	Developer string `protobuf:"bytes,1,opt,name=developer" json:"developer,omitempty"`
	Validator string `protobuf:"bytes,2,opt,name=validator" json:"validator,omitempty"`
	Executor  string `protobuf:"bytes,3,opt,name=executor" json:"executor,omitempty"`
	Emittors  string `protobuf:"bytes,4,opt,name=emittors" json:"emittors,omitempty"`
}

func (m *Fee) Reset()                    { *m = Fee{} }
func (m *Fee) String() string            { return proto.CompactTextString(m) }
func (*Fee) ProtoMessage()               {}
func (*Fee) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Fee) GetDeveloper() string {
	if m != nil {
		return m.Developer
	}
	return ""
}

func (m *Fee) GetValidator() string {
	if m != nil {
		return m.Validator
	}
	return ""
}

func (m *Fee) GetExecutor() string {
	if m != nil {
		return m.Executor
	}
	return ""
}

func (m *Fee) GetEmittors() string {
	if m != nil {
		return m.Emittors
	}
	return ""
}

type Event struct {
	Name        string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Data        map[string]*Parameter `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetData() map[string]*Parameter {
	if m != nil {
		return m.Data
	}
	return nil
}

type Output struct {
	Name        string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string                `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Data        map[string]*Parameter `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Output) Reset()                    { *m = Output{} }
func (m *Output) String() string            { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()               {}
func (*Output) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Output) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Output) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Output) GetData() map[string]*Parameter {
	if m != nil {
		return m.Data
	}
	return nil
}

type Parameter struct {
	Name        string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Optional    bool   `protobuf:"varint,4,opt,name=optional" json:"optional,omitempty"`
}

func (m *Parameter) Reset()                    { *m = Parameter{} }
func (m *Parameter) String() string            { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()               {}
func (*Parameter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Parameter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Parameter) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

type Dependency struct {
	Image   string   `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Volumes []string `protobuf:"bytes,2,rep,name=volumes" json:"volumes,omitempty"`
	Ports   []string `protobuf:"bytes,3,rep,name=ports" json:"ports,omitempty"`
	Command string   `protobuf:"bytes,4,opt,name=command" json:"command,omitempty"`
}

func (m *Dependency) Reset()                    { *m = Dependency{} }
func (m *Dependency) String() string            { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()               {}
func (*Dependency) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Dependency) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Dependency) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Dependency) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Dependency) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func init() {
	proto.RegisterType((*Service)(nil), "service.Service")
	proto.RegisterType((*Task)(nil), "service.Task")
	proto.RegisterType((*Fee)(nil), "service.Fee")
	proto.RegisterType((*Event)(nil), "service.Event")
	proto.RegisterType((*Output)(nil), "service.Output")
	proto.RegisterType((*Parameter)(nil), "service.Parameter")
	proto.RegisterType((*Dependency)(nil), "service.Dependency")
}

func init() { proto.RegisterFile("service/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 605 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0x6a, 0x27, 0x69, 0x26, 0xe5, 0xb6, 0x80, 0xe4, 0x9a, 0x0a, 0x45, 0x06, 0xa4, 0x22,
	0x41, 0x50, 0x4b, 0x1f, 0x10, 0xcf, 0x6d, 0x51, 0x55, 0x21, 0x90, 0xe9, 0x0f, 0x6c, 0xe2, 0x29,
	0xac, 0xea, 0x1b, 0xf6, 0xda, 0xc2, 0xff, 0xc1, 0x2b, 0xff, 0x81, 0xf8, 0x3a, 0xb4, 0xb3, 0xeb,
	0x8d, 0x4d, 0xf2, 0x94, 0x8a, 0xa7, 0xec, 0xcc, 0x99, 0x73, 0xf6, 0x68, 0x66, 0x36, 0x86, 0xc7,
	0x25, 0x16, 0xb5, 0x58, 0xe2, 0x1b, 0xf3, 0x3b, 0xcf, 0x8b, 0x4c, 0x66, 0x6c, 0x6c, 0xc2, 0xe0,
	0xa7, 0x0b, 0xe3, 0x2f, 0xfa, 0xcc, 0x18, 0xb8, 0x29, 0x4f, 0xd0, 0x1b, 0xcc, 0x06, 0x87, 0x93,
	0x90, 0xce, 0x6c, 0x06, 0xd3, 0x08, 0xcb, 0x65, 0x21, 0x72, 0x29, 0xb2, 0xd4, 0xdb, 0x21, 0xa8,
	0x9b, 0x62, 0x4f, 0x01, 0x6a, 0x51, 0x8a, 0x85, 0x88, 0x85, 0x6c, 0x3c, 0x87, 0x0a, 0x3a, 0x19,
	0xe6, 0xc1, 0x38, 0xaf, 0x16, 0xb1, 0x28, 0xbf, 0x79, 0x2e, 0x81, 0x6d, 0xc8, 0x8e, 0x60, 0x28,
	0x79, 0x79, 0x53, 0x7a, 0xc3, 0x99, 0x73, 0x38, 0x3d, 0x7e, 0x32, 0x6f, 0x3d, 0x1a, 0x43, 0xf3,
	0x2b, 0x85, 0x9e, 0xa5, 0xb2, 0x68, 0x42, 0x5d, 0xc9, 0x4e, 0x60, 0x84, 0x35, 0xa6, 0xb2, 0xf4,
	0x46, 0xc4, 0x39, 0x58, 0xe3, 0x9c, 0x11, 0xac, 0x49, 0xa6, 0x96, 0x9d, 0xc3, 0x5e, 0x84, 0x39,
	0xa6, 0x11, 0xa6, 0x4b, 0x81, 0xa5, 0x37, 0x26, 0x6e, 0xb0, 0xc6, 0x3d, 0xed, 0x14, 0x69, 0x85,
	0x1e, 0xcf, 0xff, 0x00, 0xb0, 0xb2, 0xc4, 0xee, 0x83, 0x73, 0x83, 0x8d, 0xe9, 0x96, 0x3a, 0xb2,
	0x67, 0x30, 0xac, 0x79, 0x5c, 0x21, 0xb5, 0x69, 0x7a, 0x7c, 0xc7, 0x5e, 0xa0, 0x58, 0xa1, 0xc6,
	0xde, 0xef, 0xbc, 0x1b, 0xf8, 0x17, 0x30, 0xed, 0xf8, 0xdc, 0xa0, 0xf4, 0xbc, 0xaf, 0x74, 0xd7,
	0x2a, 0x11, 0xad, 0x2b, 0x75, 0x05, 0x0f, 0xd6, 0x6c, 0x6f, 0x10, 0x7c, 0xd9, 0x17, 0x7c, 0x68,
	0x05, 0x2d, 0xb9, 0xe9, 0xa8, 0x06, 0xbf, 0x1c, 0x70, 0x95, 0xe9, 0x5b, 0xec, 0x04, 0x16, 0xe2,
	0x5a, 0xf0, 0x45, 0x8c, 0xb4, 0x13, 0xbb, 0x61, 0x27, 0x43, 0x3b, 0xc1, 0x1b, 0x02, 0x5d, 0x02,
	0xdb, 0x90, 0xcd, 0xc0, 0xbd, 0x46, 0x54, 0x2b, 0xa1, 0x6c, 0xee, 0x59, 0x9b, 0xe7, 0x88, 0x21,
	0x21, 0xec, 0x08, 0x46, 0x22, 0xcd, 0x2b, 0xbb, 0x02, 0xfb, 0xbd, 0x2e, 0xcf, 0x2f, 0x08, 0x33,
	0xf3, 0xd7, 0x85, 0xec, 0x04, 0xc6, 0x59, 0x25, 0x89, 0xa3, 0x47, 0xef, 0xf7, 0x39, 0x9f, 0x34,
	0xa8, 0x49, 0x6d, 0xa9, 0xff, 0x11, 0xa6, 0x1d, 0xb1, 0x0d, 0x3d, 0x3d, 0xec, 0xf7, 0x94, 0x59,
	0xd1, 0xcf, 0xbc, 0xe0, 0x09, 0x4a, 0x2c, 0xba, 0x83, 0xba, 0x84, 0xbd, 0xee, 0x3d, 0x1b, 0xf4,
	0x5e, 0xf4, 0xf5, 0xee, 0x59, 0x3d, 0xcd, 0xeb, 0xce, 0xa7, 0x01, 0xe7, 0x1c, 0x91, 0x1d, 0xc0,
	0x24, 0xc2, 0x1a, 0xe3, 0x2c, 0xc7, 0xc2, 0x28, 0xad, 0x12, 0x0a, 0xad, 0x79, 0x2c, 0x22, 0x2e,
	0xb3, 0xc2, 0x4c, 0x69, 0x95, 0x60, 0x3e, 0xec, 0xe2, 0x0f, 0x5c, 0x56, 0x0a, 0xd4, 0xaf, 0xd6,
	0xc6, 0x84, 0x25, 0x42, 0xca, 0xac, 0x28, 0xcd, 0xa3, 0xb5, 0x71, 0xf0, 0x7b, 0x00, 0x43, 0xda,
	0xc2, 0x2d, 0x77, 0xe3, 0x15, 0xb8, 0x11, 0x97, 0xdc, 0x73, 0x68, 0x12, 0x5e, 0x7f, 0xb3, 0xe7,
	0xa7, 0x5c, 0x72, 0x3d, 0x07, 0xaa, 0xf2, 0x2f, 0x61, 0x62, 0x53, 0xb7, 0x1d, 0x41, 0xf0, 0x67,
	0x00, 0x23, 0xdd, 0xcb, 0x2d, 0xbd, 0xbf, 0xee, 0x79, 0xdf, 0xff, 0x67, 0x40, 0xff, 0xd7, 0xfc,
	0x77, 0x98, 0xd8, 0xfc, 0x96, 0xf6, 0x19, 0xb8, 0xb2, 0xc9, 0xd1, 0x8c, 0x9b, 0xce, 0x6a, 0xd4,
	0x19, 0xa1, 0x3c, 0x36, 0x6f, 0xd1, 0xc6, 0x41, 0x0c, 0xb0, 0xfa, 0x7b, 0x60, 0x8f, 0x60, 0x28,
	0x12, 0xfe, 0xb5, 0xbd, 0x54, 0x07, 0xea, 0x29, 0xd7, 0x59, 0x5c, 0x25, 0x58, 0x7a, 0x3b, 0x33,
	0x47, 0xfd, 0xbd, 0x9b, 0x50, 0xd5, 0xe7, 0x59, 0x21, 0x4b, 0xea, 0xd6, 0x24, 0xd4, 0x81, 0xaa,
	0x5f, 0x66, 0x49, 0xc2, 0xd3, 0xa8, 0xfd, 0x1c, 0x98, 0x70, 0x31, 0xa2, 0x4f, 0xd3, 0xdb, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x63, 0x1c, 0xb5, 0x0c, 0xb3, 0x06, 0x00, 0x00,
}
