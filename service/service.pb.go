// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package service

import (
	bytes "bytes"
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_mesg_foundation_engine_hash "github.com/mesg-foundation/engine/hash"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Service represents the service's type.
type Service struct {
	// Service's hash.
	Hash github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,10,opt,name=hash,proto3,customtype=github.com/mesg-foundation/engine/hash.Hash" json:"hash" hash:"-" validate:"required,hash"`
	// Service's sid.
	Sid string `protobuf:"bytes,12,opt,name=sid,proto3" json:"sid,omitempty" hash:"name:12" validate:"required,printascii,max=63,domain"`
	// Service's name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" hash:"name:1" validate:"required,printascii"`
	// Service's description.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty" hash:"name:2" validate:"printascii"`
	// Configurations related to the service
	Configuration Service_Configuration `protobuf:"bytes,8,opt,name=configuration,proto3" json:"configuration" hash:"name:8" validate:"required"`
	// The list of tasks this service can execute.
	Tasks []*Service_Task `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty" hash:"name:5" validate:"dive,required"`
	// The list of events this service can emit.
	Events []*Service_Event `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty" hash:"name:6" validate:"dive,required"`
	// The container dependencies this service requires.
	Dependencies []*Service_Dependency `protobuf:"bytes,7,rep,name=dependencies,proto3" json:"dependencies,omitempty" hash:"name:7" validate:"dive,required"`
	// Service's repository url.
	Repository string `protobuf:"bytes,9,opt,name=repository,proto3" json:"repository,omitempty" hash:"name:9" validate:"omitempty,uri"`
	// The hash id of service's source code on IPFS.
	Source string `protobuf:"bytes,13,opt,name=source,proto3" json:"source,omitempty" hash:"name:13" validate:"required,printascii"`
	// The address of the service.
	Address              github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,14,opt,name=address,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"address,omitempty" hash:"-" validate:"required,accaddress"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

// Events are emitted by the service whenever the service wants.
type Service_Event struct {
	// Event's key.
	Key string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty" hash:"name:4" validate:"required,printascii"`
	// Event's name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" hash:"name:1" validate:"printascii"`
	// Event's description.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty" hash:"name:2" validate:"printascii"`
	// List of data of this event.
	Data                 []*Service_Parameter `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" hash:"name:3" validate:"dive,required"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Service_Event) Reset()         { *m = Service_Event{} }
func (m *Service_Event) String() string { return proto.CompactTextString(m) }
func (*Service_Event) ProtoMessage()    {}
func (*Service_Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0, 0}
}
func (m *Service_Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service_Event.Unmarshal(m, b)
}
func (m *Service_Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service_Event.Marshal(b, m, deterministic)
}
func (m *Service_Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service_Event.Merge(m, src)
}
func (m *Service_Event) XXX_Size() int {
	return xxx_messageInfo_Service_Event.Size(m)
}
func (m *Service_Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Service_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Service_Event proto.InternalMessageInfo

// Task is a function that requires inputs and returns output.
type Service_Task struct {
	// Task's key.
	Key string `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty" hash:"name:8" validate:"required,printascii"`
	// Task's name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" hash:"name:1" validate:"printascii"`
	// Task's description.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty" hash:"name:2" validate:"printascii"`
	// List inputs of this task.
	Inputs []*Service_Parameter `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty" hash:"name:6" validate:"dive,required"`
	// List of tasks outputs.
	Outputs              []*Service_Parameter `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty" hash:"name:7" validate:"dive,required"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Service_Task) Reset()         { *m = Service_Task{} }
func (m *Service_Task) String() string { return proto.CompactTextString(m) }
func (*Service_Task) ProtoMessage()    {}
func (*Service_Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0, 1}
}
func (m *Service_Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service_Task.Unmarshal(m, b)
}
func (m *Service_Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service_Task.Marshal(b, m, deterministic)
}
func (m *Service_Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service_Task.Merge(m, src)
}
func (m *Service_Task) XXX_Size() int {
	return xxx_messageInfo_Service_Task.Size(m)
}
func (m *Service_Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Service_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Service_Task proto.InternalMessageInfo

// Parameter describes the task's inputs, the task's outputs, and the event's data.
type Service_Parameter struct {
	// Parameter's key.
	Key string `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty" hash:"name:8" validate:"required,printascii"`
	// Parameter's name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" hash:"name:1" validate:"printascii"`
	// Parameter's description.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty" hash:"name:2" validate:"printascii"`
	// Parameter's type: `String`, `Number`, `Boolean`, `Object` or `Any`.
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty" hash:"name:3" validate:"required,printascii,oneof=String Number Boolean Object Any"`
	// Set the parameter as optional.
	Optional bool `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty" hash:"name:4"`
	// Mark a parameter as an array of the defined type.
	Repeated bool `protobuf:"varint,9,opt,name=repeated,proto3" json:"repeated,omitempty" hash:"name:9"`
	// Optional object structure type when type is set to `Object`.
	Object               []*Service_Parameter `protobuf:"bytes,10,rep,name=object,proto3" json:"object,omitempty" hash:"name:10" validate:"unique,dive,required"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Service_Parameter) Reset()         { *m = Service_Parameter{} }
func (m *Service_Parameter) String() string { return proto.CompactTextString(m) }
func (*Service_Parameter) ProtoMessage()    {}
func (*Service_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0, 2}
}
func (m *Service_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service_Parameter.Unmarshal(m, b)
}
func (m *Service_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service_Parameter.Marshal(b, m, deterministic)
}
func (m *Service_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service_Parameter.Merge(m, src)
}
func (m *Service_Parameter) XXX_Size() int {
	return xxx_messageInfo_Service_Parameter.Size(m)
}
func (m *Service_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Service_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Service_Parameter proto.InternalMessageInfo

// A configuration is the configuration of the main container of the service's instance.
type Service_Configuration struct {
	// List of volumes.
	Volumes []string `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty" hash:"name:1" validate:"unique,dive,printascii"`
	// List of volumes mounted from other dependencies.
	VolumesFrom []string `protobuf:"bytes,2,rep,name=volumesFrom,proto3" json:"volumesFrom,omitempty" hash:"name:2" validate:"unique,dive,printascii"`
	// List of ports the container exposes.
	Ports []string `protobuf:"bytes,3,rep,name=ports,proto3" json:"ports,omitempty" hash:"name:3" validate:"unique,dive,portmap"`
	// Args to pass to the container.
	Args []string `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty" hash:"name:5" validate:"dive,printascii"`
	// Command to run the container.
	Command string `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty" hash:"name:4" validate:"printascii"`
	// Default env vars to apply to service's instance on runtime.
	Env                  []string `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty" hash:"name:6" validate:"unique,dive,env"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service_Configuration) Reset()         { *m = Service_Configuration{} }
func (m *Service_Configuration) String() string { return proto.CompactTextString(m) }
func (*Service_Configuration) ProtoMessage()    {}
func (*Service_Configuration) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0, 3}
}
func (m *Service_Configuration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service_Configuration.Unmarshal(m, b)
}
func (m *Service_Configuration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service_Configuration.Marshal(b, m, deterministic)
}
func (m *Service_Configuration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service_Configuration.Merge(m, src)
}
func (m *Service_Configuration) XXX_Size() int {
	return xxx_messageInfo_Service_Configuration.Size(m)
}
func (m *Service_Configuration) XXX_DiscardUnknown() {
	xxx_messageInfo_Service_Configuration.DiscardUnknown(m)
}

var xxx_messageInfo_Service_Configuration proto.InternalMessageInfo

// A dependency is a configuration of an other container that runs separately from the service.
type Service_Dependency struct {
	// Dependency's key.
	Key string `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty" hash:"name:8" validate:"required,printascii"`
	// Image's name of the container.
	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty" hash:"name:1" validate:"required,printascii"`
	// List of volumes.
	Volumes []string `protobuf:"bytes,2,rep,name=volumes,proto3" json:"volumes,omitempty" hash:"name:2" validate:"unique,dive,printascii"`
	// List of volumes mounted from other dependencies.
	VolumesFrom []string `protobuf:"bytes,3,rep,name=volumesFrom,proto3" json:"volumesFrom,omitempty" hash:"name:3" validate:"unique,dive,printascii"`
	// List of ports the container exposes.
	Ports []string `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty" hash:"name:4" validate:"unique,dive,portmap"`
	// Args to pass to the container.
	Args []string `protobuf:"bytes,6,rep,name=args,proto3" json:"args,omitempty" hash:"name:6" validate:"dive,printascii"`
	// Command to run the container.
	Command string `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty" hash:"name:5" validate:"printascii"`
	// Default env vars to apply to service's instance on runtime.
	Env                  []string `protobuf:"bytes,9,rep,name=env,proto3" json:"env,omitempty" hash:"name:9" validate:"unique,dive,env"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service_Dependency) Reset()         { *m = Service_Dependency{} }
func (m *Service_Dependency) String() string { return proto.CompactTextString(m) }
func (*Service_Dependency) ProtoMessage()    {}
func (*Service_Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0, 4}
}
func (m *Service_Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service_Dependency.Unmarshal(m, b)
}
func (m *Service_Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service_Dependency.Marshal(b, m, deterministic)
}
func (m *Service_Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service_Dependency.Merge(m, src)
}
func (m *Service_Dependency) XXX_Size() int {
	return xxx_messageInfo_Service_Dependency.Size(m)
}
func (m *Service_Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_Service_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_Service_Dependency proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Service)(nil), "mesg.types.Service")
	proto.RegisterType((*Service_Event)(nil), "mesg.types.Service.Event")
	proto.RegisterType((*Service_Task)(nil), "mesg.types.Service.Task")
	proto.RegisterType((*Service_Parameter)(nil), "mesg.types.Service.Parameter")
	proto.RegisterType((*Service_Configuration)(nil), "mesg.types.Service.Configuration")
	proto.RegisterType((*Service_Dependency)(nil), "mesg.types.Service.Dependency")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 1005 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x97, 0xcf, 0x6e, 0xe3, 0x44,
	0x1c, 0xc7, 0x37, 0xb5, 0x93, 0x34, 0xd3, 0x06, 0x89, 0x39, 0xcd, 0x46, 0xa2, 0xf6, 0x1a, 0x89,
	0xcd, 0x42, 0xfe, 0x6c, 0x93, 0x6e, 0xd9, 0x76, 0xb5, 0x40, 0xc3, 0x52, 0xb1, 0x48, 0xfc, 0x73,
	0x41, 0xa0, 0x15, 0x7b, 0x98, 0xd8, 0xd3, 0x74, 0x48, 0x3c, 0xe3, 0x9d, 0xb1, 0x23, 0xf2, 0x10,
	0xbc, 0x00, 0x4f, 0xc0, 0x99, 0x47, 0xe0, 0xb4, 0x12, 0x6f, 0xc0, 0xc1, 0x12, 0x3c, 0x82, 0x8f,
	0x1c, 0x10, 0xf2, 0x38, 0x69, 0x9d, 0xc6, 0x49, 0xba, 0xa5, 0x17, 0x38, 0x35, 0x6e, 0xe6, 0xfb,
	0xf9, 0x7a, 0x7e, 0xbf, 0xef, 0x6f, 0x1c, 0x83, 0xaa, 0x24, 0x62, 0x4c, 0x1d, 0xd2, 0xf2, 0x05,
	0x0f, 0x38, 0x04, 0x1e, 0x91, 0x83, 0x56, 0x30, 0xf1, 0x89, 0xac, 0x59, 0x03, 0x3e, 0xe0, 0x6d,
	0xf5, 0xff, 0x7e, 0x78, 0xda, 0x4e, 0xae, 0xd4, 0x85, 0xfa, 0x94, 0xae, 0xb7, 0xfe, 0xbe, 0x0d,
	0xca, 0x27, 0x29, 0x01, 0x8e, 0x80, 0x7e, 0x86, 0xe5, 0x19, 0x02, 0x66, 0xa1, 0xbe, 0xdd, 0xfb,
	0xf6, 0x65, 0x64, 0xdc, 0xfa, 0x3d, 0x32, 0xde, 0x19, 0xd0, 0xe0, 0x2c, 0xec, 0xb7, 0x1c, 0xee,
	0xb5, 0x13, 0x78, 0xf3, 0x94, 0x87, 0xcc, 0xc5, 0x01, 0xe5, 0xac, 0x4d, 0xd8, 0x80, 0x32, 0xd2,
	0x4e, 0x54, 0xad, 0x8f, 0xb1, 0x3c, 0x8b, 0x23, 0xe3, 0x4e, 0x72, 0x71, 0x68, 0x35, 0x2d, 0x73,
	0x8c, 0x47, 0xd4, 0xc5, 0x01, 0x39, 0xb4, 0x04, 0x79, 0x11, 0x52, 0x41, 0xdc, 0x46, 0xf2, 0x9d,
	0x65, 0x2b, 0x17, 0xf8, 0x25, 0xd0, 0x24, 0x75, 0xd1, 0xb6, 0x59, 0xa8, 0x57, 0x7a, 0xef, 0xc7,
	0x91, 0xf1, 0x28, 0x55, 0x32, 0xec, 0x91, 0xc3, 0xdd, 0x4e, 0xae, 0xde, 0x17, 0x94, 0x05, 0x58,
	0x3a, 0x94, 0x36, 0x3c, 0xfc, 0xc3, 0xe3, 0xfd, 0x6e, 0xc3, 0xe5, 0x1e, 0xa6, 0xcc, 0xb2, 0x13,
	0x16, 0x7c, 0x02, 0xf4, 0x44, 0x8d, 0x0a, 0x8a, 0x79, 0x3f, 0x8e, 0x8c, 0x46, 0x96, 0xb9, 0x06,
	0x69, 0xd9, 0x4a, 0x0d, 0x9f, 0x82, 0x2d, 0x97, 0x48, 0x47, 0x50, 0x3f, 0xd9, 0x23, 0xda, 0x50,
	0xb0, 0xbb, 0x71, 0x64, 0xbc, 0x99, 0x81, 0xcd, 0xdd, 0x5f, 0x96, 0x91, 0xd5, 0x42, 0x01, 0xaa,
	0x0e, 0x67, 0xa7, 0x74, 0x10, 0x0a, 0x55, 0x30, 0xb4, 0x69, 0x16, 0xea, 0x5b, 0x9d, 0x3b, 0xad,
	0x8b, 0x2e, 0xb5, 0xa6, 0xd5, 0x6f, 0x7d, 0x98, 0x5d, 0xd8, 0xbb, 0x97, 0x54, 0xff, 0xa2, 0x9c,
	0xca, 0xf3, 0x61, 0xde, 0x06, 0x2c, 0x7b, 0xde, 0x02, 0x3e, 0x03, 0xc5, 0x00, 0xcb, 0xa1, 0x44,
	0x45, 0x53, 0xab, 0x6f, 0x75, 0x50, 0x9e, 0xd7, 0x57, 0x58, 0x0e, 0x7b, 0x6f, 0xc7, 0x91, 0xf1,
	0x56, 0x06, 0xff, 0x20, 0x8b, 0x77, 0xe9, 0x98, 0x34, 0x2e, 0x3c, 0x52, 0x24, 0x7c, 0x0e, 0x4a,
	0x64, 0x4c, 0x58, 0x20, 0x51, 0x49, 0xc1, 0x6f, 0xe7, 0xc1, 0x3f, 0x4a, 0x56, 0x2c, 0xd0, 0xf7,
	0x57, 0xd0, 0xa7, 0x50, 0xc8, 0xc0, 0xb6, 0x4b, 0x7c, 0xc2, 0x5c, 0xc2, 0x1c, 0x4a, 0x24, 0x2a,
	0x2b, 0x93, 0x9d, 0x3c, 0x93, 0x27, 0xb3, 0x75, 0x93, 0x05, 0xa7, 0x77, 0x57, 0x38, 0xcd, 0xf1,
	0xe1, 0x27, 0x00, 0x08, 0xe2, 0x73, 0x49, 0x03, 0x2e, 0x26, 0xa8, 0xa2, 0x1a, 0x7d, 0x99, 0x76,
	0x90, 0xa5, 0x71, 0x8f, 0x06, 0xc4, 0xf3, 0x83, 0x49, 0x23, 0x14, 0xd4, 0xb2, 0x33, 0x6a, 0xf8,
	0x14, 0x94, 0x24, 0x0f, 0x85, 0x43, 0x50, 0x55, 0x71, 0x76, 0xe3, 0xc8, 0x68, 0x66, 0xd3, 0xd7,
	0x5d, 0x1b, 0xbf, 0x29, 0x00, 0x8e, 0x41, 0x19, 0xbb, 0xae, 0x20, 0x52, 0xa2, 0xd7, 0xd4, 0x28,
	0x7e, 0x17, 0x47, 0xc6, 0xdd, 0x55, 0x73, 0x85, 0x1d, 0x67, 0xaa, 0xb0, 0xfe, 0x8a, 0x8c, 0x66,
	0x66, 0x62, 0x1d, 0x2e, 0x3d, 0x2e, 0xa7, 0x7f, 0x9a, 0xd2, 0x1d, 0xb6, 0xd3, 0x3a, 0x1e, 0x39,
	0xce, 0x51, 0xaa, 0xb0, 0x67, 0x66, 0xb5, 0x5f, 0x36, 0x40, 0x51, 0x35, 0x0f, 0xf6, 0x80, 0x36,
	0x24, 0x13, 0xa4, 0xe7, 0xce, 0xd1, 0xde, 0xda, 0x8d, 0x24, 0x62, 0xf8, 0x68, 0x6e, 0x18, 0x2f,
	0xcf, 0xcf, 0xee, 0xb2, 0xf9, 0xb9, 0xf1, 0x19, 0x7c, 0x0e, 0x74, 0x17, 0x07, 0x18, 0x69, 0x2a,
	0x4c, 0x6f, 0xe4, 0x85, 0xe9, 0x0b, 0x2c, 0xb0, 0x47, 0x02, 0x22, 0x16, 0xba, 0xdf, 0x5d, 0x91,
	0x25, 0x85, 0xad, 0xfd, 0xa4, 0x01, 0x3d, 0x19, 0xa7, 0x59, 0xcd, 0x36, 0x73, 0x6b, 0xf6, 0xf0,
	0xbf, 0x55, 0x33, 0x0c, 0x4a, 0x94, 0xf9, 0xe1, 0xf9, 0x9c, 0xbf, 0x62, 0xd5, 0x56, 0xce, 0x7a,
	0x0a, 0x86, 0x0e, 0x28, 0xf3, 0x30, 0x50, 0x1e, 0xe5, 0xeb, 0x78, 0xac, 0x9a, 0xf2, 0x19, 0xb9,
	0xf6, 0xa3, 0x0e, 0x2a, 0xe7, 0x88, 0xff, 0x55, 0x87, 0x86, 0x40, 0x4f, 0x2a, 0x85, 0x34, 0xc5,
	0xf8, 0x26, 0x8e, 0x8c, 0x93, 0x65, 0xb1, 0xcd, 0x7b, 0x7a, 0x72, 0x46, 0xf8, 0xe9, 0xe3, 0x93,
	0x40, 0x50, 0x36, 0x30, 0x3f, 0x0b, 0xbd, 0x3e, 0x11, 0x66, 0x8f, 0xf3, 0x11, 0xc1, 0xcc, 0xfc,
	0xbc, 0xff, 0x3d, 0x71, 0x02, 0xf3, 0x88, 0x4d, 0x2c, 0x5b, 0x99, 0xc0, 0x26, 0xd8, 0xe4, 0xca,
	0x16, 0x8f, 0xd4, 0x99, 0xb0, 0xd9, 0x7b, 0x3d, 0x8e, 0x8c, 0xea, 0xdc, 0x99, 0x60, 0x9f, 0x2f,
	0x49, 0x96, 0x0b, 0xe2, 0x13, 0x1c, 0x10, 0x57, 0x1d, 0xaa, 0x8b, 0xcb, 0x0f, 0x2c, 0xfb, 0x7c,
	0x09, 0xa4, 0xa0, 0xc4, 0x95, 0x25, 0x02, 0x57, 0x09, 0x42, 0x27, 0x8e, 0x8c, 0x56, 0xb6, 0xe6,
	0xf7, 0xb3, 0x9b, 0x0d, 0x19, 0x7d, 0x11, 0x92, 0xc6, 0xe5, 0xd0, 0xa5, 0x06, 0xb5, 0x5f, 0x35,
	0x50, 0x9d, 0x7b, 0xce, 0xc2, 0x4f, 0x41, 0x79, 0xcc, 0x47, 0xa1, 0x47, 0x24, 0x2a, 0x98, 0x5a,
	0xbd, 0xd2, 0xeb, 0xc6, 0x91, 0xd1, 0x5e, 0xd6, 0xd2, 0x2c, 0x3d, 0xdb, 0x9a, 0x19, 0x03, 0x7e,
	0x0d, 0xb6, 0xa6, 0x1f, 0x8f, 0x05, 0xf7, 0xd0, 0x46, 0x2e, 0xb2, 0x73, 0x15, 0x64, 0x96, 0x03,
	0x8f, 0x41, 0xd1, 0xe7, 0x22, 0x90, 0xea, 0x10, 0x5b, 0xcc, 0x6e, 0x77, 0x29, 0x90, 0x8b, 0xc0,
	0xc3, 0xbe, 0x65, 0xa7, 0x72, 0xf8, 0x01, 0xd0, 0xb1, 0x18, 0x48, 0xa4, 0x2b, 0x4c, 0x23, 0x8e,
	0x8c, 0xfa, 0xca, 0x1f, 0x00, 0x73, 0x11, 0x4e, 0x94, 0xf0, 0x08, 0x94, 0x1d, 0xee, 0x79, 0x98,
	0xb9, 0xa8, 0x98, 0x1b, 0xdf, 0xbd, 0x65, 0xf1, 0x9d, 0xe9, 0xe0, 0x7b, 0x40, 0x23, 0x6c, 0xac,
	0x4e, 0x96, 0xc5, 0x7b, 0xd8, 0x5f, 0xb6, 0x15, 0xc2, 0xc6, 0x96, 0x9d, 0x08, 0x6b, 0xbf, 0xe9,
	0x00, 0x5c, 0x3c, 0xfe, 0x6f, 0x64, 0xaa, 0x8f, 0x41, 0x91, 0x7a, 0x78, 0x70, 0xfd, 0x5f, 0x8e,
	0xa9, 0x3c, 0x9b, 0xa6, 0x7f, 0xd1, 0xfa, 0x65, 0x69, 0xd2, 0x72, 0x91, 0xdd, 0xeb, 0xa7, 0x49,
	0xcf, 0x4d, 0xd3, 0xde, 0xab, 0xa6, 0xe9, 0x0a, 0x9d, 0xbc, 0x6e, 0x9a, 0x1e, 0x5c, 0x35, 0x4d,
	0x95, 0xdc, 0x7b, 0x38, 0x58, 0x9b, 0xa6, 0x5e, 0xf7, 0xe5, 0x1f, 0x3b, 0xb7, 0x7e, 0xfe, 0x73,
	0xa7, 0xf0, 0xec, 0xde, 0xfa, 0x17, 0x9d, 0xe9, 0xbb, 0x56, 0xbf, 0xa4, 0x5e, 0x9e, 0xba, 0xff,
	0x04, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x5a, 0xdf, 0xf3, 0x7d, 0x0d, 0x00, 0x00,
}

func (this *Service) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Service)
	if !ok {
		that2, ok := that.(Service)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Hash.Equal(that1.Hash) {
		return false
	}
	if this.Sid != that1.Sid {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if !this.Configuration.Equal(&that1.Configuration) {
		return false
	}
	if len(this.Tasks) != len(that1.Tasks) {
		return false
	}
	for i := range this.Tasks {
		if !this.Tasks[i].Equal(that1.Tasks[i]) {
			return false
		}
	}
	if len(this.Events) != len(that1.Events) {
		return false
	}
	for i := range this.Events {
		if !this.Events[i].Equal(that1.Events[i]) {
			return false
		}
	}
	if len(this.Dependencies) != len(that1.Dependencies) {
		return false
	}
	for i := range this.Dependencies {
		if !this.Dependencies[i].Equal(that1.Dependencies[i]) {
			return false
		}
	}
	if this.Repository != that1.Repository {
		return false
	}
	if this.Source != that1.Source {
		return false
	}
	if !bytes.Equal(this.Address, that1.Address) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Service_Event) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Service_Event)
	if !ok {
		that2, ok := that.(Service_Event)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if len(this.Data) != len(that1.Data) {
		return false
	}
	for i := range this.Data {
		if !this.Data[i].Equal(that1.Data[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Service_Task) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Service_Task)
	if !ok {
		that2, ok := that.(Service_Task)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if len(this.Inputs) != len(that1.Inputs) {
		return false
	}
	for i := range this.Inputs {
		if !this.Inputs[i].Equal(that1.Inputs[i]) {
			return false
		}
	}
	if len(this.Outputs) != len(that1.Outputs) {
		return false
	}
	for i := range this.Outputs {
		if !this.Outputs[i].Equal(that1.Outputs[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Service_Parameter) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Service_Parameter)
	if !ok {
		that2, ok := that.(Service_Parameter)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	if this.Description != that1.Description {
		return false
	}
	if this.Type != that1.Type {
		return false
	}
	if this.Optional != that1.Optional {
		return false
	}
	if this.Repeated != that1.Repeated {
		return false
	}
	if len(this.Object) != len(that1.Object) {
		return false
	}
	for i := range this.Object {
		if !this.Object[i].Equal(that1.Object[i]) {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Service_Configuration) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Service_Configuration)
	if !ok {
		that2, ok := that.(Service_Configuration)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Volumes) != len(that1.Volumes) {
		return false
	}
	for i := range this.Volumes {
		if this.Volumes[i] != that1.Volumes[i] {
			return false
		}
	}
	if len(this.VolumesFrom) != len(that1.VolumesFrom) {
		return false
	}
	for i := range this.VolumesFrom {
		if this.VolumesFrom[i] != that1.VolumesFrom[i] {
			return false
		}
	}
	if len(this.Ports) != len(that1.Ports) {
		return false
	}
	for i := range this.Ports {
		if this.Ports[i] != that1.Ports[i] {
			return false
		}
	}
	if len(this.Args) != len(that1.Args) {
		return false
	}
	for i := range this.Args {
		if this.Args[i] != that1.Args[i] {
			return false
		}
	}
	if this.Command != that1.Command {
		return false
	}
	if len(this.Env) != len(that1.Env) {
		return false
	}
	for i := range this.Env {
		if this.Env[i] != that1.Env[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
func (this *Service_Dependency) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Service_Dependency)
	if !ok {
		that2, ok := that.(Service_Dependency)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Key != that1.Key {
		return false
	}
	if this.Image != that1.Image {
		return false
	}
	if len(this.Volumes) != len(that1.Volumes) {
		return false
	}
	for i := range this.Volumes {
		if this.Volumes[i] != that1.Volumes[i] {
			return false
		}
	}
	if len(this.VolumesFrom) != len(that1.VolumesFrom) {
		return false
	}
	for i := range this.VolumesFrom {
		if this.VolumesFrom[i] != that1.VolumesFrom[i] {
			return false
		}
	}
	if len(this.Ports) != len(that1.Ports) {
		return false
	}
	for i := range this.Ports {
		if this.Ports[i] != that1.Ports[i] {
			return false
		}
	}
	if len(this.Args) != len(that1.Args) {
		return false
	}
	for i := range this.Args {
		if this.Args[i] != that1.Args[i] {
			return false
		}
	}
	if this.Command != that1.Command {
		return false
	}
	if len(this.Env) != len(that1.Env) {
		return false
	}
	for i := range this.Env {
		if this.Env[i] != that1.Env[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
