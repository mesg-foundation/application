// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/coreapi/api.proto

package coreapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeployServiceReply_Status_Type int32

const (
	DeployServiceReply_Status_RUNNING       DeployServiceReply_Status_Type = 0
	DeployServiceReply_Status_DONE_POSITIVE DeployServiceReply_Status_Type = 1
	DeployServiceReply_Status_DONE_NEGATIVE DeployServiceReply_Status_Type = 2
)

var DeployServiceReply_Status_Type_name = map[int32]string{
	0: "RUNNING",
	1: "DONE_POSITIVE",
	2: "DONE_NEGATIVE",
}
var DeployServiceReply_Status_Type_value = map[string]int32{
	"RUNNING":       0,
	"DONE_POSITIVE": 1,
	"DONE_NEGATIVE": 2,
}

func (x DeployServiceReply_Status_Type) String() string {
	return proto.EnumName(DeployServiceReply_Status_Type_name, int32(x))
}
func (DeployServiceReply_Status_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{11, 0, 0}
}

type LogData_Type int32

const (
	LogData_Standard LogData_Type = 0
	LogData_Error    LogData_Type = 1
)

var LogData_Type_name = map[int32]string{
	0: "Standard",
	1: "Error",
}
var LogData_Type_value = map[string]int32{
	"Standard": 0,
	"Error":    1,
}

func (x LogData_Type) String() string {
	return proto.EnumName(LogData_Type_name, int32(x))
}
func (LogData_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{21, 0}
}

type Service_Status int32

const (
	Service_UNKNOWN  Service_Status = 0
	Service_STOPPED  Service_Status = 1
	Service_STARTING Service_Status = 2
	Service_PARTIAL  Service_Status = 3
	Service_RUNNING  Service_Status = 4
)

var Service_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "STOPPED",
	2: "STARTING",
	3: "PARTIAL",
	4: "RUNNING",
}
var Service_Status_value = map[string]int32{
	"UNKNOWN":  0,
	"STOPPED":  1,
	"STARTING": 2,
	"PARTIAL":  3,
	"RUNNING":  4,
}

func (x Service_Status) String() string {
	return proto.EnumName(Service_Status_name, int32(x))
}
func (Service_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{22, 0}
}

// The request's data for the `ListenEvent` stream's API.
//
// **Example**
// ```json
// {
//   "serviceID":   "__SERVICE_ID__",
//   "eventFilter": "__EVENT_KEY_TO_MATCH__"
// }
// ```
type ListenEventRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	EventFilter          string   `protobuf:"bytes,2,opt,name=eventFilter,proto3" json:"eventFilter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenEventRequest) Reset()         { *m = ListenEventRequest{} }
func (m *ListenEventRequest) String() string { return proto.CompactTextString(m) }
func (*ListenEventRequest) ProtoMessage()    {}
func (*ListenEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{0}
}
func (m *ListenEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenEventRequest.Unmarshal(m, b)
}
func (m *ListenEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenEventRequest.Marshal(b, m, deterministic)
}
func (dst *ListenEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenEventRequest.Merge(dst, src)
}
func (m *ListenEventRequest) XXX_Size() int {
	return xxx_messageInfo_ListenEventRequest.Size(m)
}
func (m *ListenEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenEventRequest proto.InternalMessageInfo

func (m *ListenEventRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

func (m *ListenEventRequest) GetEventFilter() string {
	if m != nil {
		return m.EventFilter
	}
	return ""
}

// The data received from the stream of the `ListenEvent` API.
// The data will be received over time as long as the stream is open.
//
// **Example**
// ```json
// {
//   "eventKey":  "__EVENT_KEY__",
//   "eventData": "{\"foo\":\"bar\"}"
// }
// ```
type EventData struct {
	EventKey             string   `protobuf:"bytes,1,opt,name=eventKey,proto3" json:"eventKey,omitempty"`
	EventData            string   `protobuf:"bytes,2,opt,name=eventData,proto3" json:"eventData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventData) Reset()         { *m = EventData{} }
func (m *EventData) String() string { return proto.CompactTextString(m) }
func (*EventData) ProtoMessage()    {}
func (*EventData) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{1}
}
func (m *EventData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventData.Unmarshal(m, b)
}
func (m *EventData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventData.Marshal(b, m, deterministic)
}
func (dst *EventData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventData.Merge(dst, src)
}
func (m *EventData) XXX_Size() int {
	return xxx_messageInfo_EventData.Size(m)
}
func (m *EventData) XXX_DiscardUnknown() {
	xxx_messageInfo_EventData.DiscardUnknown(m)
}

var xxx_messageInfo_EventData proto.InternalMessageInfo

func (m *EventData) GetEventKey() string {
	if m != nil {
		return m.EventKey
	}
	return ""
}

func (m *EventData) GetEventData() string {
	if m != nil {
		return m.EventData
	}
	return ""
}

// The request's data for the `ListenResult` stream API.
//
// **Example**
// ```json
// {
//   "serviceID":     "__SERVICE_ID__",
//   "taskFilter":    "__TASK_KEY_TO_MATCH__",
//   "outputFilter":  "__OUTPUT_KEY_TO_MATCH__",
//   "tagFilters":     ["tagX"]
// }
// ```
type ListenResultRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	TaskFilter           string   `protobuf:"bytes,2,opt,name=taskFilter,proto3" json:"taskFilter,omitempty"`
	OutputFilter         string   `protobuf:"bytes,3,opt,name=outputFilter,proto3" json:"outputFilter,omitempty"`
	TagFilters           []string `protobuf:"bytes,4,rep,name=tagFilters,proto3" json:"tagFilters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListenResultRequest) Reset()         { *m = ListenResultRequest{} }
func (m *ListenResultRequest) String() string { return proto.CompactTextString(m) }
func (*ListenResultRequest) ProtoMessage()    {}
func (*ListenResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{2}
}
func (m *ListenResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListenResultRequest.Unmarshal(m, b)
}
func (m *ListenResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListenResultRequest.Marshal(b, m, deterministic)
}
func (dst *ListenResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListenResultRequest.Merge(dst, src)
}
func (m *ListenResultRequest) XXX_Size() int {
	return xxx_messageInfo_ListenResultRequest.Size(m)
}
func (m *ListenResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListenResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListenResultRequest proto.InternalMessageInfo

func (m *ListenResultRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

func (m *ListenResultRequest) GetTaskFilter() string {
	if m != nil {
		return m.TaskFilter
	}
	return ""
}

func (m *ListenResultRequest) GetOutputFilter() string {
	if m != nil {
		return m.OutputFilter
	}
	return ""
}

func (m *ListenResultRequest) GetTagFilters() []string {
	if m != nil {
		return m.TagFilters
	}
	return nil
}

// The data received from the stream of the `ListenResult` API.
// The data will be received over time as long as the stream is open.
//
// **Example**
// ```json
// {
//   "executionID":   "__EXECUTION_ID__",
//   "taskKey":       "__TASK_KEY__",
//   "outputKey":     "__OUTPUT_KEY__",
//   "outputData":    "{\"foo\":\"bar\"}",
//   "executionTags": ["executionX", "test"],
//   "error":         "error from the execution if something went wrong",
// }
// ```
type ResultData struct {
	ExecutionID          string   `protobuf:"bytes,1,opt,name=executionID,proto3" json:"executionID,omitempty"`
	TaskKey              string   `protobuf:"bytes,2,opt,name=taskKey,proto3" json:"taskKey,omitempty"`
	OutputKey            string   `protobuf:"bytes,3,opt,name=outputKey,proto3" json:"outputKey,omitempty"`
	OutputData           string   `protobuf:"bytes,4,opt,name=outputData,proto3" json:"outputData,omitempty"`
	ExecutionTags        []string `protobuf:"bytes,5,rep,name=executionTags,proto3" json:"executionTags,omitempty"`
	Error                string   `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultData) Reset()         { *m = ResultData{} }
func (m *ResultData) String() string { return proto.CompactTextString(m) }
func (*ResultData) ProtoMessage()    {}
func (*ResultData) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{3}
}
func (m *ResultData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultData.Unmarshal(m, b)
}
func (m *ResultData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultData.Marshal(b, m, deterministic)
}
func (dst *ResultData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultData.Merge(dst, src)
}
func (m *ResultData) XXX_Size() int {
	return xxx_messageInfo_ResultData.Size(m)
}
func (m *ResultData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultData.DiscardUnknown(m)
}

var xxx_messageInfo_ResultData proto.InternalMessageInfo

func (m *ResultData) GetExecutionID() string {
	if m != nil {
		return m.ExecutionID
	}
	return ""
}

func (m *ResultData) GetTaskKey() string {
	if m != nil {
		return m.TaskKey
	}
	return ""
}

func (m *ResultData) GetOutputKey() string {
	if m != nil {
		return m.OutputKey
	}
	return ""
}

func (m *ResultData) GetOutputData() string {
	if m != nil {
		return m.OutputData
	}
	return ""
}

func (m *ResultData) GetExecutionTags() []string {
	if m != nil {
		return m.ExecutionTags
	}
	return nil
}

func (m *ResultData) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

// The request's data for the `ExecuteTask` API.
//
// **Example**
// ```json
// {
//   "serviceID":     "__SERVICE_ID__",
//   "taskKey":       "__TASK_KEY__",
//   "inputData":     "{\"foo\":\"bar\"}",
//   "executionTags": ["executionX", "test"]
// }
// ```
type ExecuteTaskRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	TaskKey              string   `protobuf:"bytes,2,opt,name=taskKey,proto3" json:"taskKey,omitempty"`
	InputData            string   `protobuf:"bytes,3,opt,name=inputData,proto3" json:"inputData,omitempty"`
	ExecutionTags        []string `protobuf:"bytes,4,rep,name=executionTags,proto3" json:"executionTags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteTaskRequest) Reset()         { *m = ExecuteTaskRequest{} }
func (m *ExecuteTaskRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteTaskRequest) ProtoMessage()    {}
func (*ExecuteTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{4}
}
func (m *ExecuteTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteTaskRequest.Unmarshal(m, b)
}
func (m *ExecuteTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteTaskRequest.Marshal(b, m, deterministic)
}
func (dst *ExecuteTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteTaskRequest.Merge(dst, src)
}
func (m *ExecuteTaskRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteTaskRequest.Size(m)
}
func (m *ExecuteTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteTaskRequest proto.InternalMessageInfo

func (m *ExecuteTaskRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

func (m *ExecuteTaskRequest) GetTaskKey() string {
	if m != nil {
		return m.TaskKey
	}
	return ""
}

func (m *ExecuteTaskRequest) GetInputData() string {
	if m != nil {
		return m.InputData
	}
	return ""
}

func (m *ExecuteTaskRequest) GetExecutionTags() []string {
	if m != nil {
		return m.ExecutionTags
	}
	return nil
}

// The reply's data of the `ExecuteTask` API.
//
// **Example**
// ```json
// {
//   "executionID": "__EXECUTION_ID__"
// }
// ```
type ExecuteTaskReply struct {
	ExecutionID          string   `protobuf:"bytes,1,opt,name=executionID,proto3" json:"executionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteTaskReply) Reset()         { *m = ExecuteTaskReply{} }
func (m *ExecuteTaskReply) String() string { return proto.CompactTextString(m) }
func (*ExecuteTaskReply) ProtoMessage()    {}
func (*ExecuteTaskReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{5}
}
func (m *ExecuteTaskReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteTaskReply.Unmarshal(m, b)
}
func (m *ExecuteTaskReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteTaskReply.Marshal(b, m, deterministic)
}
func (dst *ExecuteTaskReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteTaskReply.Merge(dst, src)
}
func (m *ExecuteTaskReply) XXX_Size() int {
	return xxx_messageInfo_ExecuteTaskReply.Size(m)
}
func (m *ExecuteTaskReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteTaskReply.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteTaskReply proto.InternalMessageInfo

func (m *ExecuteTaskReply) GetExecutionID() string {
	if m != nil {
		return m.ExecutionID
	}
	return ""
}

// The request's data for the `StartService` API.
//
// **Example**
// ```json
// {
//   "serviceID": "__SERVICE_ID__"
// }
// ```
type StartServiceRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartServiceRequest) Reset()         { *m = StartServiceRequest{} }
func (m *StartServiceRequest) String() string { return proto.CompactTextString(m) }
func (*StartServiceRequest) ProtoMessage()    {}
func (*StartServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{6}
}
func (m *StartServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartServiceRequest.Unmarshal(m, b)
}
func (m *StartServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartServiceRequest.Marshal(b, m, deterministic)
}
func (dst *StartServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartServiceRequest.Merge(dst, src)
}
func (m *StartServiceRequest) XXX_Size() int {
	return xxx_messageInfo_StartServiceRequest.Size(m)
}
func (m *StartServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartServiceRequest proto.InternalMessageInfo

func (m *StartServiceRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

// Reply of `StartService` API doesn't contain any data.
type StartServiceReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartServiceReply) Reset()         { *m = StartServiceReply{} }
func (m *StartServiceReply) String() string { return proto.CompactTextString(m) }
func (*StartServiceReply) ProtoMessage()    {}
func (*StartServiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{7}
}
func (m *StartServiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartServiceReply.Unmarshal(m, b)
}
func (m *StartServiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartServiceReply.Marshal(b, m, deterministic)
}
func (dst *StartServiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartServiceReply.Merge(dst, src)
}
func (m *StartServiceReply) XXX_Size() int {
	return xxx_messageInfo_StartServiceReply.Size(m)
}
func (m *StartServiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StartServiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_StartServiceReply proto.InternalMessageInfo

// The request's data for the `StopService` API.
//
// **Example**
// ```json
// {
//   "serviceID": "__SERVICE_ID__"
// }
// ```
type StopServiceRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopServiceRequest) Reset()         { *m = StopServiceRequest{} }
func (m *StopServiceRequest) String() string { return proto.CompactTextString(m) }
func (*StopServiceRequest) ProtoMessage()    {}
func (*StopServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{8}
}
func (m *StopServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopServiceRequest.Unmarshal(m, b)
}
func (m *StopServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopServiceRequest.Marshal(b, m, deterministic)
}
func (dst *StopServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopServiceRequest.Merge(dst, src)
}
func (m *StopServiceRequest) XXX_Size() int {
	return xxx_messageInfo_StopServiceRequest.Size(m)
}
func (m *StopServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopServiceRequest proto.InternalMessageInfo

func (m *StopServiceRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

// Reply of `StopService` API doesn't contain any data.
type StopServiceReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopServiceReply) Reset()         { *m = StopServiceReply{} }
func (m *StopServiceReply) String() string { return proto.CompactTextString(m) }
func (*StopServiceReply) ProtoMessage()    {}
func (*StopServiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{9}
}
func (m *StopServiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopServiceReply.Unmarshal(m, b)
}
func (m *StopServiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopServiceReply.Marshal(b, m, deterministic)
}
func (dst *StopServiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopServiceReply.Merge(dst, src)
}
func (m *StopServiceReply) XXX_Size() int {
	return xxx_messageInfo_StopServiceReply.Size(m)
}
func (m *StopServiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_StopServiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_StopServiceReply proto.InternalMessageInfo

// The data sent to the request stream of the `DeployService` API.
// Stream should be closed after url or all chunks sent to server.
//
// **Example**
// ```json
// {
//   "env": {
//     "key": "value"
//   },
//   "url": "__SERVICE_GIT_URL__"
// }
// ```
// or
// ```json
// {
//   "env": {
//     "key": "value"
//   },
//   "chunk": "__SERVICE_GZIPPED_TAR_FILE_CHUNK__"
// }
// ```
type DeployServiceRequest struct {
	// Types that are valid to be assigned to Value:
	//	*DeployServiceRequest_Url
	//	*DeployServiceRequest_Chunk
	Value                isDeployServiceRequest_Value `protobuf_oneof:"value"`
	Env                  map[string]string            `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DeployServiceRequest) Reset()         { *m = DeployServiceRequest{} }
func (m *DeployServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeployServiceRequest) ProtoMessage()    {}
func (*DeployServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{10}
}
func (m *DeployServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployServiceRequest.Unmarshal(m, b)
}
func (m *DeployServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployServiceRequest.Marshal(b, m, deterministic)
}
func (dst *DeployServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployServiceRequest.Merge(dst, src)
}
func (m *DeployServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeployServiceRequest.Size(m)
}
func (m *DeployServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeployServiceRequest proto.InternalMessageInfo

type isDeployServiceRequest_Value interface {
	isDeployServiceRequest_Value()
}

type DeployServiceRequest_Url struct {
	Url string `protobuf:"bytes,2,opt,name=url,proto3,oneof"`
}

type DeployServiceRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,3,opt,name=chunk,proto3,oneof"`
}

func (*DeployServiceRequest_Url) isDeployServiceRequest_Value() {}

func (*DeployServiceRequest_Chunk) isDeployServiceRequest_Value() {}

func (m *DeployServiceRequest) GetValue() isDeployServiceRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DeployServiceRequest) GetUrl() string {
	if x, ok := m.GetValue().(*DeployServiceRequest_Url); ok {
		return x.Url
	}
	return ""
}

func (m *DeployServiceRequest) GetChunk() []byte {
	if x, ok := m.GetValue().(*DeployServiceRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (m *DeployServiceRequest) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeployServiceRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeployServiceRequest_OneofMarshaler, _DeployServiceRequest_OneofUnmarshaler, _DeployServiceRequest_OneofSizer, []interface{}{
		(*DeployServiceRequest_Url)(nil),
		(*DeployServiceRequest_Chunk)(nil),
	}
}

func _DeployServiceRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeployServiceRequest)
	// value
	switch x := m.Value.(type) {
	case *DeployServiceRequest_Url:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Url)
	case *DeployServiceRequest_Chunk:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Chunk)
	case nil:
	default:
		return fmt.Errorf("DeployServiceRequest.Value has unexpected type %T", x)
	}
	return nil
}

func _DeployServiceRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeployServiceRequest)
	switch tag {
	case 2: // value.url
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &DeployServiceRequest_Url{x}
		return true, err
	case 3: // value.chunk
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Value = &DeployServiceRequest_Chunk{x}
		return true, err
	default:
		return false, nil
	}
}

func _DeployServiceRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeployServiceRequest)
	// value
	switch x := m.Value.(type) {
	case *DeployServiceRequest_Url:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Url)))
		n += len(x.Url)
	case *DeployServiceRequest_Chunk:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Chunk)))
		n += len(x.Chunk)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// The data received from the reply stream of the `DeployService` API.
// Stream will be closed by server after deployment is done.
//
// **Example**
// ```json
// {
//   "status": {
//     "message": "__STATUS_MESSAGE__",
//     "type": "__STATUS_TYPE__",
//   }
// }
// ```
// or
// ```json
// {
//   "serviceID": "__SERVICE_ID__"
// }
// ```
// or
// ```json
// {
//   "validationError": "__SERVICE_VALIDATION_ERROR__"
// }
// ```
type DeployServiceReply struct {
	// Types that are valid to be assigned to Value:
	//	*DeployServiceReply_Status_
	//	*DeployServiceReply_ValidationError
	//	*DeployServiceReply_Service_
	Value                isDeployServiceReply_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *DeployServiceReply) Reset()         { *m = DeployServiceReply{} }
func (m *DeployServiceReply) String() string { return proto.CompactTextString(m) }
func (*DeployServiceReply) ProtoMessage()    {}
func (*DeployServiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{11}
}
func (m *DeployServiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployServiceReply.Unmarshal(m, b)
}
func (m *DeployServiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployServiceReply.Marshal(b, m, deterministic)
}
func (dst *DeployServiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployServiceReply.Merge(dst, src)
}
func (m *DeployServiceReply) XXX_Size() int {
	return xxx_messageInfo_DeployServiceReply.Size(m)
}
func (m *DeployServiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployServiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeployServiceReply proto.InternalMessageInfo

type isDeployServiceReply_Value interface {
	isDeployServiceReply_Value()
}

type DeployServiceReply_Status_ struct {
	Status *DeployServiceReply_Status `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

type DeployServiceReply_ValidationError struct {
	ValidationError string `protobuf:"bytes,4,opt,name=validationError,proto3,oneof"`
}

type DeployServiceReply_Service_ struct {
	Service *DeployServiceReply_Service `protobuf:"bytes,5,opt,name=service,proto3,oneof"`
}

func (*DeployServiceReply_Status_) isDeployServiceReply_Value() {}

func (*DeployServiceReply_ValidationError) isDeployServiceReply_Value() {}

func (*DeployServiceReply_Service_) isDeployServiceReply_Value() {}

func (m *DeployServiceReply) GetValue() isDeployServiceReply_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *DeployServiceReply) GetStatus() *DeployServiceReply_Status {
	if x, ok := m.GetValue().(*DeployServiceReply_Status_); ok {
		return x.Status
	}
	return nil
}

func (m *DeployServiceReply) GetValidationError() string {
	if x, ok := m.GetValue().(*DeployServiceReply_ValidationError); ok {
		return x.ValidationError
	}
	return ""
}

func (m *DeployServiceReply) GetService() *DeployServiceReply_Service {
	if x, ok := m.GetValue().(*DeployServiceReply_Service_); ok {
		return x.Service
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeployServiceReply) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeployServiceReply_OneofMarshaler, _DeployServiceReply_OneofUnmarshaler, _DeployServiceReply_OneofSizer, []interface{}{
		(*DeployServiceReply_Status_)(nil),
		(*DeployServiceReply_ValidationError)(nil),
		(*DeployServiceReply_Service_)(nil),
	}
}

func _DeployServiceReply_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeployServiceReply)
	// value
	switch x := m.Value.(type) {
	case *DeployServiceReply_Status_:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Status); err != nil {
			return err
		}
	case *DeployServiceReply_ValidationError:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.ValidationError)
	case *DeployServiceReply_Service_:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Service); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("DeployServiceReply.Value has unexpected type %T", x)
	}
	return nil
}

func _DeployServiceReply_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeployServiceReply)
	switch tag {
	case 2: // value.status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeployServiceReply_Status)
		err := b.DecodeMessage(msg)
		m.Value = &DeployServiceReply_Status_{msg}
		return true, err
	case 4: // value.validationError
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &DeployServiceReply_ValidationError{x}
		return true, err
	case 5: // value.service
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DeployServiceReply_Service)
		err := b.DecodeMessage(msg)
		m.Value = &DeployServiceReply_Service_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _DeployServiceReply_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeployServiceReply)
	// value
	switch x := m.Value.(type) {
	case *DeployServiceReply_Status_:
		s := proto.Size(x.Status)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *DeployServiceReply_ValidationError:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.ValidationError)))
		n += len(x.ValidationError)
	case *DeployServiceReply_Service_:
		s := proto.Size(x.Service)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DeployServiceReply_Status struct {
	Message              string                         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Type                 DeployServiceReply_Status_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.DeployServiceReply_Status_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *DeployServiceReply_Status) Reset()         { *m = DeployServiceReply_Status{} }
func (m *DeployServiceReply_Status) String() string { return proto.CompactTextString(m) }
func (*DeployServiceReply_Status) ProtoMessage()    {}
func (*DeployServiceReply_Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{11, 0}
}
func (m *DeployServiceReply_Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployServiceReply_Status.Unmarshal(m, b)
}
func (m *DeployServiceReply_Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployServiceReply_Status.Marshal(b, m, deterministic)
}
func (dst *DeployServiceReply_Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployServiceReply_Status.Merge(dst, src)
}
func (m *DeployServiceReply_Status) XXX_Size() int {
	return xxx_messageInfo_DeployServiceReply_Status.Size(m)
}
func (m *DeployServiceReply_Status) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployServiceReply_Status.DiscardUnknown(m)
}

var xxx_messageInfo_DeployServiceReply_Status proto.InternalMessageInfo

func (m *DeployServiceReply_Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *DeployServiceReply_Status) GetType() DeployServiceReply_Status_Type {
	if m != nil {
		return m.Type
	}
	return DeployServiceReply_Status_RUNNING
}

type DeployServiceReply_Service struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeployServiceReply_Service) Reset()         { *m = DeployServiceReply_Service{} }
func (m *DeployServiceReply_Service) String() string { return proto.CompactTextString(m) }
func (*DeployServiceReply_Service) ProtoMessage()    {}
func (*DeployServiceReply_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{11, 1}
}
func (m *DeployServiceReply_Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeployServiceReply_Service.Unmarshal(m, b)
}
func (m *DeployServiceReply_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeployServiceReply_Service.Marshal(b, m, deterministic)
}
func (dst *DeployServiceReply_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeployServiceReply_Service.Merge(dst, src)
}
func (m *DeployServiceReply_Service) XXX_Size() int {
	return xxx_messageInfo_DeployServiceReply_Service.Size(m)
}
func (m *DeployServiceReply_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_DeployServiceReply_Service.DiscardUnknown(m)
}

var xxx_messageInfo_DeployServiceReply_Service proto.InternalMessageInfo

func (m *DeployServiceReply_Service) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *DeployServiceReply_Service) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// Request's data of the `DeleteService` API.
//
// **Example**
// ```json
// {
//   "serviceID": "__SERVICE_ID__"
// }
// ```
type DeleteServiceRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	DeleteData           bool     `protobuf:"varint,2,opt,name=deleteData,proto3" json:"deleteData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteServiceRequest) Reset()         { *m = DeleteServiceRequest{} }
func (m *DeleteServiceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceRequest) ProtoMessage()    {}
func (*DeleteServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{12}
}
func (m *DeleteServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteServiceRequest.Unmarshal(m, b)
}
func (m *DeleteServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteServiceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteServiceRequest.Merge(dst, src)
}
func (m *DeleteServiceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteServiceRequest.Size(m)
}
func (m *DeleteServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteServiceRequest proto.InternalMessageInfo

func (m *DeleteServiceRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

func (m *DeleteServiceRequest) GetDeleteData() bool {
	if m != nil {
		return m.DeleteData
	}
	return false
}

// Reply of `DeleteService` API doesn't contain any data.
type DeleteServiceReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteServiceReply) Reset()         { *m = DeleteServiceReply{} }
func (m *DeleteServiceReply) String() string { return proto.CompactTextString(m) }
func (*DeleteServiceReply) ProtoMessage()    {}
func (*DeleteServiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{13}
}
func (m *DeleteServiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteServiceReply.Unmarshal(m, b)
}
func (m *DeleteServiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteServiceReply.Marshal(b, m, deterministic)
}
func (dst *DeleteServiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteServiceReply.Merge(dst, src)
}
func (m *DeleteServiceReply) XXX_Size() int {
	return xxx_messageInfo_DeleteServiceReply.Size(m)
}
func (m *DeleteServiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteServiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteServiceReply proto.InternalMessageInfo

// Reply of `ListServices` API doesn't contain any data.
type ListServicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListServicesRequest) Reset()         { *m = ListServicesRequest{} }
func (m *ListServicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListServicesRequest) ProtoMessage()    {}
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{14}
}
func (m *ListServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesRequest.Unmarshal(m, b)
}
func (m *ListServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesRequest.Marshal(b, m, deterministic)
}
func (dst *ListServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesRequest.Merge(dst, src)
}
func (m *ListServicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListServicesRequest.Size(m)
}
func (m *ListServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesRequest proto.InternalMessageInfo

// The reply's data of the `ListServices` API.
//
// **Example**
// ```json
// {
//   "services": [{
//     "id": "idX",
//     "sid": "sidX",
//     "name": "serviceX",
//     "description": "descriptionX",
//     "status": "statusX",
//     "events": [{
//       "key": "eventX",
//       "name": "nameX",
//       "description": "descriptionX",
//       "data": [{
//         "key": "dataX",
//         "name": "nameX",
//         "description": "descriptionX",
//         "type": "String",
//         "optional": true
//       }]
//     }],
//     "tasks": [{
//       "key": "taskX",
//       "name": "nameX",
//       "description": "descriptionX",
//       "inputs": [{
//         "key": "foo",
//         "name": "nameX",
//         "description": "descriptionX",
//         "type": "String",
//         "optional": true
//       }],
//       "outputs": [{
//         "key": "outputX",
//         "name": "nameX",
//         "description": "descriptionX",
//         "data": [{
//           "key": "resX",
//           "name": "nameX",
//           "description": "descriptionX",
//           "type": "String",
//           "optional": false
//         }]
//       }]
//     }]
//   }]
// }
// ```
type ListServicesReply struct {
	Services             []*Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListServicesReply) Reset()         { *m = ListServicesReply{} }
func (m *ListServicesReply) String() string { return proto.CompactTextString(m) }
func (*ListServicesReply) ProtoMessage()    {}
func (*ListServicesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{15}
}
func (m *ListServicesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesReply.Unmarshal(m, b)
}
func (m *ListServicesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesReply.Marshal(b, m, deterministic)
}
func (dst *ListServicesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesReply.Merge(dst, src)
}
func (m *ListServicesReply) XXX_Size() int {
	return xxx_messageInfo_ListServicesReply.Size(m)
}
func (m *ListServicesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesReply proto.InternalMessageInfo

func (m *ListServicesReply) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

// The request's data for the `GetService` API.
//
// **Example**
// ```json
// {
//   "serviceID": "__SERVICE_ID__"
// }
// ```
type GetServiceRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceRequest) Reset()         { *m = GetServiceRequest{} }
func (m *GetServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceRequest) ProtoMessage()    {}
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{16}
}
func (m *GetServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceRequest.Unmarshal(m, b)
}
func (m *GetServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceRequest.Marshal(b, m, deterministic)
}
func (dst *GetServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceRequest.Merge(dst, src)
}
func (m *GetServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceRequest.Size(m)
}
func (m *GetServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceRequest proto.InternalMessageInfo

func (m *GetServiceRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

// The reply's data of the `GetService` API.
//
// **Example**
// ```json
// {
//   "service": {
//     "id": "idX",
//     "sid": "sidX",
//     "name": "serviceX",
//     "description": "descriptionX",
//     "status": "statusX",
//     "events": [{
//       "key": "eventX",
//       "name": "nameX",
//       "description": "descriptionX",
//       "data": [{
//         "key": "dataX",
//         "name": "nameX",
//         "description": "descriptionX",
//         "type": "String",
//         "optional": true
//       }]
//     }],
//     "tasks": [{
//       "key": "taskX",
//       "name": "nameX",
//       "description": "descriptionX",
//       "inputs": [{
//         "key": "foo",
//         "name": "nameX",
//         "description": "descriptionX",
//         "type": "String",
//         "optional": true
//       }],
//       "outputs": [{
//         "key": "outputX",
//         "name": "nameX",
//         "description": "descriptionX",
//         "data": [{
//           "key": "resX",
//           "name": "nameX",
//           "description": "descriptionX",
//           "type": "String",
//           "optional": false
//         }]
//       }]
//     }]
//   }
// }
// ```
type GetServiceReply struct {
	Service              *Service `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceReply) Reset()         { *m = GetServiceReply{} }
func (m *GetServiceReply) String() string { return proto.CompactTextString(m) }
func (*GetServiceReply) ProtoMessage()    {}
func (*GetServiceReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{17}
}
func (m *GetServiceReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceReply.Unmarshal(m, b)
}
func (m *GetServiceReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceReply.Marshal(b, m, deterministic)
}
func (dst *GetServiceReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceReply.Merge(dst, src)
}
func (m *GetServiceReply) XXX_Size() int {
	return xxx_messageInfo_GetServiceReply.Size(m)
}
func (m *GetServiceReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceReply proto.InternalMessageInfo

func (m *GetServiceReply) GetService() *Service {
	if m != nil {
		return m.Service
	}
	return nil
}

// The request's data for `ServiceLogs` API.
//
// **Example**
// ```json
// {
//   "serviceID": "__SERVICE_ID__",
//   "dependencies": ["__SERVICE_DEPENDENCY__"]
// }
// ```
type ServiceLogsRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	Dependencies         []string `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceLogsRequest) Reset()         { *m = ServiceLogsRequest{} }
func (m *ServiceLogsRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceLogsRequest) ProtoMessage()    {}
func (*ServiceLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{18}
}
func (m *ServiceLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceLogsRequest.Unmarshal(m, b)
}
func (m *ServiceLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceLogsRequest.Marshal(b, m, deterministic)
}
func (dst *ServiceLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceLogsRequest.Merge(dst, src)
}
func (m *ServiceLogsRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceLogsRequest.Size(m)
}
func (m *ServiceLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceLogsRequest proto.InternalMessageInfo

func (m *ServiceLogsRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

func (m *ServiceLogsRequest) GetDependencies() []string {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

// The request to fetch all information of the Core
type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{19}
}
func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (dst *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(dst, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

// Information concerning the Core from the `info` API.
type InfoReply struct {
	Services             []*InfoReply_CoreService `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	Address              string                   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Image                string                   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Version              string                   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *InfoReply) Reset()         { *m = InfoReply{} }
func (m *InfoReply) String() string { return proto.CompactTextString(m) }
func (*InfoReply) ProtoMessage()    {}
func (*InfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{20}
}
func (m *InfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReply.Unmarshal(m, b)
}
func (m *InfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReply.Marshal(b, m, deterministic)
}
func (dst *InfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReply.Merge(dst, src)
}
func (m *InfoReply) XXX_Size() int {
	return xxx_messageInfo_InfoReply.Size(m)
}
func (m *InfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReply proto.InternalMessageInfo

func (m *InfoReply) GetServices() []*InfoReply_CoreService {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *InfoReply) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *InfoReply) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *InfoReply) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type InfoReply_CoreService struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReply_CoreService) Reset()         { *m = InfoReply_CoreService{} }
func (m *InfoReply_CoreService) String() string { return proto.CompactTextString(m) }
func (*InfoReply_CoreService) ProtoMessage()    {}
func (*InfoReply_CoreService) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{20, 0}
}
func (m *InfoReply_CoreService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReply_CoreService.Unmarshal(m, b)
}
func (m *InfoReply_CoreService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReply_CoreService.Marshal(b, m, deterministic)
}
func (dst *InfoReply_CoreService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReply_CoreService.Merge(dst, src)
}
func (m *InfoReply_CoreService) XXX_Size() int {
	return xxx_messageInfo_InfoReply_CoreService.Size(m)
}
func (m *InfoReply_CoreService) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReply_CoreService.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReply_CoreService proto.InternalMessageInfo

func (m *InfoReply_CoreService) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *InfoReply_CoreService) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *InfoReply_CoreService) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *InfoReply_CoreService) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// The data received from the stream of the `ServiceLogs` API.
// The data will be received over time as long as the stream is open.
//
// **Example**
// ```json
// {
//   "dependency":  "__SERVICE_DEPENDENCY__",
//   "type": "__LOG_TYPE__",
//   "data":  "__LOG_CHUNK__",
// }
// ```
type LogData struct {
	Dependency           string       `protobuf:"bytes,1,opt,name=dependency,proto3" json:"dependency,omitempty"`
	Type                 LogData_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.LogData_Type" json:"type,omitempty"`
	Data                 []byte       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LogData) Reset()         { *m = LogData{} }
func (m *LogData) String() string { return proto.CompactTextString(m) }
func (*LogData) ProtoMessage()    {}
func (*LogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{21}
}
func (m *LogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogData.Unmarshal(m, b)
}
func (m *LogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogData.Marshal(b, m, deterministic)
}
func (dst *LogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogData.Merge(dst, src)
}
func (m *LogData) XXX_Size() int {
	return xxx_messageInfo_LogData.Size(m)
}
func (m *LogData) XXX_DiscardUnknown() {
	xxx_messageInfo_LogData.DiscardUnknown(m)
}

var xxx_messageInfo_LogData proto.InternalMessageInfo

func (m *LogData) GetDependency() string {
	if m != nil {
		return m.Dependency
	}
	return ""
}

func (m *LogData) GetType() LogData_Type {
	if m != nil {
		return m.Type
	}
	return LogData_Standard
}

func (m *LogData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Service represents the service's definition.
type Service struct {
	Hash                 string         `protobuf:"bytes,10,opt,name=hash,proto3" json:"hash,omitempty"`
	Sid                  string         `protobuf:"bytes,12,opt,name=sid,proto3" json:"sid,omitempty"`
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string         `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Tasks                []*Task        `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Events               []*Event       `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty"`
	Configuration        *Dependency    `protobuf:"bytes,13,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Dependencies         []*Dependency  `protobuf:"bytes,7,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	Repository           string         `protobuf:"bytes,9,opt,name=repository,proto3" json:"repository,omitempty"`
	Status               Service_Status `protobuf:"varint,11,opt,name=status,proto3,enum=api.Service_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{22}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Service) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Service) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *Service) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *Service) GetConfiguration() *Dependency {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *Service) GetDependencies() []*Dependency {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func (m *Service) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *Service) GetStatus() Service_Status {
	if m != nil {
		return m.Status
	}
	return Service_UNKNOWN
}

// Events are emitted by the service whenever the service wants.
type Event struct {
	Key                  string       `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Data                 []*Parameter `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{23}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (dst *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(dst, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Event) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Event) GetData() []*Parameter {
	if m != nil {
		return m.Data
	}
	return nil
}

// Task is a function that requires inputs and returns output.
type Task struct {
	Key                  string       `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Inputs               []*Parameter `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs              []*Output    `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{24}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (dst *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(dst, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Task) GetInputs() []*Parameter {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *Task) GetOutputs() []*Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

// Output is the data a task returns.
type Output struct {
	Key                  string       `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Data                 []*Parameter `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{25}
}
func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (dst *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(dst, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Output) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Output) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Output) GetData() []*Parameter {
	if m != nil {
		return m.Data
	}
	return nil
}

// Parameter describes the task's inputs, the task's outputs, and the event's data.
type Parameter struct {
	Key                  string       `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Type                 string       `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Optional             bool         `protobuf:"varint,4,opt,name=optional,proto3" json:"optional,omitempty"`
	Repeated             bool         `protobuf:"varint,9,opt,name=repeated,proto3" json:"repeated,omitempty"`
	Object               []*Parameter `protobuf:"bytes,10,rep,name=object,proto3" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Parameter) Reset()         { *m = Parameter{} }
func (m *Parameter) String() string { return proto.CompactTextString(m) }
func (*Parameter) ProtoMessage()    {}
func (*Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{26}
}
func (m *Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Parameter.Unmarshal(m, b)
}
func (m *Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Parameter.Marshal(b, m, deterministic)
}
func (dst *Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Parameter.Merge(dst, src)
}
func (m *Parameter) XXX_Size() int {
	return xxx_messageInfo_Parameter.Size(m)
}
func (m *Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Parameter proto.InternalMessageInfo

func (m *Parameter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Parameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Parameter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Parameter) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

func (m *Parameter) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *Parameter) GetObject() []*Parameter {
	if m != nil {
		return m.Object
	}
	return nil
}

// A dependency is a configuration of an other container that runs separately from the service.
type Dependency struct {
	Key                  string   `protobuf:"bytes,8,opt,name=key,proto3" json:"key,omitempty"`
	Image                string   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Volumes              []string `protobuf:"bytes,2,rep,name=volumes,proto3" json:"volumes,omitempty"`
	VolumesFrom          []string `protobuf:"bytes,3,rep,name=volumesFrom,proto3" json:"volumesFrom,omitempty"`
	Ports                []string `protobuf:"bytes,4,rep,name=ports,proto3" json:"ports,omitempty"`
	Command              string   `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dependency) Reset()         { *m = Dependency{} }
func (m *Dependency) String() string { return proto.CompactTextString(m) }
func (*Dependency) ProtoMessage()    {}
func (*Dependency) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_ab864a00d300110f, []int{27}
}
func (m *Dependency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dependency.Unmarshal(m, b)
}
func (m *Dependency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dependency.Marshal(b, m, deterministic)
}
func (dst *Dependency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dependency.Merge(dst, src)
}
func (m *Dependency) XXX_Size() int {
	return xxx_messageInfo_Dependency.Size(m)
}
func (m *Dependency) XXX_DiscardUnknown() {
	xxx_messageInfo_Dependency.DiscardUnknown(m)
}

var xxx_messageInfo_Dependency proto.InternalMessageInfo

func (m *Dependency) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Dependency) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Dependency) GetVolumes() []string {
	if m != nil {
		return m.Volumes
	}
	return nil
}

func (m *Dependency) GetVolumesFrom() []string {
	if m != nil {
		return m.VolumesFrom
	}
	return nil
}

func (m *Dependency) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Dependency) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func init() {
	proto.RegisterType((*ListenEventRequest)(nil), "api.ListenEventRequest")
	proto.RegisterType((*EventData)(nil), "api.EventData")
	proto.RegisterType((*ListenResultRequest)(nil), "api.ListenResultRequest")
	proto.RegisterType((*ResultData)(nil), "api.ResultData")
	proto.RegisterType((*ExecuteTaskRequest)(nil), "api.ExecuteTaskRequest")
	proto.RegisterType((*ExecuteTaskReply)(nil), "api.ExecuteTaskReply")
	proto.RegisterType((*StartServiceRequest)(nil), "api.StartServiceRequest")
	proto.RegisterType((*StartServiceReply)(nil), "api.StartServiceReply")
	proto.RegisterType((*StopServiceRequest)(nil), "api.StopServiceRequest")
	proto.RegisterType((*StopServiceReply)(nil), "api.StopServiceReply")
	proto.RegisterType((*DeployServiceRequest)(nil), "api.DeployServiceRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.DeployServiceRequest.EnvEntry")
	proto.RegisterType((*DeployServiceReply)(nil), "api.DeployServiceReply")
	proto.RegisterType((*DeployServiceReply_Status)(nil), "api.DeployServiceReply.Status")
	proto.RegisterType((*DeployServiceReply_Service)(nil), "api.DeployServiceReply.Service")
	proto.RegisterType((*DeleteServiceRequest)(nil), "api.DeleteServiceRequest")
	proto.RegisterType((*DeleteServiceReply)(nil), "api.DeleteServiceReply")
	proto.RegisterType((*ListServicesRequest)(nil), "api.ListServicesRequest")
	proto.RegisterType((*ListServicesReply)(nil), "api.ListServicesReply")
	proto.RegisterType((*GetServiceRequest)(nil), "api.GetServiceRequest")
	proto.RegisterType((*GetServiceReply)(nil), "api.GetServiceReply")
	proto.RegisterType((*ServiceLogsRequest)(nil), "api.ServiceLogsRequest")
	proto.RegisterType((*InfoRequest)(nil), "api.InfoRequest")
	proto.RegisterType((*InfoReply)(nil), "api.InfoReply")
	proto.RegisterType((*InfoReply_CoreService)(nil), "api.InfoReply.CoreService")
	proto.RegisterType((*LogData)(nil), "api.LogData")
	proto.RegisterType((*Service)(nil), "api.Service")
	proto.RegisterType((*Event)(nil), "api.Event")
	proto.RegisterType((*Task)(nil), "api.Task")
	proto.RegisterType((*Output)(nil), "api.Output")
	proto.RegisterType((*Parameter)(nil), "api.Parameter")
	proto.RegisterType((*Dependency)(nil), "api.Dependency")
	proto.RegisterEnum("api.DeployServiceReply_Status_Type", DeployServiceReply_Status_Type_name, DeployServiceReply_Status_Type_value)
	proto.RegisterEnum("api.LogData_Type", LogData_Type_name, LogData_Type_value)
	proto.RegisterEnum("api.Service_Status", Service_Status_name, Service_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreClient is the client API for Core service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreClient interface {
	// Subscribe to a stream that listens for events from a service.
	ListenEvent(ctx context.Context, in *ListenEventRequest, opts ...grpc.CallOption) (Core_ListenEventClient, error)
	// Subscribe to a stream that listens for task's result from a service.
	ListenResult(ctx context.Context, in *ListenResultRequest, opts ...grpc.CallOption) (Core_ListenResultClient, error)
	// Execute a service's task through Core.
	ExecuteTask(ctx context.Context, in *ExecuteTaskRequest, opts ...grpc.CallOption) (*ExecuteTaskReply, error)
	// Start a service. The service must be already deployed to Core.
	StartService(ctx context.Context, in *StartServiceRequest, opts ...grpc.CallOption) (*StartServiceReply, error)
	// Stop a service. The service must be already deployed to Core.
	StopService(ctx context.Context, in *StopServiceRequest, opts ...grpc.CallOption) (*StopServiceReply, error)
	// Deploy a service to Core. This will give you an unique identifier which is used to interact with the service.
	DeployService(ctx context.Context, opts ...grpc.CallOption) (Core_DeployServiceClient, error)
	// Delete a service from Core. This function only deletes a deployed service in Core. If the service's code is on your computer, the source code will not be deleted.
	DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*DeleteServiceReply, error)
	// List all services already deployed in Core.
	ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesReply, error)
	// Get the definition of an already-deployed service from its ID.
	GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceReply, error)
	// ServiceLogs gives a stream for dependency logs of a service.
	ServiceLogs(ctx context.Context, in *ServiceLogsRequest, opts ...grpc.CallOption) (Core_ServiceLogsClient, error)
	// Info returns all necessary information from the core.
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoReply, error)
}

type coreClient struct {
	cc *grpc.ClientConn
}

func NewCoreClient(cc *grpc.ClientConn) CoreClient {
	return &coreClient{cc}
}

func (c *coreClient) ListenEvent(ctx context.Context, in *ListenEventRequest, opts ...grpc.CallOption) (Core_ListenEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Core_serviceDesc.Streams[0], "/api.Core/ListenEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreListenEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Core_ListenEventClient interface {
	Recv() (*EventData, error)
	grpc.ClientStream
}

type coreListenEventClient struct {
	grpc.ClientStream
}

func (x *coreListenEventClient) Recv() (*EventData, error) {
	m := new(EventData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreClient) ListenResult(ctx context.Context, in *ListenResultRequest, opts ...grpc.CallOption) (Core_ListenResultClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Core_serviceDesc.Streams[1], "/api.Core/ListenResult", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreListenResultClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Core_ListenResultClient interface {
	Recv() (*ResultData, error)
	grpc.ClientStream
}

type coreListenResultClient struct {
	grpc.ClientStream
}

func (x *coreListenResultClient) Recv() (*ResultData, error) {
	m := new(ResultData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreClient) ExecuteTask(ctx context.Context, in *ExecuteTaskRequest, opts ...grpc.CallOption) (*ExecuteTaskReply, error) {
	out := new(ExecuteTaskReply)
	err := c.cc.Invoke(ctx, "/api.Core/ExecuteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreClient) StartService(ctx context.Context, in *StartServiceRequest, opts ...grpc.CallOption) (*StartServiceReply, error) {
	out := new(StartServiceReply)
	err := c.cc.Invoke(ctx, "/api.Core/StartService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreClient) StopService(ctx context.Context, in *StopServiceRequest, opts ...grpc.CallOption) (*StopServiceReply, error) {
	out := new(StopServiceReply)
	err := c.cc.Invoke(ctx, "/api.Core/StopService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreClient) DeployService(ctx context.Context, opts ...grpc.CallOption) (Core_DeployServiceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Core_serviceDesc.Streams[2], "/api.Core/DeployService", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreDeployServiceClient{stream}
	return x, nil
}

type Core_DeployServiceClient interface {
	Send(*DeployServiceRequest) error
	Recv() (*DeployServiceReply, error)
	grpc.ClientStream
}

type coreDeployServiceClient struct {
	grpc.ClientStream
}

func (x *coreDeployServiceClient) Send(m *DeployServiceRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *coreDeployServiceClient) Recv() (*DeployServiceReply, error) {
	m := new(DeployServiceReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreClient) DeleteService(ctx context.Context, in *DeleteServiceRequest, opts ...grpc.CallOption) (*DeleteServiceReply, error) {
	out := new(DeleteServiceReply)
	err := c.cc.Invoke(ctx, "/api.Core/DeleteService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreClient) ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesReply, error) {
	out := new(ListServicesReply)
	err := c.cc.Invoke(ctx, "/api.Core/ListServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreClient) GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceReply, error) {
	out := new(GetServiceReply)
	err := c.cc.Invoke(ctx, "/api.Core/GetService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *coreClient) ServiceLogs(ctx context.Context, in *ServiceLogsRequest, opts ...grpc.CallOption) (Core_ServiceLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Core_serviceDesc.Streams[3], "/api.Core/ServiceLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreServiceLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Core_ServiceLogsClient interface {
	Recv() (*LogData, error)
	grpc.ClientStream
}

type coreServiceLogsClient struct {
	grpc.ClientStream
}

func (x *coreServiceLogsClient) Recv() (*LogData, error) {
	m := new(LogData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoReply, error) {
	out := new(InfoReply)
	err := c.cc.Invoke(ctx, "/api.Core/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServer is the server API for Core service.
type CoreServer interface {
	// Subscribe to a stream that listens for events from a service.
	ListenEvent(*ListenEventRequest, Core_ListenEventServer) error
	// Subscribe to a stream that listens for task's result from a service.
	ListenResult(*ListenResultRequest, Core_ListenResultServer) error
	// Execute a service's task through Core.
	ExecuteTask(context.Context, *ExecuteTaskRequest) (*ExecuteTaskReply, error)
	// Start a service. The service must be already deployed to Core.
	StartService(context.Context, *StartServiceRequest) (*StartServiceReply, error)
	// Stop a service. The service must be already deployed to Core.
	StopService(context.Context, *StopServiceRequest) (*StopServiceReply, error)
	// Deploy a service to Core. This will give you an unique identifier which is used to interact with the service.
	DeployService(Core_DeployServiceServer) error
	// Delete a service from Core. This function only deletes a deployed service in Core. If the service's code is on your computer, the source code will not be deleted.
	DeleteService(context.Context, *DeleteServiceRequest) (*DeleteServiceReply, error)
	// List all services already deployed in Core.
	ListServices(context.Context, *ListServicesRequest) (*ListServicesReply, error)
	// Get the definition of an already-deployed service from its ID.
	GetService(context.Context, *GetServiceRequest) (*GetServiceReply, error)
	// ServiceLogs gives a stream for dependency logs of a service.
	ServiceLogs(*ServiceLogsRequest, Core_ServiceLogsServer) error
	// Info returns all necessary information from the core.
	Info(context.Context, *InfoRequest) (*InfoReply, error)
}

func RegisterCoreServer(s *grpc.Server, srv CoreServer) {
	s.RegisterService(&_Core_serviceDesc, srv)
}

func _Core_ListenEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenEventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreServer).ListenEvent(m, &coreListenEventServer{stream})
}

type Core_ListenEventServer interface {
	Send(*EventData) error
	grpc.ServerStream
}

type coreListenEventServer struct {
	grpc.ServerStream
}

func (x *coreListenEventServer) Send(m *EventData) error {
	return x.ServerStream.SendMsg(m)
}

func _Core_ListenResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListenResultRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreServer).ListenResult(m, &coreListenResultServer{stream})
}

type Core_ListenResultServer interface {
	Send(*ResultData) error
	grpc.ServerStream
}

type coreListenResultServer struct {
	grpc.ServerStream
}

func (x *coreListenResultServer) Send(m *ResultData) error {
	return x.ServerStream.SendMsg(m)
}

func _Core_ExecuteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecuteTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).ExecuteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/ExecuteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).ExecuteTask(ctx, req.(*ExecuteTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Core_StartService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).StartService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/StartService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).StartService(ctx, req.(*StartServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Core_StopService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).StopService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/StopService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).StopService(ctx, req.(*StopServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Core_DeployService_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CoreServer).DeployService(&coreDeployServiceServer{stream})
}

type Core_DeployServiceServer interface {
	Send(*DeployServiceReply) error
	Recv() (*DeployServiceRequest, error)
	grpc.ServerStream
}

type coreDeployServiceServer struct {
	grpc.ServerStream
}

func (x *coreDeployServiceServer) Send(m *DeployServiceReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *coreDeployServiceServer) Recv() (*DeployServiceRequest, error) {
	m := new(DeployServiceRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Core_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/DeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).DeleteService(ctx, req.(*DeleteServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Core_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).ListServices(ctx, req.(*ListServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Core_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).GetService(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Core_ServiceLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServiceLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreServer).ServiceLogs(m, &coreServiceLogsServer{stream})
}

type Core_ServiceLogsServer interface {
	Send(*LogData) error
	grpc.ServerStream
}

type coreServiceLogsServer struct {
	grpc.ServerStream
}

func (x *coreServiceLogsServer) Send(m *LogData) error {
	return x.ServerStream.SendMsg(m)
}

func _Core_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Core_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Core",
	HandlerType: (*CoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteTask",
			Handler:    _Core_ExecuteTask_Handler,
		},
		{
			MethodName: "StartService",
			Handler:    _Core_StartService_Handler,
		},
		{
			MethodName: "StopService",
			Handler:    _Core_StopService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _Core_DeleteService_Handler,
		},
		{
			MethodName: "ListServices",
			Handler:    _Core_ListServices_Handler,
		},
		{
			MethodName: "GetService",
			Handler:    _Core_GetService_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _Core_Info_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListenEvent",
			Handler:       _Core_ListenEvent_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListenResult",
			Handler:       _Core_ListenResult_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DeployService",
			Handler:       _Core_DeployService_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "ServiceLogs",
			Handler:       _Core_ServiceLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/coreapi/api.proto",
}

func init() { proto.RegisterFile("protobuf/coreapi/api.proto", fileDescriptor_api_ab864a00d300110f) }

var fileDescriptor_api_ab864a00d300110f = []byte{
	// 1457 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x5f, 0x8f, 0xd4, 0x54,
	0x14, 0x9f, 0xee, 0xfc, 0x3f, 0x9d, 0x85, 0xd9, 0xbb, 0x0b, 0xd4, 0xc6, 0x00, 0xb9, 0x0a, 0x21,
	0x98, 0x2c, 0xb8, 0x20, 0x02, 0x4a, 0x08, 0xb8, 0x03, 0xbb, 0xb2, 0x99, 0xdd, 0x74, 0x07, 0x48,
	0x7c, 0x31, 0x65, 0x7a, 0x59, 0xea, 0xce, 0xb4, 0xb5, 0xed, 0x4c, 0x9c, 0x0f, 0xe0, 0x8b, 0x4f,
	0x3e, 0xe9, 0x93, 0x89, 0xdf, 0xc0, 0x67, 0x1f, 0xf5, 0xc5, 0x6f, 0xe2, 0xe7, 0x30, 0xe7, 0xdc,
	0x7b, 0x3b, 0xed, 0x74, 0xc0, 0x45, 0x8d, 0x6f, 0x73, 0xfe, 0xdc, 0xf3, 0xff, 0x9e, 0xfb, 0xeb,
	0x80, 0x1d, 0xc5, 0x61, 0x1a, 0xbe, 0x98, 0xbc, 0xbc, 0x36, 0x0c, 0x63, 0xe1, 0x46, 0xfe, 0x35,
	0x37, 0xf2, 0x37, 0x89, 0xc9, 0xaa, 0x6e, 0xe4, 0xf3, 0x01, 0xb0, 0x3d, 0x3f, 0x49, 0x45, 0xd0,
	0x9b, 0x8a, 0x20, 0x75, 0xc4, 0xd7, 0x13, 0x91, 0xa4, 0xec, 0x5d, 0x68, 0x27, 0x22, 0x9e, 0xfa,
	0x43, 0xb1, 0xbb, 0x6d, 0x19, 0x17, 0x8d, 0x2b, 0x6d, 0x67, 0xce, 0x60, 0x17, 0xc1, 0x14, 0xa8,
	0xfd, 0xc8, 0x1f, 0xa5, 0x22, 0xb6, 0x56, 0x48, 0x9e, 0x67, 0xf1, 0x1e, 0xb4, 0xc9, 0xde, 0xb6,
	0x9b, 0xba, 0xcc, 0x86, 0x16, 0xc9, 0x9e, 0x88, 0x99, 0xb2, 0x95, 0xd1, 0xe8, 0x48, 0x68, 0x45,
	0x65, 0x68, 0xce, 0xe0, 0x3f, 0x1a, 0xb0, 0x2e, 0xa3, 0x73, 0x44, 0x32, 0x19, 0x9d, 0x30, 0xbc,
	0xf3, 0x00, 0xa9, 0x9b, 0x1c, 0x17, 0xa2, 0xcb, 0x71, 0x18, 0x87, 0x4e, 0x38, 0x49, 0xa3, 0x89,
	0x8e, 0xbf, 0x4a, 0x1a, 0x05, 0x9e, 0xb4, 0x71, 0x24, 0x89, 0xc4, 0xaa, 0x5d, 0xac, 0x4a, 0x1b,
	0x9a, 0xc3, 0x7f, 0x37, 0x00, 0x64, 0x4c, 0x94, 0x22, 0x56, 0xe4, 0x1b, 0x31, 0x9c, 0xa4, 0x7e,
	0x18, 0x64, 0x21, 0xe5, 0x59, 0xcc, 0x82, 0x26, 0x86, 0x80, 0x35, 0x90, 0x11, 0x69, 0x12, 0x93,
	0x91, 0xae, 0x51, 0x26, 0x63, 0x99, 0x33, 0x30, 0x10, 0x49, 0x50, 0x85, 0x6a, 0x32, 0x99, 0x39,
	0x87, 0xbd, 0x0f, 0xab, 0x99, 0x9b, 0x81, 0x7b, 0x94, 0x58, 0x75, 0x8a, 0xb5, 0xc8, 0x64, 0x1b,
	0x50, 0x17, 0x71, 0x1c, 0xc6, 0x56, 0x83, 0x0c, 0x48, 0x82, 0x7f, 0x6f, 0x00, 0xeb, 0x91, 0x9e,
	0x18, 0xb8, 0xc9, 0xf1, 0xc9, 0xaa, 0xfb, 0xc6, 0x44, 0xfc, 0x40, 0x47, 0xaa, 0x12, 0xc9, 0x18,
	0xe5, 0x40, 0x6b, 0x4b, 0x02, 0xe5, 0x37, 0xa1, 0x5b, 0x88, 0x28, 0x1a, 0xcd, 0xfe, 0xbe, 0xb8,
	0xfc, 0x06, 0xac, 0x1f, 0xa6, 0x6e, 0x9c, 0x1e, 0xca, 0x28, 0x4f, 0x94, 0x08, 0x5f, 0x87, 0xb5,
	0xe2, 0xa1, 0x68, 0x34, 0xe3, 0x5b, 0xc0, 0x0e, 0xd3, 0x30, 0x7a, 0x2b, 0x43, 0x0c, 0xba, 0x85,
	0x33, 0x68, 0xe7, 0x57, 0x03, 0x36, 0xb6, 0x45, 0x34, 0x0a, 0x67, 0x0b, 0xa6, 0x18, 0x54, 0x27,
	0xf1, 0x48, 0x96, 0x6e, 0xa7, 0xe2, 0x20, 0xc1, 0xce, 0x42, 0x7d, 0xf8, 0x6a, 0x12, 0x1c, 0x53,
	0xd1, 0x3a, 0x3b, 0x15, 0x47, 0x92, 0xec, 0x26, 0x54, 0x45, 0x30, 0xa5, 0x42, 0x99, 0x5b, 0x7c,
	0x13, 0x6f, 0xee, 0x32, 0x9b, 0x9b, 0xbd, 0x60, 0xda, 0x0b, 0xd2, 0x78, 0xe6, 0xa0, 0xba, 0x7d,
	0x0b, 0x5a, 0x9a, 0xc1, 0xba, 0x50, 0x3d, 0xce, 0x6e, 0x1d, 0xfe, 0xc4, 0x49, 0x98, 0xba, 0xa3,
	0x89, 0x50, 0xcd, 0x93, 0xc4, 0xdd, 0x95, 0xdb, 0xc6, 0xc3, 0xa6, 0x92, 0xf0, 0xef, 0xaa, 0xc0,
	0x16, 0xfc, 0x60, 0x1b, 0x6e, 0x43, 0x23, 0x49, 0xdd, 0x74, 0x92, 0xd0, 0x51, 0x73, 0xeb, 0xfc,
	0xb2, 0x80, 0xa2, 0xd1, 0x6c, 0xf3, 0x90, 0xb4, 0x76, 0x2a, 0x8e, 0xd2, 0x67, 0x57, 0xe1, 0xf4,
	0xd4, 0x1d, 0xf9, 0x9e, 0x8b, 0xed, 0xea, 0xd1, 0x1c, 0xd6, 0x54, 0xfe, 0x8b, 0x02, 0xf6, 0x09,
	0x34, 0x55, 0x65, 0xad, 0x3a, 0xb9, 0xb9, 0xf0, 0x5a, 0x37, 0x92, 0xd8, 0xa9, 0x38, 0xfa, 0x84,
	0xfd, 0x83, 0x01, 0x0d, 0xe9, 0x1d, 0xc7, 0x74, 0x2c, 0x92, 0xc4, 0x3d, 0x12, 0x2a, 0x7b, 0x4d,
	0xb2, 0x8f, 0xa1, 0x96, 0xce, 0x22, 0x59, 0x80, 0x53, 0x5b, 0xef, 0xbd, 0x39, 0x8b, 0xcd, 0xc1,
	0x2c, 0x12, 0x0e, 0x1d, 0xe0, 0x77, 0xa0, 0x86, 0x14, 0x33, 0xa1, 0xe9, 0x3c, 0xed, 0xf7, 0x77,
	0xfb, 0x8f, 0xbb, 0x15, 0xb6, 0x06, 0xab, 0xdb, 0xfb, 0xfd, 0xde, 0x97, 0x07, 0xfb, 0x87, 0xbb,
	0x83, 0xdd, 0x67, 0xbd, 0xae, 0x91, 0xb1, 0xfa, 0xbd, 0xc7, 0x0f, 0x88, 0xb5, 0x62, 0x5f, 0x83,
	0xa6, 0x32, 0x8e, 0x2d, 0x49, 0x7c, 0x4f, 0xb7, 0x24, 0xf1, 0x3d, 0xc6, 0xa0, 0xf6, 0xca, 0x4d,
	0x5e, 0xa9, 0x8e, 0xd0, 0xef, 0x79, 0x33, 0x06, 0x38, 0x47, 0x23, 0x91, 0x8a, 0xb7, 0x19, 0x49,
	0xdc, 0x1a, 0x1e, 0x9d, 0xca, 0xf6, 0x6a, 0xcb, 0xc9, 0x71, 0xf8, 0x06, 0x76, 0xb8, 0x60, 0x15,
	0x87, 0xf6, 0x8c, 0xdc, 0xb6, 0x8a, 0x97, 0x28, 0x57, 0xfc, 0x1e, 0xac, 0x15, 0xd9, 0x38, 0x0d,
	0x57, 0xa0, 0xa5, 0xdc, 0x25, 0x96, 0x41, 0x03, 0xda, 0xa1, 0x4a, 0x6a, 0x83, 0x99, 0x94, 0x7f,
	0x08, 0x6b, 0x8f, 0xc5, 0xdb, 0x5d, 0xcd, 0x3b, 0x70, 0x3a, 0x7f, 0x04, 0xfd, 0x5d, 0x9e, 0xcf,
	0x85, 0x41, 0x73, 0x51, 0x74, 0xa7, 0x85, 0xfc, 0x19, 0x30, 0xc5, 0xdb, 0x0b, 0x8f, 0x92, 0x93,
	0x55, 0x8b, 0x43, 0xc7, 0x13, 0x91, 0x08, 0x3c, 0x11, 0x0c, 0x7d, 0x81, 0xf3, 0x8d, 0x9b, 0xa9,
	0xc0, 0xe3, 0xab, 0x60, 0xee, 0x06, 0x2f, 0x43, 0x5d, 0x93, 0x3f, 0x0d, 0x68, 0x4b, 0x1a, 0x83,
	0xbb, 0x55, 0x2a, 0x86, 0x4d, 0xd1, 0x65, 0x1a, 0x9b, 0x9f, 0x85, 0xb1, 0x28, 0x95, 0x06, 0x87,
	0xd4, 0xf5, 0xbc, 0x58, 0x24, 0x89, 0xde, 0xa5, 0x8a, 0xc4, 0x6b, 0xea, 0x8f, 0x71, 0x78, 0xe5,
	0x1e, 0x95, 0x04, 0xea, 0x4f, 0x45, 0x9c, 0xf8, 0x61, 0xa0, 0x5e, 0x02, 0x4d, 0xda, 0xcf, 0xc1,
	0xcc, 0xb9, 0x38, 0xd9, 0x90, 0xa1, 0x16, 0xee, 0x22, 0xe9, 0x82, 0x36, 0x91, 0xda, 0x17, 0xb5,
	0x6c, 0x5f, 0xf0, 0x6f, 0x0d, 0x68, 0xee, 0x85, 0x47, 0xb4, 0xc2, 0x69, 0xaa, 0x54, 0x4d, 0xf4,
	0x52, 0xc9, 0x71, 0xd8, 0xa5, 0xc2, 0xcd, 0x5a, 0xa3, 0x12, 0xa8, 0xb3, 0xb9, 0x7b, 0x84, 0xa1,
	0x78, 0xfa, 0x89, 0xe8, 0x38, 0xf4, 0x9b, 0x5f, 0x50, 0x77, 0xab, 0x03, 0xad, 0xc3, 0xd4, 0x0d,
	0x3c, 0x37, 0xf6, 0xba, 0x15, 0xd6, 0x86, 0x3a, 0x6d, 0x85, 0xae, 0xc1, 0x7f, 0xa9, 0xce, 0xaf,
	0x90, 0xce, 0x05, 0x8a, 0xb9, 0x60, 0xc6, 0x9d, 0x42, 0xc6, 0x81, 0x3b, 0xd6, 0xd7, 0x9f, 0x7e,
	0xe3, 0x53, 0xe2, 0x89, 0x64, 0x18, 0xfb, 0x11, 0x6e, 0x1c, 0x8d, 0x5c, 0x72, 0x2c, 0x76, 0x01,
	0xea, 0xf8, 0x9e, 0xc9, 0x77, 0xd4, 0xdc, 0x6a, 0x53, 0x12, 0xf4, 0x16, 0x49, 0x3e, 0xe3, 0xd0,
	0x20, 0x80, 0x92, 0x58, 0x0d, 0xd2, 0x00, 0xd2, 0x90, 0xe8, 0x49, 0x49, 0xd8, 0x47, 0xb0, 0x3a,
	0x0c, 0x83, 0x97, 0xfe, 0xd1, 0x24, 0xa6, 0xd5, 0x66, 0xad, 0xd2, 0xc8, 0x9e, 0xd6, 0xbb, 0x46,
	0x15, 0xcc, 0x29, 0x6a, 0xb1, 0x1b, 0x0b, 0x73, 0xd8, 0x24, 0x07, 0xa5, 0x53, 0x05, 0x25, 0x6c,
	0x4a, 0x2c, 0xa2, 0x30, 0xf1, 0xd3, 0x30, 0x9e, 0x59, 0x6d, 0xd9, 0x94, 0x39, 0x87, 0x7d, 0x90,
	0xad, 0x6d, 0x93, 0xda, 0xb2, 0x9e, 0xbf, 0x37, 0x6a, 0xcb, 0xe9, 0x4d, 0xcd, 0x3f, 0xcf, 0xf6,
	0xa7, 0x09, 0xcd, 0xa7, 0xfd, 0x27, 0xfd, 0xfd, 0xe7, 0xfd, 0x6e, 0x05, 0x89, 0xc3, 0xc1, 0xfe,
	0xc1, 0x41, 0x6f, 0xbb, 0x6b, 0x50, 0x8b, 0x06, 0x0f, 0x9c, 0x01, 0xee, 0xbf, 0x15, 0x14, 0x1d,
	0x20, 0xf1, 0x60, 0xaf, 0x5b, 0xcd, 0x6f, 0xc6, 0x1a, 0x4f, 0xa0, 0x4e, 0x55, 0x29, 0x0f, 0xd5,
	0x3f, 0x6c, 0x0d, 0xcf, 0xe6, 0x06, 0xcb, 0x72, 0x8a, 0xf2, 0x38, 0x70, 0x63, 0x77, 0x2c, 0x52,
	0x11, 0xab, 0x39, 0xfa, 0xc9, 0x80, 0x1a, 0x76, 0x4b, 0x3b, 0x6d, 0xfd, 0x5b, 0xa7, 0x97, 0xa1,
	0x41, 0x18, 0x46, 0xb7, 0x7b, 0xd1, 0xad, 0x92, 0xb2, 0x4b, 0xd0, 0x94, 0xa8, 0x4c, 0xb7, 0xcd,
	0x24, 0xc5, 0x7d, 0xe2, 0x39, 0x5a, 0xc6, 0x53, 0x68, 0x48, 0xd6, 0xff, 0x5a, 0x95, 0x3f, 0x0c,
	0x68, 0x67, 0xbc, 0xff, 0xac, 0x34, 0x4c, 0x5d, 0x77, 0xb9, 0x3f, 0xe4, 0xdd, 0xb6, 0xa1, 0x15,
	0x92, 0xd4, 0x1d, 0x51, 0x6a, 0x2d, 0x27, 0xa3, 0x51, 0x16, 0x8b, 0x48, 0xb8, 0xa9, 0xf0, 0x68,
	0x4e, 0x5b, 0x4e, 0x46, 0x63, 0x99, 0xc3, 0x17, 0x5f, 0x89, 0x61, 0x6a, 0xc1, 0xf2, 0x32, 0x4b,
	0x29, 0xff, 0xd9, 0x00, 0x98, 0x5f, 0x85, 0x25, 0xa9, 0x64, 0x8b, 0xd3, 0x58, 0x5c, 0x9c, 0xe1,
	0x68, 0x32, 0xce, 0x96, 0xbb, 0x26, 0x31, 0x4d, 0xf5, 0xf3, 0x51, 0x1c, 0x8e, 0xa9, 0x8a, 0x6d,
	0x27, 0xcf, 0x42, 0x8b, 0x51, 0x18, 0xa7, 0x1a, 0xb0, 0x4a, 0x02, 0x2d, 0x0e, 0xc3, 0xf1, 0xd8,
	0x0d, 0x3c, 0xc2, 0x29, 0x6d, 0x47, 0x93, 0x5b, 0xbf, 0xd5, 0xa1, 0x86, 0xbb, 0x98, 0xdd, 0x05,
	0x33, 0xf7, 0x69, 0xc5, 0xce, 0xc9, 0x7d, 0x58, 0xfa, 0xd8, 0xb2, 0x4f, 0xcd, 0x37, 0x08, 0x3d,
	0xce, 0x95, 0xeb, 0x06, 0xbb, 0x07, 0x9d, 0xfc, 0x87, 0x0f, 0xb3, 0x72, 0x87, 0x0b, 0xdf, 0x42,
	0xb6, 0x5c, 0x0f, 0xf3, 0x6f, 0x11, 0x3a, 0x7e, 0x1f, 0xcc, 0x1c, 0x8c, 0x56, 0xae, 0xcb, 0x50,
	0xdf, 0x3e, 0x53, 0x16, 0x20, 0x10, 0xa8, 0xb0, 0x87, 0xd0, 0xc9, 0x83, 0x63, 0xe5, 0x7f, 0x09,
	0xc8, 0xb6, 0xcf, 0x2e, 0x91, 0x48, 0x1b, 0xf7, 0xc1, 0xcc, 0xe1, 0x62, 0x15, 0x44, 0x19, 0x5d,
	0xab, 0x20, 0x4a, 0x10, 0xba, 0xc2, 0x76, 0x61, 0xb5, 0x00, 0xcc, 0xd8, 0x3b, 0xaf, 0xc5, 0xc0,
	0xf6, 0xb9, 0xd7, 0xe0, 0x38, 0x5e, 0xb9, 0x62, 0x5c, 0x37, 0x58, 0x0f, 0x4d, 0xe5, 0x00, 0x4f,
	0x66, 0xaa, 0x0c, 0xad, 0x32, 0x53, 0x25, 0x7c, 0x44, 0x65, 0xc9, 0x43, 0xa1, 0x5c, 0x5b, 0x16,
	0x40, 0x93, 0x2a, 0x4b, 0x09, 0x37, 0xf1, 0x0a, 0xfb, 0x14, 0x60, 0x0e, 0x6e, 0x98, 0xd4, 0x2b,
	0x01, 0x24, 0x7b, 0xa3, 0xc4, 0x97, 0xa7, 0x6f, 0x83, 0x99, 0xc3, 0x37, 0xba, 0xa8, 0x25, 0xc4,
	0x63, 0x77, 0xf2, 0xaf, 0x2f, 0xcd, 0xc4, 0x55, 0xa8, 0x21, 0x1e, 0x61, 0xdd, 0x1c, 0x34, 0xc9,
	0x0f, 0x60, 0x06, 0x56, 0x78, 0xe5, 0x61, 0xfb, 0x8b, 0xa6, 0xfa, 0xbf, 0xe0, 0x45, 0x83, 0xfe,
	0x2c, 0xb8, 0xf1, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xeb, 0xa5, 0x32, 0x4a, 0x10, 0x00,
	0x00,
}
