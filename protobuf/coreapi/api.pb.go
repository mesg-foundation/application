// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/coreapi/api.proto

package coreapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogData_Type int32

const (
	LogData_Standard LogData_Type = 0
	LogData_Error    LogData_Type = 1
)

var LogData_Type_name = map[int32]string{
	0: "Standard",
	1: "Error",
}

var LogData_Type_value = map[string]int32{
	"Standard": 0,
	"Error":    1,
}

func (x LogData_Type) String() string {
	return proto.EnumName(LogData_Type_name, int32(x))
}

func (LogData_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_10679b8ed3075b1e, []int{3, 0}
}

// The request's data for `ServiceLogs` API.
//
// **Example**
// ```json
// {
//   "serviceID": "__SERVICE_ID__",
//   "dependencies": ["__SERVICE_DEPENDENCY__"]
// }
// ```
type ServiceLogsRequest struct {
	ServiceID            string   `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	Dependencies         []string `protobuf:"bytes,2,rep,name=dependencies,proto3" json:"dependencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceLogsRequest) Reset()         { *m = ServiceLogsRequest{} }
func (m *ServiceLogsRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceLogsRequest) ProtoMessage()    {}
func (*ServiceLogsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10679b8ed3075b1e, []int{0}
}

func (m *ServiceLogsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceLogsRequest.Unmarshal(m, b)
}
func (m *ServiceLogsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceLogsRequest.Marshal(b, m, deterministic)
}
func (m *ServiceLogsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceLogsRequest.Merge(m, src)
}
func (m *ServiceLogsRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceLogsRequest.Size(m)
}
func (m *ServiceLogsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceLogsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceLogsRequest proto.InternalMessageInfo

func (m *ServiceLogsRequest) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

func (m *ServiceLogsRequest) GetDependencies() []string {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

// The request to fetch all informations of the Core
type InfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoRequest) Reset()         { *m = InfoRequest{} }
func (m *InfoRequest) String() string { return proto.CompactTextString(m) }
func (*InfoRequest) ProtoMessage()    {}
func (*InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_10679b8ed3075b1e, []int{1}
}

func (m *InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoRequest.Unmarshal(m, b)
}
func (m *InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoRequest.Marshal(b, m, deterministic)
}
func (m *InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoRequest.Merge(m, src)
}
func (m *InfoRequest) XXX_Size() int {
	return xxx_messageInfo_InfoRequest.Size(m)
}
func (m *InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InfoRequest proto.InternalMessageInfo

// Information concerning the Core from the `info` API.
type InfoReply struct {
	Services             []*InfoReply_CoreService `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	Version              string                   `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *InfoReply) Reset()         { *m = InfoReply{} }
func (m *InfoReply) String() string { return proto.CompactTextString(m) }
func (*InfoReply) ProtoMessage()    {}
func (*InfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_10679b8ed3075b1e, []int{2}
}

func (m *InfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReply.Unmarshal(m, b)
}
func (m *InfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReply.Marshal(b, m, deterministic)
}
func (m *InfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReply.Merge(m, src)
}
func (m *InfoReply) XXX_Size() int {
	return xxx_messageInfo_InfoReply.Size(m)
}
func (m *InfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReply proto.InternalMessageInfo

func (m *InfoReply) GetServices() []*InfoReply_CoreService {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *InfoReply) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type InfoReply_CoreService struct {
	Sid                  string   `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Key                  string   `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoReply_CoreService) Reset()         { *m = InfoReply_CoreService{} }
func (m *InfoReply_CoreService) String() string { return proto.CompactTextString(m) }
func (*InfoReply_CoreService) ProtoMessage()    {}
func (*InfoReply_CoreService) Descriptor() ([]byte, []int) {
	return fileDescriptor_10679b8ed3075b1e, []int{2, 0}
}

func (m *InfoReply_CoreService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoReply_CoreService.Unmarshal(m, b)
}
func (m *InfoReply_CoreService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoReply_CoreService.Marshal(b, m, deterministic)
}
func (m *InfoReply_CoreService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoReply_CoreService.Merge(m, src)
}
func (m *InfoReply_CoreService) XXX_Size() int {
	return xxx_messageInfo_InfoReply_CoreService.Size(m)
}
func (m *InfoReply_CoreService) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoReply_CoreService.DiscardUnknown(m)
}

var xxx_messageInfo_InfoReply_CoreService proto.InternalMessageInfo

func (m *InfoReply_CoreService) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *InfoReply_CoreService) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *InfoReply_CoreService) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *InfoReply_CoreService) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// The data received from the stream of the `ServiceLogs` API.
// The data will be received over time as long as the stream is open.
//
// **Example**
// ```json
// {
//   "dependency":  "__SERVICE_DEPENDENCY__",
//   "type": "__LOG_TYPE__",
//   "data":  "__LOG_CHUNK__",
// }
// ```
type LogData struct {
	Dependency           string       `protobuf:"bytes,1,opt,name=dependency,proto3" json:"dependency,omitempty"`
	Type                 LogData_Type `protobuf:"varint,2,opt,name=type,proto3,enum=api.LogData_Type" json:"type,omitempty"`
	Data                 []byte       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *LogData) Reset()         { *m = LogData{} }
func (m *LogData) String() string { return proto.CompactTextString(m) }
func (*LogData) ProtoMessage()    {}
func (*LogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_10679b8ed3075b1e, []int{3}
}

func (m *LogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogData.Unmarshal(m, b)
}
func (m *LogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogData.Marshal(b, m, deterministic)
}
func (m *LogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogData.Merge(m, src)
}
func (m *LogData) XXX_Size() int {
	return xxx_messageInfo_LogData.Size(m)
}
func (m *LogData) XXX_DiscardUnknown() {
	xxx_messageInfo_LogData.DiscardUnknown(m)
}

var xxx_messageInfo_LogData proto.InternalMessageInfo

func (m *LogData) GetDependency() string {
	if m != nil {
		return m.Dependency
	}
	return ""
}

func (m *LogData) GetType() LogData_Type {
	if m != nil {
		return m.Type
	}
	return LogData_Standard
}

func (m *LogData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.LogData_Type", LogData_Type_name, LogData_Type_value)
	proto.RegisterType((*ServiceLogsRequest)(nil), "api.ServiceLogsRequest")
	proto.RegisterType((*InfoRequest)(nil), "api.InfoRequest")
	proto.RegisterType((*InfoReply)(nil), "api.InfoReply")
	proto.RegisterType((*InfoReply_CoreService)(nil), "api.InfoReply.CoreService")
	proto.RegisterType((*LogData)(nil), "api.LogData")
}

func init() { proto.RegisterFile("protobuf/coreapi/api.proto", fileDescriptor_10679b8ed3075b1e) }

var fileDescriptor_10679b8ed3075b1e = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x51, 0x8b, 0xd4, 0x30,
	0x10, 0xc7, 0xb7, 0xd7, 0xea, 0x5d, 0xa7, 0xf5, 0xa8, 0xf3, 0x62, 0x29, 0xa2, 0x4b, 0x40, 0x58,
	0x04, 0xdb, 0xa3, 0x82, 0xf8, 0xac, 0xe7, 0xc3, 0xc1, 0x3d, 0xf5, 0x44, 0xc1, 0xb7, 0x6c, 0x9b,
	0xed, 0x06, 0xbb, 0x4d, 0x4c, 0xd2, 0x85, 0x7e, 0x00, 0xbf, 0x92, 0x9f, 0x4f, 0x92, 0xd6, 0xb5,
	0xab, 0x6f, 0x93, 0x5f, 0xfe, 0x99, 0xf9, 0xcf, 0x64, 0x20, 0x93, 0x4a, 0x18, 0xb1, 0x1d, 0x76,
	0x45, 0x2d, 0x14, 0xa3, 0x92, 0x17, 0x54, 0xf2, 0xdc, 0x41, 0xf4, 0xa9, 0xe4, 0xe4, 0x0b, 0xe0,
	0x03, 0x53, 0x47, 0x5e, 0xb3, 0x7b, 0xd1, 0xea, 0x8a, 0xfd, 0x18, 0x98, 0x36, 0xf8, 0x1c, 0x42,
	0x3d, 0xd1, 0xbb, 0xdb, 0xd4, 0x5b, 0x7b, 0x9b, 0xb0, 0xfa, 0x0b, 0x90, 0x40, 0xdc, 0x30, 0xc9,
	0xfa, 0x86, 0xf5, 0x35, 0x67, 0x3a, 0xbd, 0x58, 0xfb, 0x9b, 0xb0, 0x3a, 0x63, 0xe4, 0x09, 0x44,
	0x77, 0xfd, 0x4e, 0xcc, 0x09, 0xc9, 0x2f, 0x0f, 0xc2, 0xe9, 0x2c, 0xbb, 0x11, 0xdf, 0xc1, 0xd5,
	0x9c, 0x4d, 0xa7, 0xde, 0xda, 0xdf, 0x44, 0x65, 0x96, 0x5b, 0x5f, 0x27, 0x45, 0xfe, 0x51, 0x28,
	0x36, 0xfb, 0xaa, 0x4e, 0x5a, 0x4c, 0xe1, 0xf2, 0xc8, 0x94, 0xe6, 0xa2, 0x4f, 0x03, 0x67, 0xea,
	0xcf, 0x31, 0xfb, 0x0a, 0xd1, 0xe2, 0x09, 0x26, 0xe0, 0x6b, 0xde, 0xcc, 0xce, 0x6d, 0x88, 0x08,
	0xc1, 0x9e, 0xea, 0x7d, 0x7a, 0xe1, 0x90, 0x8b, 0xad, 0x6a, 0x50, 0x5d, 0xea, 0x4f, 0xaa, 0x41,
	0x75, 0x96, 0x7c, 0x67, 0xe3, 0x9c, 0xdc, 0x86, 0xe4, 0xa7, 0x07, 0x97, 0xf7, 0xa2, 0xbd, 0xa5,
	0x86, 0xe2, 0x0b, 0x80, 0x53, 0x8f, 0xe3, 0x9c, 0x7c, 0x41, 0xf0, 0x15, 0x04, 0x66, 0x94, 0xcc,
	0xd5, 0xb8, 0x2e, 0x9f, 0xba, 0x96, 0xe6, 0xb7, 0xf9, 0xe7, 0x51, 0xb2, 0xca, 0x5d, 0x5b, 0x2b,
	0x0d, 0x35, 0xd4, 0xd5, 0x8d, 0x2b, 0x17, 0x93, 0x97, 0x10, 0x58, 0x05, 0xc6, 0x70, 0xf5, 0x60,
	0x68, 0xdf, 0x50, 0xd5, 0x24, 0x2b, 0x0c, 0xe1, 0xd1, 0x27, 0xa5, 0x84, 0x4a, 0xbc, 0xb2, 0x83,
	0xc0, 0x36, 0x88, 0xef, 0x21, 0x5a, 0xfc, 0x17, 0x3e, 0x73, 0x45, 0xfe, 0xff, 0xc1, 0x2c, 0x5e,
	0x56, 0x27, 0xab, 0x1b, 0x0f, 0x5f, 0x43, 0x60, 0xe7, 0x8b, 0xc9, 0x62, 0xd4, 0x93, 0xf6, 0xfa,
	0x7c, 0xf8, 0x64, 0xf5, 0xa1, 0xfc, 0x76, 0xd3, 0x72, 0xb3, 0x1f, 0xb6, 0x79, 0x2d, 0x0e, 0xc5,
	0x81, 0xe9, 0xf6, 0xcd, 0x4e, 0x0c, 0x7d, 0x43, 0x0d, 0x17, 0xbd, 0x5b, 0xa5, 0xe2, 0xdf, 0xc5,
	0xda, 0x3e, 0x76, 0xe4, 0xed, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x74, 0xfe, 0x2d, 0x2b, 0x73,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CoreClient is the client API for Core service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CoreClient interface {
	// ServiceLogs gives a stream for dependency logs of a service.
	ServiceLogs(ctx context.Context, in *ServiceLogsRequest, opts ...grpc.CallOption) (Core_ServiceLogsClient, error)
	// Info returns all necessary information from the core.
	Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoReply, error)
}

type coreClient struct {
	cc *grpc.ClientConn
}

func NewCoreClient(cc *grpc.ClientConn) CoreClient {
	return &coreClient{cc}
}

func (c *coreClient) ServiceLogs(ctx context.Context, in *ServiceLogsRequest, opts ...grpc.CallOption) (Core_ServiceLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Core_serviceDesc.Streams[0], "/api.Core/ServiceLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &coreServiceLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Core_ServiceLogsClient interface {
	Recv() (*LogData, error)
	grpc.ClientStream
}

type coreServiceLogsClient struct {
	grpc.ClientStream
}

func (x *coreServiceLogsClient) Recv() (*LogData, error) {
	m := new(LogData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *coreClient) Info(ctx context.Context, in *InfoRequest, opts ...grpc.CallOption) (*InfoReply, error) {
	out := new(InfoReply)
	err := c.cc.Invoke(ctx, "/api.Core/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CoreServer is the server API for Core service.
type CoreServer interface {
	// ServiceLogs gives a stream for dependency logs of a service.
	ServiceLogs(*ServiceLogsRequest, Core_ServiceLogsServer) error
	// Info returns all necessary information from the core.
	Info(context.Context, *InfoRequest) (*InfoReply, error)
}

func RegisterCoreServer(s *grpc.Server, srv CoreServer) {
	s.RegisterService(&_Core_serviceDesc, srv)
}

func _Core_ServiceLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServiceLogsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CoreServer).ServiceLogs(m, &coreServiceLogsServer{stream})
}

type Core_ServiceLogsServer interface {
	Send(*LogData) error
	grpc.ServerStream
}

type coreServiceLogsServer struct {
	grpc.ServerStream
}

func (x *coreServiceLogsServer) Send(m *LogData) error {
	return x.ServerStream.SendMsg(m)
}

func _Core_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CoreServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Core/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CoreServer).Info(ctx, req.(*InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Core_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Core",
	HandlerType: (*CoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _Core_Info_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ServiceLogs",
			Handler:       _Core_ServiceLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/coreapi/api.proto",
}
