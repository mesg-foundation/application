// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/api/event.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	types "github.com/mesg-foundation/engine/protobuf/types"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// StreamEventRequest defines request to retrieve a stream of events.
type StreamEventRequest struct {
	// Filter used to filter a stream of events.
	Filter               *StreamEventRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *StreamEventRequest) Reset()         { *m = StreamEventRequest{} }
func (m *StreamEventRequest) String() string { return proto.CompactTextString(m) }
func (*StreamEventRequest) ProtoMessage()    {}
func (*StreamEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{0}
}

func (m *StreamEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEventRequest.Unmarshal(m, b)
}
func (m *StreamEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEventRequest.Marshal(b, m, deterministic)
}
func (m *StreamEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEventRequest.Merge(m, src)
}
func (m *StreamEventRequest) XXX_Size() int {
	return xxx_messageInfo_StreamEventRequest.Size(m)
}
func (m *StreamEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEventRequest proto.InternalMessageInfo

func (m *StreamEventRequest) GetFilter() *StreamEventRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Filter contains filtering criteria.
type StreamEventRequest_Filter struct {
	// hash to filter events.
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// instance's hash to filter events.
	InstanceHash string `protobuf:"bytes,2,opt,name=instanceHash,proto3" json:"instanceHash,omitempty"`
	// key is the key of the event.
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamEventRequest_Filter) Reset()         { *m = StreamEventRequest_Filter{} }
func (m *StreamEventRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*StreamEventRequest_Filter) ProtoMessage()    {}
func (*StreamEventRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{0, 0}
}

func (m *StreamEventRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamEventRequest_Filter.Unmarshal(m, b)
}
func (m *StreamEventRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamEventRequest_Filter.Marshal(b, m, deterministic)
}
func (m *StreamEventRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamEventRequest_Filter.Merge(m, src)
}
func (m *StreamEventRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_StreamEventRequest_Filter.Size(m)
}
func (m *StreamEventRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamEventRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_StreamEventRequest_Filter proto.InternalMessageInfo

func (m *StreamEventRequest_Filter) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *StreamEventRequest_Filter) GetInstanceHash() string {
	if m != nil {
		return m.InstanceHash
	}
	return ""
}

func (m *StreamEventRequest_Filter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// CreateEventRequest defines request for execution update.
type CreateEventRequest struct {
	// instanceHash is hash of instance that can proceed an execution.
	InstanceHash string `protobuf:"bytes,1,opt,name=instanceHash,proto3" json:"instanceHash,omitempty"`
	// key is the key of the event.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// data is the data for the event.
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventRequest) Reset()         { *m = CreateEventRequest{} }
func (m *CreateEventRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEventRequest) ProtoMessage()    {}
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{1}
}

func (m *CreateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRequest.Unmarshal(m, b)
}
func (m *CreateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRequest.Marshal(b, m, deterministic)
}
func (m *CreateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRequest.Merge(m, src)
}
func (m *CreateEventRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEventRequest.Size(m)
}
func (m *CreateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRequest proto.InternalMessageInfo

func (m *CreateEventRequest) GetInstanceHash() string {
	if m != nil {
		return m.InstanceHash
	}
	return ""
}

func (m *CreateEventRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *CreateEventRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// CreateEventResponse defines response for execution update.
type CreateEventResponse struct {
	// Hash represents event.
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventResponse) Reset()         { *m = CreateEventResponse{} }
func (m *CreateEventResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEventResponse) ProtoMessage()    {}
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{2}
}

func (m *CreateEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventResponse.Unmarshal(m, b)
}
func (m *CreateEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventResponse.Marshal(b, m, deterministic)
}
func (m *CreateEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventResponse.Merge(m, src)
}
func (m *CreateEventResponse) XXX_Size() int {
	return xxx_messageInfo_CreateEventResponse.Size(m)
}
func (m *CreateEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventResponse proto.InternalMessageInfo

func (m *CreateEventResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func init() {
	proto.RegisterType((*StreamEventRequest)(nil), "api.StreamEventRequest")
	proto.RegisterType((*StreamEventRequest_Filter)(nil), "api.StreamEventRequest.Filter")
	proto.RegisterType((*CreateEventRequest)(nil), "api.CreateEventRequest")
	proto.RegisterType((*CreateEventResponse)(nil), "api.CreateEventResponse")
}

func init() { proto.RegisterFile("protobuf/api/event.proto", fileDescriptor_c0ad091fa003d2ac) }

var fileDescriptor_c0ad091fa003d2ac = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xbb, 0x8d, 0x2e, 0x38, 0xf6, 0x20, 0xe3, 0xc1, 0xb0, 0x07, 0x91, 0x3d, 0xe9, 0x65,
	0x2b, 0x2d, 0x78, 0xf3, 0x24, 0x8a, 0xe7, 0x78, 0x17, 0xb6, 0x3a, 0xa5, 0x8b, 0x9a, 0xac, 0xd9,
	0xa9, 0x50, 0xfc, 0x33, 0xfe, 0x54, 0xc9, 0x24, 0x04, 0x63, 0xf4, 0x36, 0xbc, 0xf7, 0xe6, 0x63,
	0xf6, 0x2d, 0xe4, 0xb1, 0xae, 0xb8, 0x5a, 0x6d, 0xd7, 0x73, 0x1f, 0xc3, 0x9c, 0x3e, 0xa8, 0x64,
	0x27, 0x12, 0x66, 0x3e, 0x06, 0x63, 0x7a, 0x9b, 0x77, 0x91, 0xd2, 0xcf, 0x80, 0xfd, 0x52, 0x80,
	0x0f, 0x5c, 0x93, 0x7f, 0xbb, 0x6d, 0xd4, 0x82, 0xde, 0xb7, 0x94, 0x18, 0xaf, 0x40, 0xaf, 0xc3,
	0x2b, 0x53, 0x9d, 0xab, 0x33, 0x75, 0x7e, 0xb8, 0x38, 0x75, 0x3e, 0x06, 0x37, 0x0e, 0xba, 0x3b,
	0x49, 0x15, 0x5d, 0xda, 0x14, 0xa0, 0x5b, 0x05, 0x11, 0xf6, 0x36, 0x3e, 0x6d, 0x64, 0xff, 0xa0,
	0x90, 0x19, 0x2d, 0xcc, 0x42, 0x99, 0xd8, 0x97, 0x4f, 0x74, 0xdf, 0x78, 0x53, 0xf1, 0x06, 0x1a,
	0x1e, 0x41, 0xf6, 0x42, 0xbb, 0x3c, 0x13, 0xab, 0x19, 0xed, 0x23, 0xe0, 0x4d, 0x4d, 0x9e, 0x69,
	0x70, 0xe1, 0x6f, 0x96, 0xfa, 0x9f, 0x35, 0xed, 0x59, 0xcd, 0x55, 0xcf, 0x9e, 0x7d, 0x87, 0x97,
	0xd9, 0x5e, 0xc0, 0xf1, 0x80, 0x9f, 0x62, 0x55, 0x26, 0xfa, 0xeb, 0x01, 0x8b, 0x4f, 0xd8, 0x97,
	0x10, 0x5e, 0x83, 0x6e, 0x77, 0xf0, 0x44, 0x9a, 0x19, 0x1f, 0x68, 0xf2, 0xb1, 0xd1, 0x92, 0xed,
	0x04, 0x97, 0xa0, 0xdb, 0x2e, 0xbb, 0xf5, 0x71, 0xb1, 0x66, 0xe6, 0xe4, 0xb3, 0x9c, 0x88, 0x76,
	0x72, 0xa9, 0x56, 0x5a, 0x7e, 0x6c, 0xf9, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x58, 0x6b, 0x0c, 0x12,
	0xee, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventClient is the client API for Event service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventClient interface {
	// Create creates event with data.
	Create(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventResponse, error)
	// Stream returns a stream of events that satisfy criteria
	// specified in a request.
	Stream(ctx context.Context, in *StreamEventRequest, opts ...grpc.CallOption) (Event_StreamClient, error)
}

type eventClient struct {
	cc *grpc.ClientConn
}

func NewEventClient(cc *grpc.ClientConn) EventClient {
	return &eventClient{cc}
}

func (c *eventClient) Create(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventResponse, error) {
	out := new(CreateEventResponse)
	err := c.cc.Invoke(ctx, "/api.Event/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventClient) Stream(ctx context.Context, in *StreamEventRequest, opts ...grpc.CallOption) (Event_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Event_serviceDesc.Streams[0], "/api.Event/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Event_StreamClient interface {
	Recv() (*types.Event, error)
	grpc.ClientStream
}

type eventStreamClient struct {
	grpc.ClientStream
}

func (x *eventStreamClient) Recv() (*types.Event, error) {
	m := new(types.Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventServer is the server API for Event service.
type EventServer interface {
	// Create creates event with data.
	Create(context.Context, *CreateEventRequest) (*CreateEventResponse, error)
	// Stream returns a stream of events that satisfy criteria
	// specified in a request.
	Stream(*StreamEventRequest, Event_StreamServer) error
}

func RegisterEventServer(s *grpc.Server, srv EventServer) {
	s.RegisterService(&_Event_serviceDesc, srv)
}

func _Event_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Event/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServer).Create(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Event_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamEventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventServer).Stream(m, &eventStreamServer{stream})
}

type Event_StreamServer interface {
	Send(*types.Event) error
	grpc.ServerStream
}

type eventStreamServer struct {
	grpc.ServerStream
}

func (x *eventStreamServer) Send(m *types.Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Event_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Event",
	HandlerType: (*EventServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Event_Create_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Event_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/api/event.proto",
}
