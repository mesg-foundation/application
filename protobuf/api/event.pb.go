// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protobuf/api/event.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	event "github.com/mesg-foundation/engine/event"
	github_com_mesg_foundation_engine_hash "github.com/mesg-foundation/engine/hash"
	types "github.com/mesg-foundation/engine/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// EventStreamRequest defines request to retrieve a stream of events.
type EventServiceStreamRequest struct {
	// Filter used to filter a stream of events.
	Filter               *EventServiceStreamRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *EventServiceStreamRequest) Reset()         { *m = EventServiceStreamRequest{} }
func (m *EventServiceStreamRequest) String() string { return proto.CompactTextString(m) }
func (*EventServiceStreamRequest) ProtoMessage()    {}
func (*EventServiceStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{0}
}
func (m *EventServiceStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventServiceStreamRequest.Unmarshal(m, b)
}
func (m *EventServiceStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventServiceStreamRequest.Marshal(b, m, deterministic)
}
func (m *EventServiceStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventServiceStreamRequest.Merge(m, src)
}
func (m *EventServiceStreamRequest) XXX_Size() int {
	return xxx_messageInfo_EventServiceStreamRequest.Size(m)
}
func (m *EventServiceStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventServiceStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventServiceStreamRequest proto.InternalMessageInfo

func (m *EventServiceStreamRequest) GetFilter() *EventServiceStreamRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Filter contains filtering criteria.
type EventServiceStreamRequest_Filter struct {
	// hash to filter events.
	Hash github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,1,opt,name=hash,proto3,customtype=github.com/mesg-foundation/engine/hash.Hash" json:"hash"`
	// instance's hash to filter events.
	InstanceHash github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,2,opt,name=instance_hash,json=instanceHash,proto3,customtype=github.com/mesg-foundation/engine/hash.Hash" json:"instance_hash"`
	// key is the key of the event.
	Key                  string   `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventServiceStreamRequest_Filter) Reset()         { *m = EventServiceStreamRequest_Filter{} }
func (m *EventServiceStreamRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*EventServiceStreamRequest_Filter) ProtoMessage()    {}
func (*EventServiceStreamRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{0, 0}
}
func (m *EventServiceStreamRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventServiceStreamRequest_Filter.Unmarshal(m, b)
}
func (m *EventServiceStreamRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventServiceStreamRequest_Filter.Marshal(b, m, deterministic)
}
func (m *EventServiceStreamRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventServiceStreamRequest_Filter.Merge(m, src)
}
func (m *EventServiceStreamRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_EventServiceStreamRequest_Filter.Size(m)
}
func (m *EventServiceStreamRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_EventServiceStreamRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_EventServiceStreamRequest_Filter proto.InternalMessageInfo

func (m *EventServiceStreamRequest_Filter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type EventServiceStreamResponse struct {
	Event                *event.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EventServiceStreamResponse) Reset()         { *m = EventServiceStreamResponse{} }
func (m *EventServiceStreamResponse) String() string { return proto.CompactTextString(m) }
func (*EventServiceStreamResponse) ProtoMessage()    {}
func (*EventServiceStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{1}
}
func (m *EventServiceStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventServiceStreamResponse.Unmarshal(m, b)
}
func (m *EventServiceStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventServiceStreamResponse.Marshal(b, m, deterministic)
}
func (m *EventServiceStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventServiceStreamResponse.Merge(m, src)
}
func (m *EventServiceStreamResponse) XXX_Size() int {
	return xxx_messageInfo_EventServiceStreamResponse.Size(m)
}
func (m *EventServiceStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventServiceStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventServiceStreamResponse proto.InternalMessageInfo

func (m *EventServiceStreamResponse) GetEvent() *event.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

// EventCreateRequest defines request for execution update.
type EventServiceCreateRequest struct {
	// instanceHash is hash of instance that can proceed an execution.
	InstanceHash github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,1,opt,name=instance_hash,json=instanceHash,proto3,customtype=github.com/mesg-foundation/engine/hash.Hash" json:"instance_hash"`
	// key is the key of the event.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// data is the data for the event.
	Data                 *types.Struct `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *EventServiceCreateRequest) Reset()         { *m = EventServiceCreateRequest{} }
func (m *EventServiceCreateRequest) String() string { return proto.CompactTextString(m) }
func (*EventServiceCreateRequest) ProtoMessage()    {}
func (*EventServiceCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{2}
}
func (m *EventServiceCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventServiceCreateRequest.Unmarshal(m, b)
}
func (m *EventServiceCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventServiceCreateRequest.Marshal(b, m, deterministic)
}
func (m *EventServiceCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventServiceCreateRequest.Merge(m, src)
}
func (m *EventServiceCreateRequest) XXX_Size() int {
	return xxx_messageInfo_EventServiceCreateRequest.Size(m)
}
func (m *EventServiceCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventServiceCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventServiceCreateRequest proto.InternalMessageInfo

func (m *EventServiceCreateRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *EventServiceCreateRequest) GetData() *types.Struct {
	if m != nil {
		return m.Data
	}
	return nil
}

// EventCreateResponse defines response for execution update.
type EventServiceCreateResponse struct {
	// Hash represents event.
	Hash                 github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,1,opt,name=hash,proto3,customtype=github.com/mesg-foundation/engine/hash.Hash" json:"hash"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *EventServiceCreateResponse) Reset()         { *m = EventServiceCreateResponse{} }
func (m *EventServiceCreateResponse) String() string { return proto.CompactTextString(m) }
func (*EventServiceCreateResponse) ProtoMessage()    {}
func (*EventServiceCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c0ad091fa003d2ac, []int{3}
}
func (m *EventServiceCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventServiceCreateResponse.Unmarshal(m, b)
}
func (m *EventServiceCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventServiceCreateResponse.Marshal(b, m, deterministic)
}
func (m *EventServiceCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventServiceCreateResponse.Merge(m, src)
}
func (m *EventServiceCreateResponse) XXX_Size() int {
	return xxx_messageInfo_EventServiceCreateResponse.Size(m)
}
func (m *EventServiceCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventServiceCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventServiceCreateResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EventServiceStreamRequest)(nil), "mesg.api.v1.EventServiceStreamRequest")
	proto.RegisterType((*EventServiceStreamRequest_Filter)(nil), "mesg.api.v1.EventServiceStreamRequest.Filter")
	proto.RegisterType((*EventServiceStreamResponse)(nil), "mesg.api.v1.EventServiceStreamResponse")
	proto.RegisterType((*EventServiceCreateRequest)(nil), "mesg.api.v1.EventServiceCreateRequest")
	proto.RegisterType((*EventServiceCreateResponse)(nil), "mesg.api.v1.EventServiceCreateResponse")
}

func init() { proto.RegisterFile("protobuf/api/event.proto", fileDescriptor_c0ad091fa003d2ac) }

var fileDescriptor_c0ad091fa003d2ac = []byte{
	// 411 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xcb, 0x8e, 0xd3, 0x30,
	0x14, 0xad, 0xfb, 0x88, 0x84, 0x5b, 0x24, 0x64, 0x81, 0x54, 0xc2, 0xa2, 0x55, 0x16, 0x50, 0x40,
	0x75, 0xa0, 0xfd, 0x83, 0xa2, 0x42, 0xd7, 0xe9, 0x06, 0x81, 0x10, 0x72, 0xd3, 0xdb, 0xc4, 0x82,
	0xda, 0x21, 0x76, 0x2a, 0xf5, 0x77, 0xf8, 0x04, 0xf6, 0xec, 0x11, 0x9f, 0x30, 0x8b, 0x7e, 0xcb,
	0x28, 0x76, 0x12, 0x35, 0x33, 0xd3, 0x8e, 0x34, 0xea, 0xce, 0xd7, 0xbe, 0xe7, 0xdc, 0x7b, 0x8e,
	0x0f, 0xee, 0x27, 0xa9, 0xd4, 0x72, 0x95, 0x6d, 0x7c, 0x96, 0x70, 0x1f, 0x76, 0x20, 0x34, 0x35,
	0x57, 0xa4, 0xbb, 0x05, 0x15, 0x51, 0x96, 0x70, 0xba, 0x7b, 0xef, 0x7a, 0x91, 0x8c, 0xa4, 0x5f,
	0xf5, 0xe6, 0x95, 0x29, 0xcc, 0xc9, 0x02, 0xdc, 0x17, 0xd5, 0xb3, 0xde, 0x27, 0xa0, 0x7c, 0xa5,
	0xd3, 0x2c, 0x2c, 0xd8, 0x5c, 0xf7, 0xc6, 0xe3, 0xd1, 0x24, 0xef, 0x77, 0x13, 0x3f, 0x9f, 0xe7,
	0xf5, 0x12, 0xd2, 0x1d, 0x0f, 0x61, 0xa9, 0x53, 0x60, 0xdb, 0x00, 0x7e, 0x65, 0xa0, 0x34, 0x99,
	0x63, 0x67, 0xc3, 0x7f, 0x6a, 0x48, 0xfb, 0x68, 0x88, 0x46, 0xdd, 0xc9, 0x98, 0x1e, 0x2d, 0x46,
	0x4f, 0xe2, 0xe8, 0x47, 0x03, 0x0a, 0x0a, 0xb0, 0xfb, 0x17, 0x61, 0xc7, 0x5e, 0x91, 0x4f, 0xb8,
	0x1d, 0x33, 0x15, 0x1b, 0xbe, 0xde, 0x6c, 0xfa, 0xef, 0x30, 0x68, 0x5c, 0x1d, 0x06, 0x6f, 0x23,
	0xae, 0xe3, 0x6c, 0x45, 0x43, 0xb9, 0xf5, 0xf3, 0x09, 0xe3, 0x8d, 0xcc, 0xc4, 0x9a, 0x69, 0x2e,
	0x85, 0x0f, 0x22, 0xe2, 0x02, 0xfc, 0x1c, 0x45, 0x17, 0x4c, 0xc5, 0x81, 0x21, 0x20, 0x9f, 0xf1,
	0x63, 0x2e, 0x94, 0x66, 0x22, 0x84, 0xef, 0x86, 0xb1, 0xf9, 0x70, 0xc6, 0x5e, 0xc9, 0x94, 0x57,
	0xe4, 0x09, 0x6e, 0xfd, 0x80, 0x7d, 0xbf, 0x35, 0x44, 0xa3, 0x47, 0x41, 0x7e, 0xf4, 0x16, 0xd8,
	0xbd, 0x4b, 0xab, 0x4a, 0xa4, 0x50, 0x40, 0xde, 0xe0, 0x8e, 0x71, 0xb4, 0xf0, 0xe8, 0xa9, 0xf5,
	0xc8, 0x58, 0x5d, 0xb9, 0x14, 0xd8, 0x16, 0xef, 0x0f, 0xaa, 0xdb, 0xfd, 0x21, 0x05, 0xa6, 0xa1,
	0xb4, 0xfb, 0x96, 0x26, 0x74, 0x61, 0x4d, 0xcd, 0x4a, 0x13, 0x79, 0x8d, 0xdb, 0x6b, 0xa6, 0x99,
	0x91, 0xd9, 0x9d, 0x3c, 0xb3, 0x4b, 0x97, 0x41, 0xa1, 0x4b, 0x93, 0x9f, 0xc0, 0xb4, 0x78, 0x50,
	0x97, 0x5f, 0xee, 0x5c, 0xc8, 0xbf, 0xd4, 0x8f, 0x4e, 0xfe, 0x23, 0xdc, 0x3b, 0x9e, 0x43, 0xbe,
	0x62, 0xc7, 0xce, 0x22, 0x2f, 0x4f, 0xe6, 0xae, 0x66, 0xa0, 0xfb, 0xea, 0xde, 0x3e, 0xbb, 0xb4,
	0xd7, 0x20, 0xdf, 0xb0, 0x63, 0xff, 0xf1, 0x0c, 0x79, 0x2d, 0xd4, 0x67, 0xc8, 0xeb, 0x81, 0xf0,
	0x1a, 0xef, 0xd0, 0xac, 0xf3, 0xa5, 0xc5, 0x12, 0xbe, 0x72, 0x8c, 0xa3, 0xd3, 0xeb, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x44, 0xb0, 0xc1, 0x23, 0xeb, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	// Create creates event with data.
	Create(ctx context.Context, in *EventServiceCreateRequest, opts ...grpc.CallOption) (*EventServiceCreateResponse, error)
	// Stream returns a stream of events that satisfy criteria
	// specified in a request.
	Stream(ctx context.Context, in *EventServiceStreamRequest, opts ...grpc.CallOption) (EventService_StreamClient, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) Create(ctx context.Context, in *EventServiceCreateRequest, opts ...grpc.CallOption) (*EventServiceCreateResponse, error) {
	out := new(EventServiceCreateResponse)
	err := c.cc.Invoke(ctx, "/mesg.api.v1.EventService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) Stream(ctx context.Context, in *EventServiceStreamRequest, opts ...grpc.CallOption) (EventService_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventService_serviceDesc.Streams[0], "/mesg.api.v1.EventService/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventServiceStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventService_StreamClient interface {
	Recv() (*EventServiceStreamResponse, error)
	grpc.ClientStream
}

type eventServiceStreamClient struct {
	grpc.ClientStream
}

func (x *eventServiceStreamClient) Recv() (*EventServiceStreamResponse, error) {
	m := new(EventServiceStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	// Create creates event with data.
	Create(context.Context, *EventServiceCreateRequest) (*EventServiceCreateResponse, error)
	// Stream returns a stream of events that satisfy criteria
	// specified in a request.
	Stream(*EventServiceStreamRequest, EventService_StreamServer) error
}

// UnimplementedEventServiceServer can be embedded to have forward compatible implementations.
type UnimplementedEventServiceServer struct {
}

func (*UnimplementedEventServiceServer) Create(ctx context.Context, req *EventServiceCreateRequest) (*EventServiceCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedEventServiceServer) Stream(req *EventServiceStreamRequest, srv EventService_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventServiceCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mesg.api.v1.EventService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Create(ctx, req.(*EventServiceCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventServiceStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventServiceServer).Stream(m, &eventServiceStreamServer{stream})
}

type EventService_StreamServer interface {
	Send(*EventServiceStreamResponse) error
	grpc.ServerStream
}

type eventServiceStreamServer struct {
	grpc.ServerStream
}

func (x *eventServiceStreamServer) Send(m *EventServiceStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mesg.api.v1.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _EventService_Create_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _EventService_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/api/event.proto",
}
