syntax = "proto3";

import "protobuf/definition/execution.proto";

package api;

// This is the API to interact with the Executions.
//
// This API is a [gRPC](https://grpc.io/) API.
//
// The source file of this API is hosted on [GitHub](https://github.com/mesg-foundation/engine/blob/master/protobuf/api/execution.proto).

service Execution {
  // Get returns a single Execution specified in a request.
  rpc Get(GetExecutionRequest) returns (definition.Execution) {}

  // Stream returns a stream of executions that satisfy criteria
  // specified in a request.
  rpc Stream(StreamExecutionRequest) returns (stream definition.Execution) {}

  // Update updates execution with outputs or an error.
  rpc Update(UpdateExecutionRequest) returns (UpdateExecutionResponse) {}
}

// GetExecutionRequest defines request to retrieve a single execution.
// **Example**	
// TODO: add JSON example
message GetExecutionRequest {
  string hash = 1;  // Execution's hash to fetch.
}

// StreamExecutionRequest defines request to retrieve a stream of executions.
// **Example**	
// TODO: add JSON example
message StreamExecutionRequest{
  // Filter contains filtering criteria.
  message Filter {
    definition.Status status = 1; // Status to filter executions.
    string serviceHash = 2;       // Service's hash to filter executions.
  }
  Filter filter = 1;  // Filter used to filter a stream of executions.
}

// UpdateExecutionRequest defines request for execution update.
// **Example**	
// TODO: add JSON example
message UpdateExecutionRequest {
  string hash = 1;      // Hash represents execution.
  oneof result {        // result pass to execution
    string outputs = 2; // outputs is a success result.
    string error = 3;   // error is an error result.
  }
}

// UpdateExecutionResponse defines response for execution update.
message UpdateExecutionResponse {}
