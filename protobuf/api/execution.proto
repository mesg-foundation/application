syntax = "proto3";

import "protobuf/definition/execution.proto";

package api;

// Execution is the service for handle operations on Execution
// such as get or stream.
service Execution {
  // Get returns a single Execution specified in a request.
  rpc Get(GetExecutionRequest) returns (definition.Execution) {}

  // Stream returns a stream of execution that satisfy criteria
  // specified in a request.
  rpc Stream(StreamExecutionRequest) returns (stream definition.Execution) {}

  // Update updates execution with outputs or an error.
  rpc Update(UpdateExecutionRequest) returns (UpdateExecutionResponse) {}
}

// GetExecutionRequest defines request to retrieve a single execution.
message GetExecutionRequest {
  string hash = 1;
}

// StreamExecutionRequest defines request to retrieve a stream of executions.
message StreamExecutionRequest{
  // Filter contains filtering criteria.
  message Filter {
    // Status for filtering execution by status.
    // Note: to filter multiple statues or flags, eg:
    // Failed | Completed
    definition.Status status = 1;
  }

  // Filter used to filter a stream of executions.
  Filter filter = 1;
}

// UpdateExecutionRequest defines request for execution update.
message UpdateExecutionRequest {
  // Hash represents execution.
  string hash = 1;
  // result pass to execution
  oneof result {
    // outputs is a success result.
    string outputs = 2;
    // error is an error result.
    string error = 3;
  }
}

// UpdateExecutionResponse defines response for execution update.
message UpdateExecutionResponse {}
