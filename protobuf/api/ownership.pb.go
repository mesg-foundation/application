// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: protobuf/api/ownership.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	ownership "github.com/mesg-foundation/engine/ownership"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The request's data for the `List` API.
type ListOwnershipRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOwnershipRequest) Reset()         { *m = ListOwnershipRequest{} }
func (m *ListOwnershipRequest) String() string { return proto.CompactTextString(m) }
func (*ListOwnershipRequest) ProtoMessage()    {}
func (*ListOwnershipRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3de3887ff6b0398, []int{0}
}
func (m *ListOwnershipRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOwnershipRequest.Unmarshal(m, b)
}
func (m *ListOwnershipRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOwnershipRequest.Marshal(b, m, deterministic)
}
func (m *ListOwnershipRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOwnershipRequest.Merge(m, src)
}
func (m *ListOwnershipRequest) XXX_Size() int {
	return xxx_messageInfo_ListOwnershipRequest.Size(m)
}
func (m *ListOwnershipRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOwnershipRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOwnershipRequest proto.InternalMessageInfo

// The response's data for the `List` API.
type ListOwnershipResponse struct {
	// List of ownerships that match the request's filters.
	Ownerships           []*ownership.Ownership `protobuf:"bytes,1,rep,name=ownerships,proto3" json:"ownerships,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListOwnershipResponse) Reset()         { *m = ListOwnershipResponse{} }
func (m *ListOwnershipResponse) String() string { return proto.CompactTextString(m) }
func (*ListOwnershipResponse) ProtoMessage()    {}
func (*ListOwnershipResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3de3887ff6b0398, []int{1}
}
func (m *ListOwnershipResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOwnershipResponse.Unmarshal(m, b)
}
func (m *ListOwnershipResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOwnershipResponse.Marshal(b, m, deterministic)
}
func (m *ListOwnershipResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOwnershipResponse.Merge(m, src)
}
func (m *ListOwnershipResponse) XXX_Size() int {
	return xxx_messageInfo_ListOwnershipResponse.Size(m)
}
func (m *ListOwnershipResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOwnershipResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOwnershipResponse proto.InternalMessageInfo

func (m *ListOwnershipResponse) GetOwnerships() []*ownership.Ownership {
	if m != nil {
		return m.Ownerships
	}
	return nil
}

func init() {
	proto.RegisterType((*ListOwnershipRequest)(nil), "mesg.api.ListOwnershipRequest")
	proto.RegisterType((*ListOwnershipResponse)(nil), "mesg.api.ListOwnershipResponse")
}

func init() { proto.RegisterFile("protobuf/api/ownership.proto", fileDescriptor_e3de3887ff6b0398) }

var fileDescriptor_e3de3887ff6b0398 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x4f, 0x2c, 0xc8, 0xd4, 0xcf, 0x2f, 0xcf, 0x4b, 0x2d, 0x2a, 0xce,
	0xc8, 0x2c, 0xd0, 0x03, 0x0b, 0x0b, 0x71, 0xe4, 0xa6, 0x16, 0xa7, 0xeb, 0x25, 0x16, 0x64, 0x4a,
	0x29, 0xa5, 0xe7, 0xa7, 0xe7, 0xeb, 0xc3, 0x15, 0x83, 0x78, 0x60, 0x0e, 0x98, 0x05, 0x51, 0x2d,
	0x25, 0x07, 0x97, 0x2e, 0xa9, 0x2c, 0x48, 0x2d, 0x46, 0x37, 0x4d, 0x49, 0x8c, 0x4b, 0xc4, 0x27,
	0xb3, 0xb8, 0xc4, 0x1f, 0x26, 0x1c, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0xa2, 0xe4, 0xc7, 0x25,
	0x8a, 0x26, 0x5e, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x64, 0xca, 0xc5, 0x05, 0x37, 0xa3, 0x58,
	0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x48, 0x54, 0x0f, 0xec, 0x26, 0xb0, 0x0d, 0x7a, 0x08, 0x2d,
	0x48, 0x0a, 0x8d, 0xc2, 0xb8, 0x38, 0xe1, 0x12, 0x42, 0x9e, 0x5c, 0x2c, 0x20, 0xc3, 0x85, 0xe4,
	0xf4, 0x60, 0x7e, 0xd1, 0xc3, 0xe6, 0x08, 0x29, 0x79, 0x9c, 0xf2, 0x10, 0xc7, 0x28, 0x31, 0x38,
	0xb1, 0x46, 0x31, 0x27, 0x16, 0x64, 0x26, 0xb1, 0x81, 0x7d, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0xab, 0x90, 0xd3, 0xfb, 0x3b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OwnershipClient is the client API for Ownership service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OwnershipClient interface {
	// List returns ownerships specified in a request.
	List(ctx context.Context, in *ListOwnershipRequest, opts ...grpc.CallOption) (*ListOwnershipResponse, error)
}

type ownershipClient struct {
	cc *grpc.ClientConn
}

func NewOwnershipClient(cc *grpc.ClientConn) OwnershipClient {
	return &ownershipClient{cc}
}

func (c *ownershipClient) List(ctx context.Context, in *ListOwnershipRequest, opts ...grpc.CallOption) (*ListOwnershipResponse, error) {
	out := new(ListOwnershipResponse)
	err := c.cc.Invoke(ctx, "/mesg.api.Ownership/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OwnershipServer is the server API for Ownership service.
type OwnershipServer interface {
	// List returns ownerships specified in a request.
	List(context.Context, *ListOwnershipRequest) (*ListOwnershipResponse, error)
}

// UnimplementedOwnershipServer can be embedded to have forward compatible implementations.
type UnimplementedOwnershipServer struct {
}

func (*UnimplementedOwnershipServer) List(ctx context.Context, req *ListOwnershipRequest) (*ListOwnershipResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterOwnershipServer(s *grpc.Server, srv OwnershipServer) {
	s.RegisterService(&_Ownership_serviceDesc, srv)
}

func _Ownership_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOwnershipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OwnershipServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mesg.api.Ownership/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OwnershipServer).List(ctx, req.(*ListOwnershipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Ownership_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mesg.api.Ownership",
	HandlerType: (*OwnershipServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Ownership_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protobuf/api/ownership.proto",
}
