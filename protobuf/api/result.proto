syntax = "proto3";

import "gogo/protobuf/gogoproto/gogo.proto";
import "protobuf/types/struct.proto";
import "protobuf/types/result.proto";

package mesg.api;
option go_package = "api";

// This is the API to interact with the Results.
//
// This API is a [gRPC](https://grpc.io/) API.
//
// The source file of this API is hosted on [GitHub](https://github.com/mesg-foundation/engine/blob/master/protobuf/api/result.proto).

service Result {
  // Create creates a single Execution specified in a request.
  rpc Create(CreateResultRequest) returns (CreateResultResponse) {}

  // Get returns a single Execution specified in a request.
  rpc Get(GetResultRequest) returns (types.Result) {}

  // List returns all Executions matching the criteria of the request.
  rpc List(ListResultRequest) returns (ListResultResponse) {}

  // Stream returns a stream of executions that satisfy criteria
  // specified in a request.
  rpc Stream(StreamResultRequest) returns (stream types.Result) {}
}

// CreateResultRequest defines request to create a single result.
message CreateResultRequest {
  // executionHash is hash of the associated execution.
  bytes executionHash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];

  // result pass to execution
  oneof result {
    // outputs is a success result.
    mesg.protobuf.Struct outputs = 2;

    // error is an error result.
    string error = 3;
  }
}

// CreateResultResponse defines response for execution creation.
message CreateResultResponse {
  // Result's hash.
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// GetResultRequest defines request to retrieve a single execution.
message GetResultRequest {
  // Execution's hash to fetch.
  bytes hash = 1 [
    (gogoproto.moretags) = 'validate:"required,hash"',
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// StreamResultRequest defines request to retrieve a stream of executions.
message StreamResultRequest{}

// The request's data for the `List` API.
message ListResultRequest {}

// The response's data for the `List` API.
message ListResultResponse {
  // List of executions that match the request's filters.
  repeated types.Result results = 1;
}
