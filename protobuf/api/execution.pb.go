// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/api/execution.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import definition "github.com/mesg-foundation/core/protobuf/definition"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// GetRequest defines request to retrive a single execution.
type GetExecutionRequest struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetExecutionRequest) Reset()         { *m = GetExecutionRequest{} }
func (m *GetExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*GetExecutionRequest) ProtoMessage()    {}
func (*GetExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_execution_ff144e89b3e7fe1e, []int{0}
}
func (m *GetExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetExecutionRequest.Unmarshal(m, b)
}
func (m *GetExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetExecutionRequest.Marshal(b, m, deterministic)
}
func (dst *GetExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetExecutionRequest.Merge(dst, src)
}
func (m *GetExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_GetExecutionRequest.Size(m)
}
func (m *GetExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetExecutionRequest proto.InternalMessageInfo

func (m *GetExecutionRequest) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

// StreamRequest defines request to retrive a stream of executions.
type StreamExecutionRequest struct {
	// Filter used to filter a stream of executions.
	Filter               *StreamExecutionRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *StreamExecutionRequest) Reset()         { *m = StreamExecutionRequest{} }
func (m *StreamExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*StreamExecutionRequest) ProtoMessage()    {}
func (*StreamExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_execution_ff144e89b3e7fe1e, []int{1}
}
func (m *StreamExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamExecutionRequest.Unmarshal(m, b)
}
func (m *StreamExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamExecutionRequest.Marshal(b, m, deterministic)
}
func (dst *StreamExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamExecutionRequest.Merge(dst, src)
}
func (m *StreamExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_StreamExecutionRequest.Size(m)
}
func (m *StreamExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamExecutionRequest proto.InternalMessageInfo

func (m *StreamExecutionRequest) GetFilter() *StreamExecutionRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

// Filter contains filtering cryteria.
type StreamExecutionRequest_Filter struct {
	// Status for filtering execution by status.
	// Note: to filter multiple statues or flags, eg:
	// Failed | Completed
	Status               definition.Status `protobuf:"varint,1,opt,name=status,proto3,enum=definition.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StreamExecutionRequest_Filter) Reset()         { *m = StreamExecutionRequest_Filter{} }
func (m *StreamExecutionRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*StreamExecutionRequest_Filter) ProtoMessage()    {}
func (*StreamExecutionRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_execution_ff144e89b3e7fe1e, []int{1, 0}
}
func (m *StreamExecutionRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamExecutionRequest_Filter.Unmarshal(m, b)
}
func (m *StreamExecutionRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamExecutionRequest_Filter.Marshal(b, m, deterministic)
}
func (dst *StreamExecutionRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamExecutionRequest_Filter.Merge(dst, src)
}
func (m *StreamExecutionRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_StreamExecutionRequest_Filter.Size(m)
}
func (m *StreamExecutionRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamExecutionRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_StreamExecutionRequest_Filter proto.InternalMessageInfo

func (m *StreamExecutionRequest_Filter) GetStatus() definition.Status {
	if m != nil {
		return m.Status
	}
	return definition.Status_Unknown
}

func init() {
	proto.RegisterType((*GetExecutionRequest)(nil), "api.GetExecutionRequest")
	proto.RegisterType((*StreamExecutionRequest)(nil), "api.StreamExecutionRequest")
	proto.RegisterType((*StreamExecutionRequest_Filter)(nil), "api.StreamExecutionRequest.Filter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExecutionClient is the client API for Execution service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExecutionClient interface {
	// Get returns a single Execution specified in a request.
	Get(ctx context.Context, in *GetExecutionRequest, opts ...grpc.CallOption) (*definition.Execution, error)
	// Stream returns a stream of exeuction that satisfy createria
	// specified in a request.
	Stream(ctx context.Context, in *StreamExecutionRequest, opts ...grpc.CallOption) (Execution_StreamClient, error)
}

type executionClient struct {
	cc *grpc.ClientConn
}

func NewExecutionClient(cc *grpc.ClientConn) ExecutionClient {
	return &executionClient{cc}
}

func (c *executionClient) Get(ctx context.Context, in *GetExecutionRequest, opts ...grpc.CallOption) (*definition.Execution, error) {
	out := new(definition.Execution)
	err := c.cc.Invoke(ctx, "/api.Execution/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *executionClient) Stream(ctx context.Context, in *StreamExecutionRequest, opts ...grpc.CallOption) (Execution_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Execution_serviceDesc.Streams[0], "/api.Execution/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &executionStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Execution_StreamClient interface {
	Recv() (*definition.Execution, error)
	grpc.ClientStream
}

type executionStreamClient struct {
	grpc.ClientStream
}

func (x *executionStreamClient) Recv() (*definition.Execution, error) {
	m := new(definition.Execution)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ExecutionServer is the server API for Execution service.
type ExecutionServer interface {
	// Get returns a single Execution specified in a request.
	Get(context.Context, *GetExecutionRequest) (*definition.Execution, error)
	// Stream returns a stream of exeuction that satisfy createria
	// specified in a request.
	Stream(*StreamExecutionRequest, Execution_StreamServer) error
}

func RegisterExecutionServer(s *grpc.Server, srv ExecutionServer) {
	s.RegisterService(&_Execution_serviceDesc, srv)
}

func _Execution_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExecutionServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Execution/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExecutionServer).Get(ctx, req.(*GetExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Execution_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamExecutionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ExecutionServer).Stream(m, &executionStreamServer{stream})
}

type Execution_StreamServer interface {
	Send(*definition.Execution) error
	grpc.ServerStream
}

type executionStreamServer struct {
	grpc.ServerStream
}

func (x *executionStreamServer) Send(m *definition.Execution) error {
	return x.ServerStream.SendMsg(m)
}

var _Execution_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Execution",
	HandlerType: (*ExecutionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Execution_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Execution_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protobuf/api/execution.proto",
}

func init() {
	proto.RegisterFile("protobuf/api/execution.proto", fileDescriptor_execution_ff144e89b3e7fe1e)
}

var fileDescriptor_execution_ff144e89b3e7fe1e = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0x4f, 0x2c, 0xc8, 0xd4, 0x4f, 0xad, 0x48, 0x4d, 0x2e, 0x2d, 0xc9,
	0xcc, 0xcf, 0xd3, 0x03, 0x0b, 0x0b, 0x31, 0x27, 0x16, 0x64, 0x4a, 0x29, 0xc3, 0x95, 0xa4, 0xa4,
	0xa6, 0x65, 0xe6, 0x65, 0x82, 0xe4, 0xd1, 0x55, 0x2a, 0x69, 0x72, 0x09, 0xbb, 0xa7, 0x96, 0xb8,
	0xc2, 0x44, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0x32, 0x12, 0x8b,
	0x33, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0xc0, 0x6c, 0xa5, 0x2e, 0x46, 0x2e, 0xb1, 0xe0,
	0x92, 0xa2, 0xd4, 0xc4, 0x5c, 0x0c, 0xe5, 0x56, 0x5c, 0x6c, 0x69, 0x99, 0x39, 0x25, 0xa9, 0x45,
	0x60, 0x0d, 0xdc, 0x46, 0x4a, 0x7a, 0x89, 0x05, 0x99, 0x7a, 0xd8, 0x15, 0xeb, 0xb9, 0x81, 0x55,
	0x06, 0x41, 0x75, 0x48, 0x99, 0x70, 0xb1, 0x41, 0x44, 0x84, 0xb4, 0xb8, 0xd8, 0x8a, 0x4b, 0x12,
	0x4b, 0x4a, 0x8b, 0xc1, 0xa6, 0xf0, 0x19, 0x09, 0xe9, 0x21, 0x1c, 0xae, 0x17, 0x0c, 0x96, 0x09,
	0x82, 0xaa, 0x30, 0x6a, 0x67, 0xe4, 0xe2, 0x84, 0x9b, 0x2c, 0x64, 0xc1, 0xc5, 0xec, 0x9e, 0x5a,
	0x22, 0x24, 0x01, 0xb6, 0x16, 0x8b, 0x7f, 0xa4, 0x44, 0x91, 0x8d, 0x82, 0xcb, 0x2a, 0x31, 0x08,
	0x39, 0x70, 0xb1, 0x41, 0x9c, 0x29, 0x24, 0x8d, 0xc7, 0xcd, 0x38, 0xf5, 0x1b, 0x30, 0x26, 0xb1,
	0x81, 0x03, 0xd2, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x81, 0xbf, 0x74, 0x92, 0x01, 0x00,
	0x00,
}
