syntax = "proto3";

import "gogo/protobuf/gogoproto/gogo.proto";
import "protobuf/types/instance.proto";

package mesg.api.v1;
option go_package = "api";

// This is the API to interact with the Instances.
//
// This API is a [gRPC](https://grpc.io/) API.
//
// The source file of this API is hosted on [GitHub](https://github.com/mesg-foundation/engine/blob/master/protobuf/api/instance.proto).
service InstanceService {

  // Get returns an Instance matching the criteria of the request.
  rpc Get (InstanceServiceGetRequest) returns (InstanceServiceGetResponse) {}

  // List returns all Instances matching the criteria of the request.
  rpc List (InstanceServiceListRequest) returns (InstanceServiceListResponse) {}

  // Create an Instance from a Service's hash and custom environmental variables.
  // It will return an unique identifier which is used to interact with the Instance.
  rpc Create (InstanceServiceCreateRequest) returns (InstanceServiceCreateResponse) {}

  // Delete an Instance.
  rpc Delete (InstanceServiceDeleteRequest) returns (InstanceServiceDeleteResponse) {}
}

// The request's data for the `Get` API.
message InstanceServiceGetRequest {
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

message InstanceServiceGetResponse {
  types.v1.Instance instance = 1;
}

// The request's data for the `List` API.
message InstanceServiceListRequest {
  // Filter by Services' hash.
  bytes service_hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// The response's data for the `List` API.
message InstanceServiceListResponse {
  // List of instances that match the request's filters.
  repeated types.v1.Instance instances = 1;
}

// The request's data for the `Create` API.
message InstanceServiceCreateRequest {
  // Service's hash.
  bytes service_hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];

  // Environmental variables to apply to the Instance.
  repeated string env = 2;
}

// The response's data for the `Create` API.
message InstanceServiceCreateResponse {
  // The instance's hash created.
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// The request's data for the `Delete` API.
message InstanceServiceDeleteRequest {
  // Instance's hash
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];

  // If true, any persistent data (volumes) that belongs to the instance and its dependencies will also be deleted.
  bool delete_data = 2;
}

// The response's data for the `Delete` API.
message InstanceServiceDeleteResponse {}
