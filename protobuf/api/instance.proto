syntax = "proto3";

import "protobuf/definition/instance.proto";

package api;

service Instance {
  rpc Get (GetInstanceRequest) returns (GetInstanceResponse) {}
  rpc List (ListInstancesRequest) returns (ListInstancesResponse) {}
  rpc Create (CreateInstanceRequest) returns (CreateInstanceResponse) {}
  rpc Delete (DeleteInstanceRequest) returns (DeleteInstanceResponse) {}
}

message GetInstanceRequest {
  string hash = 1;
}

message GetInstanceResponse {
  definition.Instance instance = 1;
}

message ListInstancesRequest {
  string serviceHash = 1;   // service hash of instance to filter by service (optional).
}

message ListInstancesResponse {
  repeated definition.Instance instances = 1;
}

message CreateInstanceRequest {
  string serviceHash = 1;      // Service's sid or hash.
  repeated string env = 2;     // Env vars to apply to service's instance on runtime.
}

message CreateInstanceResponse {
  definition.Instance instance = 1;
}

message DeleteInstanceRequest {
  string hash = 1;      // Instance hash
  bool deleteData = 2;   // if enabled, any persistent data (volumes) that belongs to instance and its dependencies will also be deleted.
}

message DeleteInstanceResponse {
  string hash = 1;      // Instance hash
}
