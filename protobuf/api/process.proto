syntax = "proto3";

import "gogo/protobuf/gogoproto/gogo.proto";
import "protobuf/types/process.proto";

package mesg.api.v1;
option go_package = "api";

// This is the API to interact with the Processes.
//
// This API is a [gRPC](https://grpc.io/) API.
//
// The source file of this API is hosted on [GitHub](https://github.com/mesg-foundation/engine/blob/master/protobuf/api/process.proto).
service ProcessService {

  // Create a Process from a Process Definition.
  // It will return an unique identifier which is used to interact with the Process.
  rpc Create (ProcessServiceCreateRequest) returns (ProcessServiceCreateResponse) {}

  // Delete a process.
  // An error is returned if one or more Instances of the process are running.
  rpc Delete (ProcessServiceDeleteRequest) returns (ProcessServiceDeleteResponse) {}

  // Get returns a process matching the criteria of the request.
  rpc Get(ProcessServiceGetRequest) returns (ProcessServiceGetResponse) {}

  // List returns processes specified in a request.
  rpc List(ProcessServiceListRequest) returns (ProcessServiceListResponse) {}
}

// The request's data for the `Create` API.
message ProcessServiceCreateRequest {
  string key = 2;           // Process's key
  repeated types.v1.Process.Node nodes = 4;  // List of nodes of the process.
  repeated types.v1.Process.Edge edges = 5;  // List of edges of the process.
}

// The response's data for the `Create` API.
message ProcessServiceCreateResponse {
  // The process's hash created.
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// The request's data for the `Delete` API.
message ProcessServiceDeleteRequest {
  // The process's hash to delete.
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

// The response's data for the `Delete` API, doesn't contain anything.
message ProcessServiceDeleteResponse {
}

// The request's data for the `Get` API.
message ProcessServiceGetRequest {
  // The process's hash to fetch.
  bytes hash = 1 [
    (gogoproto.customtype) = "github.com/mesg-foundation/engine/hash.Hash",
    (gogoproto.nullable) = false
  ];
}

message ProcessServiceGetResponse {
  types.v1.Process process = 1;
}

// The request's data for the `List` API.
message ProcessServiceListRequest {}

// The response's data for the `List` API.
message ProcessServiceListResponse {
  // List of processes that match the request's filters.
  repeated types.v1.Process processes = 1;
}
