syntax = "proto3";

import "protobuf/definition/service.proto";

package api;

// This is the API to interact with the Services.
//
// This API is a [gRPC](https://grpc.io/) API.
//
// The source file of this API is hosted on [GitHub](https://github.com/mesg-foundation/engine/blob/master/protobuf/api/service.proto).
service ServiceX { // TODO(ilgooz): FIXME: this should be renamed to Service.

  // Create a Service from a Service Definition.
  // It will return an unique identifier which is used to interact with the Service.
  rpc Create (CreateServiceRequest) returns (CreateServiceResponse) {}

  // Delete a Service.
  // An error is returned if one or more Instances of the Service are running.
  rpc Delete (DeleteServiceRequest) returns (DeleteServiceResponse) {}

  // Get returns a Service matching the criteria of the request.
  rpc Get(GetServiceRequest) returns (definition.Service) {}
}

// The request's data for the `Create` API.
//	
// **Example**	
// TODO: add JSON example
message CreateServiceRequest {
  definition.Service definition = 1; // The service definition to use to create the Service.
}

// The response's data for the `Create` API.
//
// **Example**	
// TODO: add JSON example
message CreateServiceResponse {
  string hash = 1;  // The service's hash created.
  string sid = 2;   // The service's sid.
}

// The request's data for the `Delete` API.
//
// **Example**	
// TODO: add JSON example
message DeleteServiceRequest {
  string hash = 1;  // The service's hash to delete.
}

// The response's data for the `Delete` API, doesn't contain anything.
message DeleteServiceResponse {
}

// The request's data for the `Get` API.
//
// **Example**	
// TODO: add JSON example
message GetServiceRequest {
  string hash = 1;  // The service's hash to fetch.
}
