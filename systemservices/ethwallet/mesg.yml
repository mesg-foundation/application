name: "Ethereum Wallet"
sid: ethwallet
description: "Manage Ethereum accounts and sign transactions."
configuration:
  env:
    - MESG_KEYSTORE=/keystore
  volumes:
    - /keystore
tasks:
  list:
    name: "List accounts"
    description: "Return the addresses of existing account."
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully."
        data:
          addresses:
            name: "Addresses"
            description: "List of addresses."
            type: String
            repeated: true
      error: &outputError
        name: "Error"
        description: "Output when an error occurs."
        data:
          message:
            name: "Message"
            description: "The error message."
            type: String
  create:
    name: "Create a new account"
    description: "Create a new account with a passphrase. Make sure to backup the passphrase."
    inputs:
      passphrase: &passphrase
        name: "Passphrase"
        description: "Passphrase to use with the account."
        type: String
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully."
        data:
          address: &address
            name: "Address"
            description: "The public address of the account."
            type: String
      error: *outputError
  delete:
    name: "Delete an account"
    description: "Delete an account from the wallet. Need the address and its associated passphrase."
    inputs:
      address: *address
      passphrase: *passphrase
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully."
        data:
          address: *address
      error: *outputError
  export:
    name: "Export an account"
    description: "Export an existing account in order to backup it and import it in an other wallet. Respect the Web3 Secret Storage specification. See https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition for more information."
    inputs:
      address: *address
      passphrase: *passphrase
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully."
        data: &account
          address: *address
          id:
            name: "ID"
            description: "The id of the account."
            type: String
          version:
            name: "Version"
            description: "The version used to export the account."
            type: Number
          crypto:
            name: "Crypto"
            description: "The encrypted account."
            type: Object
      error: *outputError
  import:
    name: "Import an account"
    description: "Import an account. The account have to respect the Web3 Secret Storage specification. See https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition for more information."
    inputs:
      account:
        name: "Account"
        description: "The JSON encoded account."
        type: Object
        object: *account
      passphrase: *passphrase
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully."
        data:
          address: *address
      error: *outputError
  sign:
    name: "Sign transaction"
    description: "Sign a transaction with the specified account."
    inputs:
      address: *address
      passphrase: *passphrase
      transaction:
        name: "Transaction"
        description: "The transaction to sign."
        type: Object
        object:
          chainID:
            name: "Chain ID"
            description: "The ID of the chain the transaction is for. See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md#list-of-chain-ids."
            type: Number
          nonce:
            name: "Nonce"
            description: "Nonce to use."
            type: Number
          to:
            name: "To"
            description: "The to address."
            type: String
          value:
            name: "Value"
            description: "The value in Wei."
            type: String
          gas:
            name: "Gas"
            description: "The maximum gas to use to execute this transaction"
            type: Number
          gasPrice:
            name: "Gas price"
            description: "The gas price in Wei."
            type: String
          data:
            name: "Data"
            description: "The data of the transaction."
            type: Any
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully."
        data:
          raw:
            name: "Raw signed transaction"
            description: "The raw signed transaction."
            type: String
      error: *outputError
  importFromPrivateKey:
    name: "Import an account from a private key"
    description: "Import an account from a private key."
    inputs:
      privateKey:
        name: "Private key"
        description: "The private key to import."
        type: String
      passphrase: *passphrase
    outputs:
      success:
        name: "Success"
        description: "Output when the task executes successfully."
        data:
          address: *address
      error: *outputError
