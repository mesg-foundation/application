// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: x/service/internal/types/msg.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	service "github.com/mesg-foundation/engine/service"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The message to create a Service.
type MsgCreate struct {
	// Service's sid.
	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty" validate:"omitempty,printascii,max=63,domain"`
	// Service's name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" validate:"required,printascii"`
	// Service's description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" validate:"printascii"`
	// Configurations related to the service
	Configuration service.Service_Configuration `protobuf:"bytes,4,opt,name=configuration,proto3" json:"configuration" validate:"required"`
	// The list of tasks this service can execute.
	Tasks []*service.Service_Task `protobuf:"bytes,5,rep,name=tasks,proto3" json:"tasks,omitempty" validate:"dive,required"`
	// The list of events this service can emit.
	Events []*service.Service_Event `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty" validate:"dive,required"`
	// The container dependencies this service requires.
	Dependencies []*service.Service_Dependency `protobuf:"bytes,7,rep,name=dependencies,proto3" json:"dependencies,omitempty" validate:"dive,required"`
	// Service's repository url.
	Repository string `protobuf:"bytes,8,opt,name=repository,proto3" json:"repository,omitempty" validate:"omitempty,uri"`
	// The hash id of service's source code on IPFS.
	Source string `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty" validate:"required,printascii"`
	// The service's owner.
	Owner                github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,10,opt,name=owner,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"owner,omitempty" validate:"required,accaddress"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *MsgCreate) Reset()         { *m = MsgCreate{} }
func (m *MsgCreate) String() string { return proto.CompactTextString(m) }
func (*MsgCreate) ProtoMessage()    {}
func (*MsgCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_95b7141f6bdf41b9, []int{0}
}
func (m *MsgCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCreate.Unmarshal(m, b)
}
func (m *MsgCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCreate.Marshal(b, m, deterministic)
}
func (m *MsgCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreate.Merge(m, src)
}
func (m *MsgCreate) XXX_Size() int {
	return xxx_messageInfo_MsgCreate.Size(m)
}
func (m *MsgCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreate proto.InternalMessageInfo

func (m *MsgCreate) GetSid() string {
	if m != nil {
		return m.Sid
	}
	return ""
}

func (m *MsgCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreate) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreate) GetConfiguration() service.Service_Configuration {
	if m != nil {
		return m.Configuration
	}
	return service.Service_Configuration{}
}

func (m *MsgCreate) GetTasks() []*service.Service_Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *MsgCreate) GetEvents() []*service.Service_Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *MsgCreate) GetDependencies() []*service.Service_Dependency {
	if m != nil {
		return m.Dependencies
	}
	return nil
}

func (m *MsgCreate) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

func (m *MsgCreate) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *MsgCreate) GetOwner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Owner
	}
	return nil
}

func init() {
	proto.RegisterType((*MsgCreate)(nil), "mesg.service.types.MsgCreate")
}

func init() { proto.RegisterFile("x/service/internal/types/msg.proto", fileDescriptor_95b7141f6bdf41b9) }

var fileDescriptor_95b7141f6bdf41b9 = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x29, 0x5d, 0x0b, 0x75, 0xc7, 0xc5, 0x08, 0xc9, 0x1b, 0xd3, 0x52, 0x72, 0xea, 0xa1,
	0x4d, 0xc4, 0x26, 0xed, 0x50, 0xc6, 0x61, 0x2d, 0xdc, 0x40, 0x48, 0x1d, 0x27, 0x4e, 0xb8, 0xf6,
	0x6b, 0xb0, 0xba, 0xd8, 0xc1, 0xcf, 0x29, 0xeb, 0xc7, 0xe0, 0x5b, 0xf1, 0x29, 0xf2, 0x21, 0x7a,
	0xe4, 0x84, 0xea, 0x74, 0x24, 0x83, 0x4e, 0xdb, 0x29, 0x71, 0xde, 0xff, 0xf7, 0x4b, 0xec, 0xbc,
	0x47, 0xc2, 0xeb, 0x18, 0xc1, 0x2e, 0x95, 0x80, 0x58, 0x69, 0x07, 0x56, 0xf3, 0xab, 0xd8, 0xad,
	0x32, 0xc0, 0x38, 0xc5, 0x24, 0xca, 0xac, 0x71, 0x86, 0xd2, 0x14, 0x30, 0x89, 0xb6, 0xb1, 0xc8,
	0x57, 0x0f, 0xc3, 0xc4, 0x24, 0x26, 0xf6, 0xf5, 0x59, 0x3e, 0x8f, 0x37, 0x2b, 0xbf, 0xf0, 0x77,
	0x25, 0x77, 0x78, 0xf4, 0xb7, 0x5c, 0x1a, 0x6f, 0x0c, 0xfe, 0x71, 0xf8, 0xb3, 0x4d, 0x3a, 0x1f,
	0x31, 0x99, 0x58, 0xe0, 0x0e, 0xe8, 0x84, 0x34, 0x51, 0x49, 0xd6, 0xe8, 0x35, 0xfa, 0x9d, 0xf1,
	0xeb, 0x75, 0x11, 0x0c, 0x97, 0xfc, 0x4a, 0x49, 0xee, 0x60, 0x14, 0x9a, 0x54, 0x39, 0x48, 0x33,
	0xb7, 0x1a, 0x64, 0x56, 0x69, 0xc7, 0x51, 0x28, 0x35, 0x48, 0xf9, 0xf5, 0xdb, 0xb3, 0xd3, 0x81,
	0x34, 0x29, 0x57, 0x3a, 0x9c, 0x6e, 0x68, 0x7a, 0x46, 0xf6, 0x34, 0x4f, 0x81, 0x3d, 0xf6, 0x96,
	0x70, 0x5d, 0x04, 0xc7, 0x95, 0xc5, 0xc2, 0xf7, 0x5c, 0x59, 0x90, 0x35, 0x49, 0x38, 0xf5, 0x79,
	0xfa, 0x86, 0x74, 0x25, 0xa0, 0xb0, 0x2a, 0x73, 0xca, 0x68, 0xd6, 0xf4, 0xf8, 0xc1, 0xba, 0x08,
	0x5e, 0x54, 0x78, 0x9d, 0xaa, 0xa7, 0xa9, 0x24, 0xcf, 0x84, 0xd1, 0x73, 0x95, 0xe4, 0x96, 0x7b,
	0x7c, 0xaf, 0xd7, 0xe8, 0x77, 0x4f, 0x5e, 0x45, 0xfe, 0xd4, 0xfc, 0xce, 0xa3, 0xcb, 0xed, 0xce,
	0x27, 0xf5, 0xe0, 0xf8, 0xe5, 0xaf, 0x22, 0x78, 0xb4, 0x2e, 0x82, 0xe7, 0xff, 0x7f, 0x64, 0x38,
	0xbd, 0x2d, 0xa5, 0x1f, 0x48, 0xcb, 0x71, 0x5c, 0x20, 0x6b, 0xf5, 0x9a, 0xfd, 0xee, 0x09, 0xdb,
	0x65, 0xff, 0xcc, 0x71, 0x31, 0x3e, 0x5a, 0x17, 0x01, 0xab, 0x84, 0x52, 0x2d, 0x61, 0x50, 0x59,
	0x4b, 0x09, 0xfd, 0x44, 0xda, 0xb0, 0x04, 0xed, 0x90, 0xb5, 0xbd, 0xee, 0x60, 0x97, 0xee, 0xfd,
	0x26, 0x71, 0x8f, 0x6f, 0xab, 0xa1, 0x5f, 0xc9, 0xbe, 0x84, 0x0c, 0xb4, 0x04, 0x2d, 0x14, 0x20,
	0x7b, 0xe2, 0xb5, 0xc7, 0xbb, 0xb4, 0xef, 0x6e, 0x72, 0xab, 0x7b, 0xdc, 0xb7, 0x8c, 0xf4, 0x9c,
	0x10, 0x0b, 0x99, 0x41, 0xe5, 0x8c, 0x5d, 0xb1, 0xa7, 0xfe, 0x17, 0xfd, 0xc3, 0x57, 0x7d, 0x92,
	0x5b, 0x15, 0x4e, 0x6b, 0x79, 0x3a, 0x22, 0x6d, 0x34, 0xb9, 0x15, 0xc0, 0x3a, 0x0f, 0xee, 0x8d,
	0x2d, 0x41, 0x15, 0x69, 0x99, 0x1f, 0x1a, 0x2c, 0x23, 0xbd, 0x46, 0x7f, 0x7f, 0x7c, 0x79, 0x07,
	0xca, 0x85, 0xe0, 0x52, 0x5a, 0x40, 0x0c, 0x7f, 0x17, 0xc1, 0x30, 0x51, 0xee, 0x5b, 0x3e, 0x8b,
	0x84, 0x49, 0x63, 0x61, 0x30, 0x35, 0xb8, 0xbd, 0x0c, 0x51, 0x2e, 0xca, 0x79, 0x88, 0x2e, 0x84,
	0xb8, 0x28, 0x89, 0x69, 0xf9, 0x86, 0xf1, 0xf9, 0x97, 0x51, 0x8d, 0xdb, 0x1c, 0xde, 0x70, 0x6e,
	0x72, 0x2d, 0x7d, 0x0f, 0xc4, 0xa0, 0x13, 0xa5, 0x21, 0xbe, 0x6b, 0x62, 0x67, 0x6d, 0x3f, 0x58,
	0xa7, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x8e, 0x9d, 0x2f, 0xd4, 0x03, 0x00, 0x00,
}
