// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: x/execution/internal/types/msg.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_mesg_foundation_engine_hash "github.com/mesg-foundation/engine/hash"
	types "github.com/mesg-foundation/engine/protobuf/types"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The message to create an Execution.
type MsgCreate struct {
	// The msg's signer.
	Signer github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=signer,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"signer,omitempty" validate:"required,accaddress"`
	// taskKey to filter executions.
	TaskKey string        `protobuf:"bytes,2,opt,name=taskKey,proto3" json:"taskKey,omitempty" validate:"required,printascii"`
	Inputs  *types.Struct `protobuf:"bytes,3,opt,name=inputs,proto3" json:"inputs,omitempty"`
	// tags the execution.
	Tags         []string                                    `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" validate:"dive,printascii"`
	ParentHash   github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,5,opt,name=parentHash,proto3,casttype=github.com/mesg-foundation/engine/hash.Hash" json:"parentHash,omitempty" validate:"required_without=EventHash,omitempty,hash"`
	EventHash    github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,6,opt,name=eventHash,proto3,casttype=github.com/mesg-foundation/engine/hash.Hash" json:"eventHash,omitempty" validate:"required_without=ParentHash,omitempty,hash"`
	ProcessHash  github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,7,opt,name=processHash,proto3,casttype=github.com/mesg-foundation/engine/hash.Hash" json:"processHash,omitempty" validate:"omitempty,hash"`
	NodeKey      string                                      `protobuf:"bytes,8,opt,name=nodeKey,proto3" json:"nodeKey,omitempty"`
	ExecutorHash github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,9,opt,name=executorHash,proto3,casttype=github.com/mesg-foundation/engine/hash.Hash" json:"executorHash,omitempty" validate:"required,hash"`
	// price of running the execution.
	Price                string   `protobuf:"bytes,10,opt,name=price,proto3" json:"price,omitempty" validate:"coinsPositiveZero"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgCreate) Reset()         { *m = MsgCreate{} }
func (m *MsgCreate) String() string { return proto.CompactTextString(m) }
func (*MsgCreate) ProtoMessage()    {}
func (*MsgCreate) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c59efd9270dae25, []int{0}
}
func (m *MsgCreate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgCreate.Unmarshal(m, b)
}
func (m *MsgCreate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgCreate.Marshal(b, m, deterministic)
}
func (m *MsgCreate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreate.Merge(m, src)
}
func (m *MsgCreate) XXX_Size() int {
	return xxx_messageInfo_MsgCreate.Size(m)
}
func (m *MsgCreate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreate proto.InternalMessageInfo

func (m *MsgCreate) GetSigner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Signer
	}
	return nil
}

func (m *MsgCreate) GetTaskKey() string {
	if m != nil {
		return m.TaskKey
	}
	return ""
}

func (m *MsgCreate) GetInputs() *types.Struct {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *MsgCreate) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *MsgCreate) GetParentHash() github_com_mesg_foundation_engine_hash.Hash {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *MsgCreate) GetEventHash() github_com_mesg_foundation_engine_hash.Hash {
	if m != nil {
		return m.EventHash
	}
	return nil
}

func (m *MsgCreate) GetProcessHash() github_com_mesg_foundation_engine_hash.Hash {
	if m != nil {
		return m.ProcessHash
	}
	return nil
}

func (m *MsgCreate) GetNodeKey() string {
	if m != nil {
		return m.NodeKey
	}
	return ""
}

func (m *MsgCreate) GetExecutorHash() github_com_mesg_foundation_engine_hash.Hash {
	if m != nil {
		return m.ExecutorHash
	}
	return nil
}

func (m *MsgCreate) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

// The message to update an Execution.
type MsgUpdate struct {
	// The execution's executor.
	Executor github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=executor,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"executor,omitempty" validate:"required,accaddress"`
	// Hash represents execution.
	Hash github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,2,opt,name=hash,proto3,casttype=github.com/mesg-foundation/engine/hash.Hash" json:"hash,omitempty" validate:"required,hash"`
	// result pass to execution
	//
	// Types that are valid to be assigned to Result:
	//	*MsgUpdate_Outputs
	//	*MsgUpdate_Error
	Result               isMsgUpdate_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *MsgUpdate) Reset()         { *m = MsgUpdate{} }
func (m *MsgUpdate) String() string { return proto.CompactTextString(m) }
func (*MsgUpdate) ProtoMessage()    {}
func (*MsgUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c59efd9270dae25, []int{1}
}
func (m *MsgUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgUpdate.Unmarshal(m, b)
}
func (m *MsgUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgUpdate.Marshal(b, m, deterministic)
}
func (m *MsgUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdate.Merge(m, src)
}
func (m *MsgUpdate) XXX_Size() int {
	return xxx_messageInfo_MsgUpdate.Size(m)
}
func (m *MsgUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdate proto.InternalMessageInfo

type isMsgUpdate_Result interface {
	isMsgUpdate_Result()
}

type MsgUpdate_Outputs struct {
	Outputs *types.Struct `protobuf:"bytes,3,opt,name=outputs,proto3,oneof" json:"outputs,omitempty"`
}
type MsgUpdate_Error struct {
	Error string `protobuf:"bytes,4,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (*MsgUpdate_Outputs) isMsgUpdate_Result() {}
func (*MsgUpdate_Error) isMsgUpdate_Result()   {}

func (m *MsgUpdate) GetResult() isMsgUpdate_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *MsgUpdate) GetExecutor() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Executor
	}
	return nil
}

func (m *MsgUpdate) GetHash() github_com_mesg_foundation_engine_hash.Hash {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *MsgUpdate) GetOutputs() *types.Struct {
	if x, ok := m.GetResult().(*MsgUpdate_Outputs); ok {
		return x.Outputs
	}
	return nil
}

func (m *MsgUpdate) GetError() string {
	if x, ok := m.GetResult().(*MsgUpdate_Error); ok {
		return x.Error
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MsgUpdate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MsgUpdate_Outputs)(nil),
		(*MsgUpdate_Error)(nil),
	}
}

func init() {
	proto.RegisterType((*MsgCreate)(nil), "mesg.execution.types.MsgCreate")
	proto.RegisterType((*MsgUpdate)(nil), "mesg.execution.types.MsgUpdate")
}

func init() {
	proto.RegisterFile("x/execution/internal/types/msg.proto", fileDescriptor_6c59efd9270dae25)
}

var fileDescriptor_6c59efd9270dae25 = []byte{
	// 578 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0xc7, 0xeb, 0x36, 0x75, 0x9a, 0x6d, 0x4f, 0xab, 0xdf, 0x0f, 0x99, 0x82, 0xea, 0xc8, 0xe2,
	0x10, 0x89, 0xc4, 0x16, 0xe5, 0xcf, 0x01, 0x15, 0xa4, 0x06, 0x21, 0x45, 0x2a, 0x48, 0x95, 0x2b,
	0x2e, 0xbd, 0x54, 0x9b, 0xf5, 0xd4, 0x5e, 0x25, 0xde, 0x35, 0xbb, 0xeb, 0xd0, 0xbc, 0x00, 0xbc,
	0x0f, 0x0f, 0x64, 0xde, 0xc1, 0x47, 0x4e, 0xc8, 0xeb, 0x38, 0x49, 0x05, 0xa5, 0x12, 0x85, 0x93,
	0x3d, 0xda, 0xef, 0xcc, 0xe7, 0xbb, 0xe3, 0x19, 0xa3, 0x47, 0x57, 0x01, 0x5c, 0x01, 0xcd, 0x35,
	0x13, 0x3c, 0x60, 0x5c, 0x83, 0xe4, 0x64, 0x1a, 0xe8, 0x79, 0x06, 0x2a, 0x48, 0x55, 0xec, 0x67,
	0x52, 0x68, 0x81, 0xff, 0x4b, 0x41, 0xc5, 0xfe, 0x52, 0xe8, 0x9b, 0xf3, 0x7d, 0x2f, 0x16, 0xb1,
	0x08, 0x8c, 0x62, 0x9c, 0x5f, 0x06, 0x55, 0x64, 0x02, 0xf3, 0x56, 0x67, 0xee, 0x3f, 0x58, 0x1e,
	0xd7, 0x35, 0x95, 0x96, 0x39, 0xd5, 0xf5, 0xa1, 0xf7, 0xcd, 0x46, 0x9d, 0xf7, 0x2a, 0x7e, 0x23,
	0x81, 0x68, 0xc0, 0x13, 0x64, 0x2b, 0x16, 0x73, 0x90, 0x8e, 0xd5, 0xb5, 0x7a, 0x7b, 0xc3, 0xb3,
	0xb2, 0x70, 0x0f, 0x66, 0x64, 0xca, 0x22, 0xa2, 0xe1, 0xa5, 0x27, 0xe1, 0x63, 0xce, 0x24, 0x44,
	0x7d, 0x42, 0x29, 0x89, 0x22, 0x09, 0x4a, 0x79, 0xdf, 0x0b, 0x77, 0x10, 0x33, 0x9d, 0xe4, 0x63,
	0x9f, 0x8a, 0x34, 0xa0, 0x42, 0xa5, 0x42, 0x2d, 0x1e, 0x03, 0x15, 0x4d, 0x6a, 0xa8, 0x7f, 0x4c,
	0xe9, 0x71, 0x9d, 0x11, 0x2e, 0x10, 0xf8, 0x08, 0xb5, 0x35, 0x51, 0x93, 0x13, 0x98, 0x3b, 0x9b,
	0x5d, 0xab, 0xd7, 0x19, 0x7a, 0x37, 0xd0, 0x32, 0xc9, 0xb8, 0x26, 0x8a, 0x32, 0xe6, 0x85, 0x4d,
	0x0a, 0x1e, 0x20, 0x9b, 0xf1, 0x2c, 0xd7, 0xca, 0xd9, 0xea, 0x5a, 0xbd, 0xdd, 0xc3, 0xff, 0x7d,
	0xd3, 0xa0, 0xe6, 0xae, 0xfe, 0x99, 0xb9, 0x65, 0xb8, 0x10, 0xe1, 0x43, 0xd4, 0xd2, 0x24, 0x56,
	0x4e, 0xab, 0xbb, 0xd5, 0xeb, 0x0c, 0x0f, 0xca, 0xc2, 0xdd, 0x5f, 0x91, 0x22, 0x36, 0x83, 0x6b,
	0x14, 0xa3, 0xc5, 0x5f, 0x2c, 0x84, 0x32, 0x22, 0x81, 0xeb, 0x11, 0x51, 0x89, 0xb3, 0x6d, 0x5a,
	0x12, 0x97, 0x85, 0xfb, 0xec, 0x67, 0x93, 0x17, 0x9f, 0x98, 0x4e, 0x44, 0xae, 0x5f, 0xbd, 0x9d,
	0x2d, 0xf4, 0x7d, 0x91, 0x32, 0x0d, 0x69, 0xa6, 0xe7, 0xfd, 0x84, 0xa8, 0xa4, 0x6a, 0xd4, 0xe3,
	0xb5, 0x46, 0x55, 0x6e, 0x07, 0x97, 0x22, 0xe7, 0x11, 0x31, 0x1f, 0x1e, 0x78, 0xcc, 0x38, 0x04,
	0x95, 0xd4, 0xaf, 0xd2, 0xc3, 0x35, 0x34, 0xfe, 0x6c, 0xa1, 0x0e, 0x34, 0x85, 0x1d, 0xdb, 0x18,
	0x49, 0xca, 0xc2, 0x7d, 0xfe, 0x1b, 0x23, 0xa7, 0xcb, 0xf4, 0xbb, 0x3a, 0x59, 0xa1, 0x31, 0x47,
	0xbb, 0x99, 0x14, 0x14, 0x94, 0x32, 0x4e, 0xda, 0xc6, 0xc9, 0xbb, 0xb2, 0x70, 0xef, 0xaf, 0x9c,
	0xdc, 0x91, 0xb6, 0x0e, 0xc0, 0x0e, 0x6a, 0x73, 0x11, 0x41, 0x35, 0x23, 0x3b, 0xd5, 0x8c, 0x84,
	0x4d, 0x88, 0x05, 0xda, 0xab, 0x97, 0x41, 0x48, 0x63, 0xa5, 0x63, 0xac, 0x9c, 0x94, 0x85, 0xeb,
	0xfc, 0x62, 0x84, 0xfe, 0xc8, 0xc9, 0x35, 0x00, 0x7e, 0x81, 0xb6, 0x33, 0xc9, 0x28, 0x38, 0xc8,
	0x0c, 0x6b, 0xb7, 0x2c, 0xdc, 0x87, 0x2b, 0x12, 0x15, 0x8c, 0xab, 0x53, 0xa1, 0x98, 0x66, 0x33,
	0x38, 0x07, 0x29, 0xbc, 0xb0, 0x96, 0x7b, 0x5f, 0x37, 0xcd, 0x86, 0x7d, 0xc8, 0x2a, 0x21, 0x16,
	0x68, 0xa7, 0xa9, 0xfa, 0x2f, 0x77, 0x6c, 0x09, 0xc1, 0x17, 0xa8, 0x55, 0xdd, 0xc8, 0xac, 0xd8,
	0x5f, 0xee, 0x8f, 0x29, 0x8c, 0x9f, 0xa0, 0xb6, 0xc8, 0xf5, 0xad, 0x9b, 0x38, 0xda, 0x08, 0x1b,
	0x1d, 0xbe, 0x87, 0xb6, 0x41, 0x4a, 0x21, 0x9d, 0x56, 0xd5, 0xca, 0xd1, 0x46, 0x58, 0x87, 0xc3,
	0x1d, 0x64, 0x4b, 0x50, 0xf9, 0x54, 0x0f, 0x5f, 0x9f, 0x1f, 0xdd, 0xee, 0xe4, 0xe6, 0xff, 0xe6,
	0xd8, 0x36, 0xf4, 0xa7, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x07, 0x1d, 0x85, 0xd5, 0x5c, 0x05,
	0x00, 0x00,
}
