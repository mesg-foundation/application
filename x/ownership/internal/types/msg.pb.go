// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: x/ownership/internal/types/msg.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_mesg_foundation_engine_hash "github.com/mesg-foundation/engine/hash"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// The message to withdraw coins from an ownership.
type MsgWithdrawCoins struct {
	// The ownership's owner.
	Owner github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,1,opt,name=owner,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"owner,omitempty" validate:"required,accaddress"`
	// Hash of the ressource to withdraw from.
	ResourceHash github_com_mesg_foundation_engine_hash.Hash `protobuf:"bytes,2,opt,name=resourceHash,proto3,customtype=github.com/mesg-foundation/engine/hash.Hash" json:"resourceHash" validate:"required,hash"`
	// amount to withdraw
	Amount               string   `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty" validate:"required,coinsPositiveZero"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgWithdrawCoins) Reset()         { *m = MsgWithdrawCoins{} }
func (m *MsgWithdrawCoins) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawCoins) ProtoMessage()    {}
func (*MsgWithdrawCoins) Descriptor() ([]byte, []int) {
	return fileDescriptor_875fd6c128efe9e4, []int{0}
}
func (m *MsgWithdrawCoins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgWithdrawCoins.Unmarshal(m, b)
}
func (m *MsgWithdrawCoins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgWithdrawCoins.Marshal(b, m, deterministic)
}
func (m *MsgWithdrawCoins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawCoins.Merge(m, src)
}
func (m *MsgWithdrawCoins) XXX_Size() int {
	return xxx_messageInfo_MsgWithdrawCoins.Size(m)
}
func (m *MsgWithdrawCoins) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawCoins.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawCoins proto.InternalMessageInfo

func (m *MsgWithdrawCoins) GetOwner() github_com_cosmos_cosmos_sdk_types.AccAddress {
	if m != nil {
		return m.Owner
	}
	return nil
}

func (m *MsgWithdrawCoins) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgWithdrawCoins)(nil), "mesg.ownership.types.MsgWithdrawCoins")
}

func init() {
	proto.RegisterFile("x/ownership/internal/types/msg.proto", fileDescriptor_875fd6c128efe9e4)
}

var fileDescriptor_875fd6c128efe9e4 = []byte{
	// 320 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x6d, 0xc5, 0x82, 0x4b, 0x0f, 0xb2, 0x78, 0x58, 0x3c, 0xb8, 0x65, 0x51, 0xa8, 0x68,
	0x37, 0x07, 0x6f, 0x22, 0x42, 0xeb, 0xc5, 0x8b, 0x28, 0xf5, 0x20, 0xf4, 0x96, 0x26, 0xd3, 0x6c,
	0xb0, 0x9b, 0xa9, 0x99, 0x6c, 0xab, 0x0f, 0xe6, 0x3b, 0xf8, 0x0c, 0x1e, 0xf6, 0x21, 0xf6, 0xe8,
	0x49, 0x36, 0x5b, 0x44, 0xa1, 0xe2, 0x29, 0x19, 0x66, 0xbe, 0xf9, 0xff, 0xfc, 0x09, 0x8e, 0x5e,
	0x18, 0xae, 0x0c, 0x58, 0xca, 0xf4, 0x82, 0x69, 0xe3, 0xc0, 0x1a, 0x3e, 0x67, 0xee, 0x75, 0x01,
	0xc4, 0x72, 0x52, 0xe9, 0xc2, 0xa2, 0xc3, 0x70, 0x3f, 0x07, 0x52, 0xe9, 0xf7, 0x60, 0xea, 0xfb,
	0x07, 0x89, 0x42, 0x85, 0xcc, 0x4f, 0x4c, 0x8b, 0x19, 0xab, 0x2b, 0x5f, 0xf8, 0x5b, 0x43, 0x26,
	0x6f, 0xed, 0x60, 0xef, 0x96, 0xd4, 0xa3, 0x76, 0x99, 0xb4, 0x7c, 0x75, 0x8d, 0xda, 0x50, 0xa8,
	0x83, 0x1d, 0xbf, 0x2b, 0x6a, 0xf5, 0x5a, 0xfd, 0xee, 0xe8, 0xa1, 0x2a, 0xe3, 0xc3, 0x25, 0x9f,
	0x6b, 0xc9, 0x1d, 0x5c, 0x24, 0x16, 0x9e, 0x0b, 0x6d, 0x41, 0x9e, 0x71, 0x21, 0xb8, 0x94, 0x16,
	0x88, 0x92, 0xcf, 0x32, 0x1e, 0x28, 0xed, 0xb2, 0x62, 0x9a, 0x0a, 0xcc, 0x99, 0x40, 0xca, 0x91,
	0xd6, 0xc7, 0x80, 0xe4, 0x53, 0xe3, 0x38, 0x1d, 0x0a, 0x31, 0x6c, 0x88, 0x71, 0xa3, 0x10, 0x52,
	0xd0, 0xb5, 0x40, 0x58, 0x58, 0x01, 0x37, 0x9c, 0xb2, 0xa8, 0xed, 0x15, 0xef, 0xde, 0xcb, 0x78,
	0xeb, 0xa3, 0x8c, 0x4f, 0x7f, 0xec, 0xac, 0x9f, 0x38, 0x98, 0x61, 0x61, 0x24, 0x77, 0x1a, 0x0d,
	0x03, 0xa3, 0xb4, 0x01, 0x96, 0x71, 0xca, 0xd2, 0x1a, 0xad, 0xca, 0x38, 0xda, 0x60, 0xb2, 0xee,
	0x27, 0xe3, 0x5f, 0x22, 0xe1, 0x30, 0xe8, 0xf0, 0x1c, 0x0b, 0xe3, 0xa2, 0xed, 0x5e, 0xab, 0xbf,
	0x3b, 0x3a, 0xa9, 0xca, 0xf8, 0x78, 0x03, 0x2b, 0xea, 0x34, 0xee, 0x91, 0xb4, 0xd3, 0x4b, 0x98,
	0x80, 0xc5, 0x64, 0xbc, 0x06, 0x47, 0x57, 0x93, 0xcb, 0xff, 0xbd, 0xfd, 0xfd, 0x77, 0xd3, 0x8e,
	0x8f, 0xff, 0xfc, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x19, 0xd0, 0xc3, 0xe0, 0x01, 0x00, 0x00,
}
