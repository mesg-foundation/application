#!/bin/bash

set -e

DIR=$(pwd)
MESG_LOG_LEVEL=${MESG_LOG_LEVEL:-debug}
MESG_LOG_FORCECOLORS=${MESG_LOG_FORCECOLORS:-false}
VERSION=local
LDFLAGS="-X 'github.com/mesg-foundation/core/version.Version=$VERSION'"
LDFLAGS+=" -X 'github.com/mesg-foundation/core/config.EnvMarketplaceEndpoint=https://ropsten.infura.io/v3/6115ae2531f64c04a9a392cf500e5fbe'"
LDFLAGS+=" -X 'github.com/mesg-foundation/core/config.EnvMarketplaceAddress=0xeCC1A867F871323350A1A89FcAf69629a2d5085e'"
LDFLAGS+=" -X 'github.com/mesg-foundation/core/config.EnvMarketplaceToken=0x5861b3dc52339d4f976b7fa5d80db6cd6f477f1b'"
MESG_SERVICE_SERVER="core-service-server"

function deleteServiceServer {
  rm -rf tmp-systemservices
  if docker service list | grep -q core-service-server; then
    docker service rm $MESG_SERVICE_SERVER
  fi
}

deleteServiceServer
mkdir -p tmp-systemservices
for i in systemservices/* ; do
  if [ -d "$i" ]; then
    echo "Creating archive for $i..."
    cd $i
    file=$(basename "$i")
    tar -czf ../../tmp-systemservices/$file.tar.gz --exclude-from=.dockerignore .
    varname="$(tr '[:lower:]' '[:upper:]' <<< ${file:0:1})${file:1}"
    LDFLAGS+=" -X 'github.com/mesg-foundation/core/config.${varname}URL=http://$MESG_SERVICE_SERVER/$file.tar.gz'"
    cd ../..
  fi
done
echo "FROM nginx:alpine" >> tmp-systemservices/Dockerfile
echo "COPY . /usr/share/nginx/html" >> tmp-systemservices/Dockerfile
docker build tmp-systemservices -t $MESG_SERVICE_SERVER
docker service create -d \
  -p 8080:8080 \
  --name $MESG_SERVICE_SERVER \
  --network core \
  $MESG_SERVICE_SERVER

echo "compile core"
GOOS=linux GOARCH=amd64 go build -o ./bin/core -ldflags="$LDFLAGS" core/main.go

CORE_SUM_PATH="./bin/.core.sum"
touch "$CORE_SUM_PATH"

DOCKER_SUM_PATH="./bin/.Dockerfile.dev.sum"
touch "$DOCKER_SUM_PATH"

# check if core bin was cached
CORE_SUM="$(openssl md5 ./bin/core)"
CORE_SUM_PREV="$(cat $CORE_SUM_PATH)"
if [[ "$CORE_SUM" == "$CORE_SUM_PREV" ]]; then
  BINCACHED=true
else
  echo "$CORE_SUM" > "$CORE_SUM_PATH"
fi

# check if dockerfile was cached
DOCKER_SUM="$(openssl md5 ./Dockerfile.dev)"
DOCKER_SUM_PREV="$(cat $DOCKER_SUM_PATH)"
if [[ "$DOCKER_SUM" == "$DOCKER_SUM_PREV" ]]; then
  DOCKERCACHED=true
else
  echo "$DOCKER_SUM" > "$DOCKER_SUM_PATH"
fi

# create mesg data folder on host machine
mkdir -p "$HOME/.mesg/"

echo "build mesg/core image"
if [[ ! $BINCACHED ]] || [[ ! $DOCKERCACHED ]]; then
  docker build -f Dockerfile.dev -t "mesg/core:$VERSION" .
fi

# docker service rm core

trap onexit EXIT INT

function onexit {
  deleteServiceServer
  docker service rm core
}

networkExists=$(docker network list -f name=^core$ -f driver=overlay -q)
if [ "$networkExists" == "" ]; then
  docker network create --driver overlay core --label com.docker.stack.namespace=core
fi
docker service create \
  --name core \
  --tty \
  --label com.docker.stack.namespace=core --label com.docker.stack.image=mesg/core:$VERSION \
  --mount type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock --mount type=bind,source=$HOME/.mesg,destination=/mesg \
  --network core --publish 50052:50052 \
  mesg/core:$VERSION

docker service logs --follow --raw core
