version: 2

onlyTag: &onlyTag
  filters:
    tags:
      only: /^v.*/
    branches:
      ignore: /.*/
transient: &transient
  filters:
    tags:
      only: /.*/

runOnMachine: &runOnMachine
  machine:
    docker_layer_caching: true
  working_directory: ~/.go_workspace/src/github.com/mesg-foundation/core

jobs:
  "build_docker":
    <<: *runOnMachine
    steps:
      - checkout
      - run: docker pull mesg/core:latest
      - run: docker build -t mesg/core:$CIRCLE_SHA1 .

  "test":
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/mesg-foundation/core
    steps:
      - checkout
      - setup_remote_docker
      - run: go get -t ./...
      - run: docker swarm init
      - run: docker pull nginx
      - run: docker pull alpine
      - run: env CORE.IMAGE=mesg/core:$CIRCLE_SHA1 go test -timeout 180s -p 1 -coverprofile=coverage.txt ./...
      - run: bash <(curl -s https://codecov.io/bash)

  "publish_docker_version":
    <<: *runOnMachine
    steps:
      - checkout
      - run: docker pull mesg/core:latest
      - run: docker build -t mesg/core:$CIRCLE_TAG .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push mesg/core:$CIRCLE_TAG
  
  "publish_docker_latest":
    <<: *runOnMachine
    steps:
      - checkout
      - run: docker pull mesg/core:latest
      - run: docker build -t mesg/core:latest .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push mesg/core:latest

  "release_cli":
    <<: *runOnMachine
    steps:
      - checkout
      - run: go get ./...
      - run: go get github.com/karalabe/xgo
      - run: mkdir bin
      - run: cd bin; xgo --targets=darwin/386,darwin/amd64,linux/386,linux/amd64,windows/386,windows/amd64 -ldflags='-X main.version=$CIRCLE_TAG' -out mesg-core ../cli
      - run: sudo chmod +x ./bin/*
      - run: go get -u github.com/tcnksm/ghr
      - run: ghr -u mesg-foundation -r core -delete $CIRCLE_TAG ./bin

workflows:
  version: 2
  build_n_deploy:
    jobs:
      - "build_docker":
          <<: *transient
      - "test":
          <<: *transient
          requires:
            - "build_docker"
      - "publish_docker_version":
          <<: *onlyTag
          requires:
            - "test"
      - "publish_docker_latest":
          <<: *onlyTag
          requires:
            - "test"
      - "release_cli":
          <<: *onlyTag
          requires:
            - "publish_docker_latest"
