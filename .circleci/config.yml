# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test:
    docker:
      # specify the version
      - image: circleci/golang:1.10
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: /go/src/github.com/mesg-foundation/core
    steps:
      - checkout
      - setup_remote_docker
      # specify any ecbash command here prefixed with `run: `
      # - restore_cache:
      #     key: v1-mesg-core-test
      - run: go get -v -t ./...
      # - save_cache:
      #     key: v1-mesg-core-test
      #     paths:
      #       - /go
      - run: go test -coverprofile=coverage.txt -v ./...
      - run: bash <(curl -s https://codecov.io/bash)

  build_deploy:
    machine:
      docker_layer_caching: true
    working_directory: ~/.go_workspace/src/github.com/mesg-foundation/core
    steps:
      - checkout
      # - restore_cache:
      #     key: v1-mesg-core-build
      - run: go get -v -t ./...
      - run: go get -v github.com/karalabe/xgo
      # - save_cache:
      #     key: v1-mesg-core-build
      #     paths:
      #       - /go
      - run: mkdir bin
      - run: cd bin; xgo --targets=darwin/386,darwin/amd64,linux/386,linux/amd64,windows/386,windows/amd64 ../cli
      - run: sudo chmod +x ./bin/*
      - store_artifacts:
          path: ./bin
      - run: go get -u github.com/tcnksm/ghr
      - run: ghr -u mesg-foundation -r core -delete nightly ./bin
    # filters:
    #   branches:
    #     only: dev

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore: dev
  build_deploy:
    jobs:
      - test:
          filters:
            branches:
              only: dev
      - build_deploy:
          requires:
            - test
