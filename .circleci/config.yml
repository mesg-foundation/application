version: 2

run_on_machine: &run_on_machine
  machine:
    docker_layer_caching: true

run_on_docker: &run_on_docker
  docker:
    - image: circleci/golang:1.11.4

restore_go_mod_cache: &restore_go_mod_cache
  - restore_cache:
      keys:
        - go-mod-cache-{{ checksum "go.sum" }}
        - go-mod-cache
save_go_mod_cache: &save_go_mod_cache
  - save_cache:
      key: go-mod-cache-{{ checksum "go.sum" }}
      paths:
        - /go/pkg/mod

go_cache_dir: &go_cache_dir /tmp/go/cache

restore_go_cache: &restore_go_cache
  - restore_cache:
      keys:
        - go-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
        - go-cache-{{ .Branch }}
        - go-cache

save_go_cache: &save_go_cache
  - save_cache:
      key: go-cache-{{ .Branch }}-{{ .BuildNum }}
      paths:
        - *go_cache_dir

jobs:
  "test":
    <<: *run_on_docker
    environment:
      - GOCACHE: *go_cache_dir
    steps:
      - checkout
      - setup_remote_docker
      - run: docker swarm init
      - <<: *restore_go_mod_cache
      - run: go mod download
      - <<: *save_go_mod_cache
      - run: mkdir -p ~/.mesg
      - <<: *restore_go_cache
      - run: go test -v -timeout 300s -coverprofile=coverage.txt ./...
      - <<: *save_go_cache
      - run: bash <(curl -s https://codecov.io/bash)

  "test_integration":
    <<: *run_on_docker
    environment:
      - GOCACHE: *go_cache_dir
    steps:
      - checkout
      - setup_remote_docker
      - run: docker swarm init
      - run: docker build -t sleep docker-images/sleep/
      - run: docker build -t http-server docker-images/http-server/
      - <<: *restore_go_mod_cache
      - run: go mod download
      - <<: *save_go_mod_cache
      - run: mkdir -p ~/.mesg
      - run: go test -v -timeout 300s -p 1 -tags=integration ./...

  "lint":
    docker:
      - image: golangci/golangci-lint:v1.12
    environment:
      - GOCACHE: *go_cache_dir
    steps:
      - checkout
      - <<: *restore_go_mod_cache
      - run: go mod download
      - <<: *save_go_mod_cache
      - run: golangci-lint run

  "publish_docker_dev":
    <<: *run_on_machine
    steps:
      - checkout
      - run: docker build -t mesg/engine:dev --build-arg version="dev build `echo $CIRCLE_SHA1 | cut -c1-7`" .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push mesg/engine:dev

  "publish_docker_prod":
    <<: *run_on_machine
    steps:
      - checkout
      - run: docker build -t mesg/engine:$CIRCLE_TAG -t mesg/engine:latest --build-arg version=$CIRCLE_TAG .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push mesg/engine:$CIRCLE_TAG
      - run: docker push mesg/engine:latest

workflows:
  version: 2

  pull_request:
    jobs:
      - "lint":
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore:
                - "dev"
                - "master"
      - "test":
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore:
                - "dev"
                - "master"
      - "test_integration":
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore:
                - "dev"
                - "master"

  release_dev:
    jobs:
      - "lint":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: dev
      - "test":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: dev
      - "test_integration":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: dev
      - "publish_docker_dev":
          requires:
            - "test"
            - "test_integration"
            - "lint"

  test_prod:
    jobs:
      - "test":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master
      - "test_integration":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master
      - "lint":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master

  release_prod:
    jobs:
      - "lint":
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - "test":
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - "test_integration":
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - "publish_docker_prod":
          requires:
            - "test"
            - "lint"
            - "test_integration"
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
