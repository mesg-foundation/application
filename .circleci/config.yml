version: 2
jobs:
  build_docker:
    machine:
      docker_layer_caching: true
    working_directory: ~/.go_workspace/src/github.com/mesg-foundation/core
    steps:
      - checkout
      - run: docker pull mesg/daemon:latest
      - run: docker build -t mesg/daemon:$CIRCLE_SHA1 .
      - run: docker build -t mesg/daemon:local .

  test:
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/mesg-foundation/core
    steps:
      - checkout
      - setup_remote_docker
      - run: go get -t ./...
      - run: docker swarm init
      - run: env DAEMON.IMAGE=mesg/daemon:local go test -timeout 60s -p 1 -coverprofile=coverage.txt ./...
      - run: bash <(curl -s https://codecov.io/bash)

  publish_docker_version:
    machine:
      docker_layer_caching: true
    working_directory: ~/.go_workspace/src/github.com/mesg-foundation/core
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t mesg/daemon:$CIRCLE_TAG .
      - run: docker push mesg/daemon:$CIRCLE_TAG
  
  publish_docker_latest:
    machine:
      docker_layer_caching: true
    working_directory: ~/.go_workspace/src/github.com/mesg-foundation/core
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker build -t mesg/daemon:latest .
      - run: docker push mesg/daemon:latest

  release_cli:
    machine:
      docker_layer_caching: true
    working_directory: ~/.go_workspace/src/github.com/mesg-foundation/core
    steps:
      - checkout
      - run: go get ./...
      - run: go get github.com/karalabe/xgo
      - run: mkdir bin
      - run: cd bin; xgo --targets=darwin/386,darwin/amd64,linux/386,linux/amd64,windows/386,windows/amd64 -out mesg-core ../cli
      - run: sudo chmod +x ./bin/*
      - run: go get -u github.com/tcnksm/ghr
      - run: ghr -u mesg-foundation -r core -delete $CIRCLE_TAG ./bin

workflows:
  version: 2
  test_build_deploy:
    jobs:
      - build_docker
      - test:
          requires:
            - build_docker
      - publish_docker_version:
          requires:
            - test
          filters:
            tag: /v.*/
      - publish_docker_latest:
          requires:
              - publish_docker_version
            filters:
              tag: /v.*/
      - release_cli:
          requires:
            - test
          filters:
            tag: /v.*/
