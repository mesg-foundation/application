version: 2

run_on_machine: &run_on_machine
  machine:
    docker_layer_caching: false
    image: ubuntu-1604:201903-01

run_on_docker: &run_on_docker
  docker:
    - image: circleci/golang:1.14.0

go_path: &go_path /tmp/go/path

restore_go_path: &restore_go_path
  - restore_cache:
      keys:
        - go-path-{{ checksum "go.sum" }}

save_go_path: &save_go_path
  - save_cache:
      key: go-path-{{ checksum "go.sum" }}
      paths:
        - *go_path

go_cache_dir: &go_cache_dir /tmp/go/cache

restore_go_cache: &restore_go_cache
  - restore_cache:
      keys:
        - go-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
        - go-cache-{{ .Branch }}
        - go-cache

save_go_cache: &save_go_cache
  - save_cache:
      key: go-cache-{{ .Branch }}-{{ .BuildNum }}
      paths:
        - *go_cache_dir

jobs:
  "test":
    <<: *run_on_docker
    environment:
      - GOPATH : *go_path
      - GOCACHE: *go_cache_dir
    steps:
      - checkout
      - setup_remote_docker
      - run: docker swarm init
      - <<: *restore_go_cache
      - <<: *restore_go_path
      - run: make test
      - <<: *save_go_path
      - <<: *save_go_cache
      - run: bash <(curl -s https://codecov.io/bash)

  "test_e2e":
    <<: *run_on_machine
    environment:
      - GOPATH : *go_path
      - GOCACHE: *go_cache_dir
    steps:
      - checkout
      - run:
          name: "Install Go"
          command: |
            sudo rm -rf /usr/local/go
            curl -sSL "https://dl.google.com/go/go1.14.linux-amd64.tar.gz" | sudo tar -xz -C /usr/local/
            echo "export PATH=$PATH:/usr/local/go/bin" >> $BASH_ENV
      - run: docker swarm init
      - <<: *restore_go_cache
      - <<: *restore_go_path
      - run: make e2e
      - <<: *save_go_path
      - <<: *save_go_cache

  "lint":
    docker:
      - image: golangci/golangci-lint:v1.21
    steps:
      - checkout
      - run: make lint

  "publish_docker_dev":
    <<: *run_on_machine
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: make docker-publish-dev version=`echo $CIRCLE_SHA1 | cut -c1-7`

  "publish_docker_prod":
    <<: *run_on_machine
    steps:
      - checkout
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: make docker-publish version=$CIRCLE_TAG

workflows:
  version: 2

  pull_request:
    jobs:
      - "lint":
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore:
                - "dev"
                - "master"
      - "test":
          filters:
            tags:
              ignore: /.*/
            branches:
              ignore:
                - "dev"
                - "master"
      - "test_e2e":
          requires:
            - "test"
            - "lint"

  release_dev:
    jobs:
      - "lint":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: dev
      - "test":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: dev
      - "test_e2e":
          requires:
            - "test"
            - "lint"
      - "publish_docker_dev":
          requires:
            - "test_e2e"

  test_prod:
    jobs:
      - "test":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master
      - "lint":
          filters:
            tags:
              ignore: /.*/
            branches:
              only: master
      - "test_e2e":
          requires:
            - "test"
            - "lint"

  release_prod:
    jobs:
      - "lint":
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - "test":
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - "test_e2e":
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - "test"
            - "lint"
      - "publish_docker_prod":
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          requires:
            - "test_e2e"
