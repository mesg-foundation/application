// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: runner.proto

package runner

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_mesg_foundation_engine_cosmos_address "github.com/mesg-foundation/engine/cosmos/address"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Runner represents one node service's instance.
type Runner struct {
	// Runner's hash
	Hash github_com_mesg_foundation_engine_cosmos_address.RunAddress `protobuf:"bytes,1,opt,name=hash,proto3,casttype=github.com/mesg-foundation/engine/cosmos/address.RunAddress" json:"hash,omitempty" hash:"-"`
	// address of the engine of this runner
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty" hash:"name:2"`
	// instanceHash is hash of the instance that runner will handle
	InstanceHash         github_com_mesg_foundation_engine_cosmos_address.InstAddress `protobuf:"bytes,3,opt,name=instanceHash,proto3,casttype=github.com/mesg-foundation/engine/cosmos/address.InstAddress" json:"instanceHash,omitempty" hash:"name:3"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *Runner) Reset()         { *m = Runner{} }
func (m *Runner) String() string { return proto.CompactTextString(m) }
func (*Runner) ProtoMessage()    {}
func (*Runner) Descriptor() ([]byte, []int) {
	return fileDescriptor_48eceea7e2abc593, []int{0}
}
func (m *Runner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Runner.Unmarshal(m, b)
}
func (m *Runner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Runner.Marshal(b, m, deterministic)
}
func (m *Runner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Runner.Merge(m, src)
}
func (m *Runner) XXX_Size() int {
	return xxx_messageInfo_Runner.Size(m)
}
func (m *Runner) XXX_DiscardUnknown() {
	xxx_messageInfo_Runner.DiscardUnknown(m)
}

var xxx_messageInfo_Runner proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Runner)(nil), "mesg.types.Runner")
}

func init() { proto.RegisterFile("runner.proto", fileDescriptor_48eceea7e2abc593) }

var fileDescriptor_48eceea7e2abc593 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x2a, 0xcd, 0xcb,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xca, 0x4d, 0x2d, 0x4e, 0xd7, 0x2b,
	0xa9, 0x2c, 0x48, 0x2d, 0x96, 0x52, 0x4a, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0x8b, 0x27, 0x95, 0xa6,
	0xe9, 0x83, 0x78, 0x60, 0x0e, 0x98, 0x05, 0x51, 0xaf, 0xd4, 0xcb, 0xc4, 0xc5, 0x16, 0x04, 0x36,
	0x40, 0x28, 0x9e, 0x8b, 0x25, 0x23, 0xb1, 0x38, 0x43, 0x82, 0x51, 0x81, 0x51, 0x83, 0xc7, 0xc9,
	0xfb, 0xd3, 0x3d, 0x79, 0x0e, 0x10, 0xdf, 0x4a, 0x49, 0x57, 0xe9, 0xd7, 0x3d, 0x79, 0xeb, 0xf4,
	0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0x90, 0x1d, 0xba, 0x69, 0xf9, 0xa5,
	0x79, 0x29, 0x89, 0x25, 0x99, 0xf9, 0x79, 0xfa, 0xa9, 0x79, 0xe9, 0x99, 0x79, 0xa9, 0xfa, 0xc9,
	0xf9, 0xc5, 0xb9, 0xf9, 0xc5, 0xfa, 0x89, 0x29, 0x29, 0x45, 0xa9, 0xc5, 0xc5, 0x7a, 0x41, 0xa5,
	0x79, 0x8e, 0x10, 0x66, 0x10, 0xd8, 0x60, 0x21, 0x6d, 0x2e, 0x76, 0xa8, 0x9c, 0x04, 0x93, 0x02,
	0xa3, 0x06, 0xa7, 0x93, 0xe0, 0xa7, 0x7b, 0xf2, 0xbc, 0x10, 0x3b, 0xf2, 0x12, 0x73, 0x53, 0xad,
	0x8c, 0x94, 0x82, 0x60, 0x2a, 0x84, 0x4a, 0xb9, 0x78, 0x32, 0xf3, 0x8a, 0x4b, 0x12, 0xf3, 0x92,
	0x53, 0x3d, 0x40, 0xae, 0x62, 0x06, 0xbb, 0x2a, 0x10, 0x4d, 0x87, 0x31, 0xc8, 0x69, 0x36, 0x24,
	0x3b, 0xcd, 0x33, 0xaf, 0xb8, 0x04, 0xe6, 0x36, 0x14, 0x6b, 0x9c, 0xf4, 0x4e, 0x3c, 0x94, 0x63,
	0x88, 0xd2, 0x20, 0x6c, 0x22, 0x24, 0xd4, 0x93, 0xd8, 0xc0, 0xc1, 0x68, 0x0c, 0x08, 0x00, 0x00,
	0xff, 0xff, 0x3e, 0x39, 0xd7, 0xc2, 0x86, 0x01, 0x00, 0x00,
}
